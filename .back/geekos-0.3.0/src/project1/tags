!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALL_TARGETS	build/Makefile	/^ALL_TARGETS := fd.img diskc.img$/;"	m
ALT_MASK	src/geekos/keyboard.c	53;"	d	file:
AMBER	include/geekos/screen.h	21;"	d
ASCII_BS	include/geekos/keyboard.h	118;"	d
ASCII_ESC	include/geekos/keyboard.h	117;"	d
ASSERT	src/common/fmtout.c	48;"	d	file:
ATTRIB	include/geekos/screen.h	24;"	d
Add_Digit	src/geekos/screen.c	/^static void Add_Digit(int c)$/;"	f	file:
Add_Page_Range	src/geekos/mem.c	/^static void Add_Page_Range(ulong_t start, ulong_t end, int flags)$/;"	f	file:
After_Err	src/geekos/lowlevel.asm	/^After_Err:$/;"	l
After_No_Err	src/geekos/lowlevel.asm	/^After_No_Err:$/;"	l
Alloc_Page	src/geekos/mem.c	/^void* Alloc_Page(void)$/;"	f
Allocate_File	src/geekos/vfs.c	/^struct File *Allocate_File(struct File_Ops *ops, int filePos, int endPos, void *fsData,$/;"	f
Allocate_Segment_Descriptor	src/geekos/gdt.c	/^struct Segment_Descriptor* Allocate_Segment_Descriptor(void)$/;"	f
Argument_Block	include/geekos/argblock.h	/^struct Argument_Block {$/;"	s
BDH	src/geekos/bget.c	518;"	d	file:
BFH	src/geekos/bget.c	526;"	d	file:
BH	src/geekos/bget.c	510;"	d	file:
BIOS_SIGNATURE_OFFSET	src/geekos/bootsect.asm	/^BIOS_SIGNATURE_OFFSET equ 510$/;"	d
BIOS_SIGNATURE_OFFSET	src/geekos/defs.asm	/^BIOS_SIGNATURE_OFFSET equ 510$/;"	d
BLACK	include/geekos/screen.h	15;"	d
BLOCKDEV_MAX_NAME_LEN	include/geekos/fileio.h	30;"	d
BLOCK_READ	include/geekos/blockdev.h	/^    BLOCK_READ, BLOCK_WRITE$/;"	e	enum:Request_Type
BLOCK_WRITE	include/geekos/blockdev.h	/^    BLOCK_READ, BLOCK_WRITE$/;"	e	enum:Request_Type
BLUE	include/geekos/screen.h	16;"	d
BOOTSEG	src/geekos/defs.asm	/^BOOTSEG equ 0x07C0$/;"	d
BRIGHT	include/geekos/screen.h	23;"	d
BSS_END	include/geekos/defs.h	50;"	d
BSS_END	include/geekos/defs.h	53;"	d
BSS_START	include/geekos/defs.h	49;"	d
BSS_START	include/geekos/defs.h	52;"	d
BUILDFAT	build/Makefile	/^BUILDFAT := tools\/builtFat.exe$/;"	m
Before_Err	src/geekos/lowlevel.asm	/^Before_Err:$/;"	l
Before_No_Err	src/geekos/lowlevel.asm	/^Before_No_Err:$/;"	l
BeginText	src/geekos/bootsect.asm	/^BeginText:	; needed to calculate padding bytes to fill the sector$/;"	l
BeginText	src/geekos/fd_boot.asm	/^BeginText:	; needed to calculate padding bytes to fill the sector$/;"	l
Begin_IRQ	src/geekos/irq.c	/^void Begin_IRQ(struct Interrupt_State* state)$/;"	f
Begin_Int_Atomic	include/geekos/int.h	/^static __inline__ bool Begin_Int_Atomic(void) $/;"	f
BestFit	src/geekos/bget.c	443;"	d	file:
Block_Device	include/geekos/blockdev.h	/^struct Block_Device {$/;"	s
Block_Device_Ops	include/geekos/blockdev.h	/^struct Block_Device_Ops {$/;"	s
Block_Read	src/geekos/blockdev.c	/^int Block_Read(struct Block_Device *dev, int blockNum, void *buf)$/;"	f
Block_Request	include/geekos/blockdev.h	/^struct Block_Request {$/;"	s
Block_Write	src/geekos/blockdev.c	/^int Block_Write(struct Block_Device *dev, int blockNum, void *buf)$/;"	f
Boot_Info	include/geekos/bootinfo.h	/^struct Boot_Info {$/;"	s
CALIBRATE_NUM_TICKS	src/geekos/timer.c	32;"	d	file:
CC_GENERAL_OPTS	build/Makefile	/^CC_GENERAL_OPTS := $(GENERAL_OPTS)$/;"	m
CC_KERNEL_OPTS	build/Makefile	/^CC_KERNEL_OPTS := -g -DGEEKOS -I$(PROJECT_ROOT)\/include$/;"	m
CC_USER_OPTS	build/Makefile	/^CC_USER_OPTS := -I$(PROJECT_ROOT)\/include -I$(PROJECT_ROOT)\/include\/libc \\$/;"	m
CMOS_FLOPPY_INDEX	src/geekos/floppy.c	122;"	d	file:
CMOS_IN	src/geekos/floppy.c	121;"	d	file:
CMOS_OUT	src/geekos/floppy.c	120;"	d	file:
COMMON_C_OBJS	build/Makefile	/^COMMON_C_OBJS := $(COMMON_C_SRCS:%.c=common\/%.o)$/;"	m
COMMON_C_SRCS	build/Makefile	/^COMMON_C_SRCS := fmtout.c string.c memmove.c$/;"	m
COMPLETED	include/geekos/blockdev.h	/^    PENDING, COMPLETED, ERROR$/;"	e	enum:Request_State
CRT_ADDR_REG	include/geekos/screen.h	39;"	d
CRT_CURSOR_LOC_HIGH_REG	include/geekos/screen.h	41;"	d
CRT_CURSOR_LOC_LOW_REG	include/geekos/screen.h	42;"	d
CRT_DATA_REG	include/geekos/screen.h	40;"	d
CTRL_MASK	src/geekos/keyboard.c	52;"	d	file:
CYAN	include/geekos/screen.h	18;"	d
CYLINDERS	src/geekos/defs.asm	/^CYLINDERS equ 80$/;"	d
Calibrate	src/geekos/floppy.c	/^static bool Calibrate(int drive)$/;"	f	file:
Calibrate_Delay	src/geekos/timer.c	/^static void Calibrate_Delay(void)$/;"	f	file:
Check_Range_Proper	include/geekos/range.h	/^Check_Range_Proper(ulong_t start, ulong_t size)$/;"	f
Check_Range_Under	include/geekos/range.h	/^Check_Range_Under(ulong_t start, ulong_t size, ulong_t max)$/;"	f
Clear_Bit	src/geekos/bitset.c	/^void Clear_Bit(void *bitSet, uint_t bitPos)$/;"	f
Clear_Screen	src/geekos/screen.c	/^void Clear_Screen(void)$/;"	f
Clear_To_EOL	src/geekos/screen.c	/^static void Clear_To_EOL(void)$/;"	f	file:
Close	include/geekos/blockdev.h	/^    int (*Close)(struct Block_Device *dev);$/;"	m	struct:Block_Device_Ops
Close	include/geekos/vfs.h	/^    int (*Close)(struct File *file);$/;"	m	struct:File_Ops
Close	src/geekos/vfs.c	/^int Close(struct File *file)$/;"	f
Close_Block_Device	src/geekos/blockdev.c	/^int Close_Block_Device(struct Block_Device *dev)$/;"	f
CompactTries	src/geekos/bget.c	1281;"	d	file:
Cond_Broadcast	src/geekos/synch.c	/^void Cond_Broadcast(struct Condition* cond)$/;"	f
Cond_Init	src/geekos/synch.c	/^void Cond_Init(struct Condition* cond)$/;"	f
Cond_Signal	src/geekos/synch.c	/^void Cond_Signal(struct Condition* cond)$/;"	f
Cond_Wait	src/geekos/synch.c	/^void Cond_Wait(struct Condition* cond, struct Mutex* mutex)$/;"	f
Condition	include/geekos/synch.h	/^struct Condition {$/;"	s
Console_State	src/geekos/screen.c	/^struct Console_State {$/;"	s	file:
Copy_Stat	src/geekos/pfat.c	/^static void Copy_Stat(struct VFS_File_Stat *stat, directoryEntry *entry)$/;"	f	file:
Create_Bit_Set	src/geekos/bitset.c	/^void* Create_Bit_Set(uint_t totalBits)$/;"	f
Create_Directory	include/geekos/vfs.h	/^    int (*Create_Directory)(struct Mount_Point *mountPoint, const char *path);$/;"	m	struct:Mount_Point_Ops
Create_Directory	src/geekos/vfs.c	/^int Create_Directory(const char *path)$/;"	f
Create_Request	src/geekos/blockdev.c	/^struct Block_Request *Create_Request(struct Block_Device *dev, enum Request_Type type,$/;"	f
Create_Thread	src/geekos/kthread.c	/^static struct Kernel_Thread* Create_Thread(int priority, bool detached)$/;"	f	file:
DEFAULT_ATTRIBUTE	src/geekos/screen.c	29;"	d	file:
DEFAULT_MAX_TICKS	src/geekos/timer.c	38;"	d	file:
DEFINE_LINK	include/geekos/list.h	28;"	d
DEFINE_LIST	include/geekos/list.h	19;"	d
DF_1_CONFALT	include/geekos/elf.h	803;"	d
DF_1_DIRECT	include/geekos/elf.h	798;"	d
DF_1_DISPRELDNE	include/geekos/elf.h	805;"	d
DF_1_DISPRELPND	include/geekos/elf.h	806;"	d
DF_1_EDITED	include/geekos/elf.h	811;"	d
DF_1_ENDFILTEE	include/geekos/elf.h	804;"	d
DF_1_GLOBAL	include/geekos/elf.h	791;"	d
DF_1_GLOBAUDIT	include/geekos/elf.h	814;"	d
DF_1_GROUP	include/geekos/elf.h	792;"	d
DF_1_IGNMULDEF	include/geekos/elf.h	808;"	d
DF_1_INITFIRST	include/geekos/elf.h	795;"	d
DF_1_INTERPOSE	include/geekos/elf.h	800;"	d
DF_1_LOADFLTR	include/geekos/elf.h	794;"	d
DF_1_NODEFLIB	include/geekos/elf.h	801;"	d
DF_1_NODELETE	include/geekos/elf.h	793;"	d
DF_1_NODIRECT	include/geekos/elf.h	807;"	d
DF_1_NODUMP	include/geekos/elf.h	802;"	d
DF_1_NOHDR	include/geekos/elf.h	810;"	d
DF_1_NOKSYMS	include/geekos/elf.h	809;"	d
DF_1_NOOPEN	include/geekos/elf.h	796;"	d
DF_1_NORELOC	include/geekos/elf.h	812;"	d
DF_1_NOW	include/geekos/elf.h	790;"	d
DF_1_ORIGIN	include/geekos/elf.h	797;"	d
DF_1_SINGLETON	include/geekos/elf.h	815;"	d
DF_1_SYMINTPOSE	include/geekos/elf.h	813;"	d
DF_1_TRANS	include/geekos/elf.h	799;"	d
DF_BIND_NOW	include/geekos/elf.h	785;"	d
DF_ORIGIN	include/geekos/elf.h	782;"	d
DF_P1_GROUPPERM	include/geekos/elf.h	823;"	d
DF_P1_LAZYLOAD	include/geekos/elf.h	822;"	d
DF_STATIC_TLS	include/geekos/elf.h	786;"	d
DF_SYMBOLIC	include/geekos/elf.h	783;"	d
DF_TEXTREL	include/geekos/elf.h	784;"	d
DMA_ADDR_REG	src/geekos/dma.c	81;"	d	file:
DMA_BASE	src/geekos/dma.c	65;"	d	file:
DMA_CLEAR_FF_REG	src/geekos/dma.c	71;"	d	file:
DMA_CLEAR_MASK_REG	src/geekos/dma.c	74;"	d	file:
DMA_COMMAND_REG	src/geekos/dma.c	66;"	d	file:
DMA_COUNT_REG	src/geekos/dma.c	82;"	d	file:
DMA_Direction	include/geekos/dma.h	/^enum DMA_Direction {$/;"	g
DMA_MASK_ALL_REG	src/geekos/dma.c	75;"	d	file:
DMA_MASK_ENABLE	src/geekos/dma.c	87;"	d	file:
DMA_MASK_ONE_REG	src/geekos/dma.c	69;"	d	file:
DMA_MASTER_CLEAR_REG	src/geekos/dma.c	72;"	d	file:
DMA_MAX_ADDR	src/geekos/dma.c	59;"	d	file:
DMA_MODE_CASCADE	src/geekos/dma.c	93;"	d	file:
DMA_MODE_READ	src/geekos/dma.c	94;"	d	file:
DMA_MODE_REG	src/geekos/dma.c	70;"	d	file:
DMA_MODE_SINGLE	src/geekos/dma.c	92;"	d	file:
DMA_MODE_WRITE	src/geekos/dma.c	95;"	d	file:
DMA_PAGE_REG	src/geekos/dma.c	106;"	d	file:
DMA_READ	include/geekos/dma.h	/^    DMA_READ,$/;"	e	enum:DMA_Direction
DMA_REQUEST_REG	src/geekos/dma.c	68;"	d	file:
DMA_STATUS_REG	src/geekos/dma.c	67;"	d	file:
DMA_TEMP_REG	src/geekos/dma.c	73;"	d	file:
DMA_WRITE	include/geekos/dma.h	/^    DMA_WRITE$/;"	e	enum:DMA_Direction
DTF_1_CONFEXP	include/geekos/elf.h	819;"	d
DTF_1_PARINIT	include/geekos/elf.h	818;"	d
DT_ADDRNUM	include/geekos/elf.h	754;"	d
DT_ADDRRNGHI	include/geekos/elf.h	752;"	d
DT_ADDRRNGLO	include/geekos/elf.h	740;"	d
DT_ADDRTAGIDX	include/geekos/elf.h	753;"	d
DT_ALPHA_NUM	include/geekos/elf.h	1960;"	d
DT_ALPHA_PLTRO	include/geekos/elf.h	1959;"	d
DT_AUDIT	include/geekos/elf.h	748;"	d
DT_AUXILIARY	include/geekos/elf.h	776;"	d
DT_BIND_NOW	include/geekos/elf.h	698;"	d
DT_CHECKSUM	include/geekos/elf.h	722;"	d
DT_CONFIG	include/geekos/elf.h	746;"	d
DT_DEBUG	include/geekos/elf.h	695;"	d
DT_DEPAUDIT	include/geekos/elf.h	747;"	d
DT_ENCODING	include/geekos/elf.h	705;"	d
DT_EXTRANUM	include/geekos/elf.h	779;"	d
DT_EXTRATAGIDX	include/geekos/elf.h	778;"	d
DT_FEATURE_1	include/geekos/elf.h	726;"	d
DT_FILTER	include/geekos/elf.h	777;"	d
DT_FINI	include/geekos/elf.h	687;"	d
DT_FINI_ARRAY	include/geekos/elf.h	700;"	d
DT_FINI_ARRAYSZ	include/geekos/elf.h	702;"	d
DT_FLAGS	include/geekos/elf.h	704;"	d
DT_FLAGS_1	include/geekos/elf.h	764;"	d
DT_GNU_CONFLICT	include/geekos/elf.h	744;"	d
DT_GNU_CONFLICTSZ	include/geekos/elf.h	720;"	d
DT_GNU_HASH	include/geekos/elf.h	741;"	d
DT_GNU_LIBLIST	include/geekos/elf.h	745;"	d
DT_GNU_LIBLISTSZ	include/geekos/elf.h	721;"	d
DT_GNU_PRELINKED	include/geekos/elf.h	719;"	d
DT_HASH	include/geekos/elf.h	678;"	d
DT_HIOS	include/geekos/elf.h	710;"	d
DT_HIPROC	include/geekos/elf.h	712;"	d
DT_IA_64_NUM	include/geekos/elf.h	2624;"	d
DT_IA_64_PLT_RESERVE	include/geekos/elf.h	2623;"	d
DT_INIT	include/geekos/elf.h	686;"	d
DT_INIT_ARRAY	include/geekos/elf.h	699;"	d
DT_INIT_ARRAYSZ	include/geekos/elf.h	701;"	d
DT_JMPREL	include/geekos/elf.h	697;"	d
DT_LOOS	include/geekos/elf.h	709;"	d
DT_LOPROC	include/geekos/elf.h	711;"	d
DT_MIPS_AUX_DYNAMIC	include/geekos/elf.h	1636;"	d
DT_MIPS_BASE_ADDRESS	include/geekos/elf.h	1590;"	d
DT_MIPS_COMPACT_SIZE	include/geekos/elf.h	1634;"	d
DT_MIPS_CONFLICT	include/geekos/elf.h	1592;"	d
DT_MIPS_CONFLICTNO	include/geekos/elf.h	1595;"	d
DT_MIPS_CXX_FLAGS	include/geekos/elf.h	1619;"	d
DT_MIPS_DELTA_CLASS	include/geekos/elf.h	1602;"	d
DT_MIPS_DELTA_CLASSSYM	include/geekos/elf.h	1615;"	d
DT_MIPS_DELTA_CLASSSYM_NO	include/geekos/elf.h	1617;"	d
DT_MIPS_DELTA_CLASS_NO	include/geekos/elf.h	1603;"	d
DT_MIPS_DELTA_INSTANCE	include/geekos/elf.h	1605;"	d
DT_MIPS_DELTA_INSTANCE_NO	include/geekos/elf.h	1606;"	d
DT_MIPS_DELTA_RELOC	include/geekos/elf.h	1608;"	d
DT_MIPS_DELTA_RELOC_NO	include/geekos/elf.h	1609;"	d
DT_MIPS_DELTA_SYM	include/geekos/elf.h	1611;"	d
DT_MIPS_DELTA_SYM_NO	include/geekos/elf.h	1613;"	d
DT_MIPS_DYNSTR_ALIGN	include/geekos/elf.h	1628;"	d
DT_MIPS_FLAGS	include/geekos/elf.h	1589;"	d
DT_MIPS_GOTSYM	include/geekos/elf.h	1599;"	d
DT_MIPS_GP_VALUE	include/geekos/elf.h	1635;"	d
DT_MIPS_HIDDEN_GOTIDX	include/geekos/elf.h	1624;"	d
DT_MIPS_HIPAGENO	include/geekos/elf.h	1600;"	d
DT_MIPS_ICHECKSUM	include/geekos/elf.h	1587;"	d
DT_MIPS_INTERFACE	include/geekos/elf.h	1627;"	d
DT_MIPS_INTERFACE_SIZE	include/geekos/elf.h	1629;"	d
DT_MIPS_IVERSION	include/geekos/elf.h	1588;"	d
DT_MIPS_LIBLIST	include/geekos/elf.h	1593;"	d
DT_MIPS_LIBLISTNO	include/geekos/elf.h	1596;"	d
DT_MIPS_LOCALPAGE_GOTIDX	include/geekos/elf.h	1622;"	d
DT_MIPS_LOCAL_GOTIDX	include/geekos/elf.h	1623;"	d
DT_MIPS_LOCAL_GOTNO	include/geekos/elf.h	1594;"	d
DT_MIPS_MSYM	include/geekos/elf.h	1591;"	d
DT_MIPS_NUM	include/geekos/elf.h	1643;"	d
DT_MIPS_OPTIONS	include/geekos/elf.h	1626;"	d
DT_MIPS_PERF_SUFFIX	include/geekos/elf.h	1632;"	d
DT_MIPS_PIXIE_INIT	include/geekos/elf.h	1620;"	d
DT_MIPS_PLTGOT	include/geekos/elf.h	1638;"	d
DT_MIPS_PROTECTED_GOTIDX	include/geekos/elf.h	1625;"	d
DT_MIPS_RLD_MAP	include/geekos/elf.h	1601;"	d
DT_MIPS_RLD_TEXT_RESOLVE_ADDR	include/geekos/elf.h	1630;"	d
DT_MIPS_RLD_VERSION	include/geekos/elf.h	1585;"	d
DT_MIPS_RWPLT	include/geekos/elf.h	1642;"	d
DT_MIPS_SYMBOL_LIB	include/geekos/elf.h	1621;"	d
DT_MIPS_SYMTABNO	include/geekos/elf.h	1597;"	d
DT_MIPS_TIME_STAMP	include/geekos/elf.h	1586;"	d
DT_MIPS_UNREFEXTNO	include/geekos/elf.h	1598;"	d
DT_MOVEENT	include/geekos/elf.h	724;"	d
DT_MOVESZ	include/geekos/elf.h	725;"	d
DT_MOVETAB	include/geekos/elf.h	750;"	d
DT_NEEDED	include/geekos/elf.h	675;"	d
DT_NULL	include/geekos/elf.h	674;"	d
DT_NUM	include/geekos/elf.h	708;"	d
DT_PLTGOT	include/geekos/elf.h	677;"	d
DT_PLTPAD	include/geekos/elf.h	749;"	d
DT_PLTPADSZ	include/geekos/elf.h	723;"	d
DT_PLTREL	include/geekos/elf.h	694;"	d
DT_PLTRELSZ	include/geekos/elf.h	676;"	d
DT_POSFLAG_1	include/geekos/elf.h	727;"	d
DT_PPC64_GLINK	include/geekos/elf.h	2223;"	d
DT_PPC64_NUM	include/geekos/elf.h	2227;"	d
DT_PPC64_OPD	include/geekos/elf.h	2224;"	d
DT_PPC64_OPDSZ	include/geekos/elf.h	2225;"	d
DT_PPC64_OPT	include/geekos/elf.h	2226;"	d
DT_PPC_GOT	include/geekos/elf.h	2082;"	d
DT_PPC_NUM	include/geekos/elf.h	2083;"	d
DT_PREINIT_ARRAY	include/geekos/elf.h	706;"	d
DT_PREINIT_ARRAYSZ	include/geekos/elf.h	707;"	d
DT_PROCNUM	include/geekos/elf.h	713;"	d
DT_REL	include/geekos/elf.h	691;"	d
DT_RELA	include/geekos/elf.h	681;"	d
DT_RELACOUNT	include/geekos/elf.h	760;"	d
DT_RELAENT	include/geekos/elf.h	683;"	d
DT_RELASZ	include/geekos/elf.h	682;"	d
DT_RELCOUNT	include/geekos/elf.h	761;"	d
DT_RELENT	include/geekos/elf.h	693;"	d
DT_RELSZ	include/geekos/elf.h	692;"	d
DT_RPATH	include/geekos/elf.h	689;"	d
DT_RUNPATH	include/geekos/elf.h	703;"	d
DT_SONAME	include/geekos/elf.h	688;"	d
DT_SPARC_NUM	include/geekos/elf.h	1314;"	d
DT_SPARC_REGISTER	include/geekos/elf.h	1313;"	d
DT_STRSZ	include/geekos/elf.h	684;"	d
DT_STRTAB	include/geekos/elf.h	679;"	d
DT_SYMBOLIC	include/geekos/elf.h	690;"	d
DT_SYMENT	include/geekos/elf.h	685;"	d
DT_SYMINENT	include/geekos/elf.h	730;"	d
DT_SYMINFO	include/geekos/elf.h	751;"	d
DT_SYMINSZ	include/geekos/elf.h	729;"	d
DT_SYMTAB	include/geekos/elf.h	680;"	d
DT_TEXTREL	include/geekos/elf.h	696;"	d
DT_TLSDESC_GOT	include/geekos/elf.h	743;"	d
DT_TLSDESC_PLT	include/geekos/elf.h	742;"	d
DT_VALNUM	include/geekos/elf.h	733;"	d
DT_VALRNGHI	include/geekos/elf.h	731;"	d
DT_VALRNGLO	include/geekos/elf.h	718;"	d
DT_VALTAGIDX	include/geekos/elf.h	732;"	d
DT_VERDEF	include/geekos/elf.h	765;"	d
DT_VERDEFNUM	include/geekos/elf.h	767;"	d
DT_VERNEED	include/geekos/elf.h	768;"	d
DT_VERNEEDNUM	include/geekos/elf.h	770;"	d
DT_VERSIONTAGIDX	include/geekos/elf.h	771;"	d
DT_VERSIONTAGNUM	include/geekos/elf.h	772;"	d
DT_VERSYM	include/geekos/elf.h	758;"	d
Debug	src/geekos/blockdev.c	21;"	d	file:
Debug	src/geekos/blockdev.c	23;"	d	file:
Debug	src/geekos/dma.c	112;"	d	file:
Debug	src/geekos/dma.c	114;"	d	file:
Debug	src/geekos/floppy.c	128;"	d	file:
Debug	src/geekos/floppy.c	130;"	d	file:
Debug	src/geekos/mem.c	44;"	d	file:
Debug	src/geekos/pfat.c	44;"	d	file:
Debug	src/geekos/timer.c	53;"	d	file:
Debug	src/geekos/timer.c	55;"	d	file:
Debug	src/geekos/vfs.c	37;"	d	file:
Delay	src/geekos/setup.asm	/^Delay:$/;"	l
Delete	include/geekos/vfs.h	/^    int (*Delete)(struct Mount_Point *mountPoint, const char *path);$/;"	m	struct:Mount_Point_Ops
Delete	src/geekos/vfs.c	/^int Delete(const char *path)$/;"	f
Dequeue_Keycode	src/geekos/keyboard.c	/^static __inline__ Keycode Dequeue_Keycode(void)$/;"	f	file:
Dequeue_Request	src/geekos/blockdev.c	/^struct Block_Request *Dequeue_Request(struct Block_Request_List *requestQueue,$/;"	f
Destroy_Bit_Set	src/geekos/bitset.c	/^void Destroy_Bit_Set(void *bitSet)$/;"	f
Destroy_Thread	src/geekos/kthread.c	/^static void Destroy_Thread(struct Kernel_Thread* kthread)$/;"	f	file:
Detach_Thread	src/geekos/kthread.c	/^static void Detach_Thread(struct Kernel_Thread* kthread)$/;"	f	file:
Disable_IRQ	src/geekos/irq.c	/^void Disable_IRQ(int irq)$/;"	f
Disable_Interrupts	include/geekos/int.h	110;"	d
Do_Open	src/geekos/vfs.c	/^static int Do_Open($/;"	f	file:
Do_Open_Directory	src/geekos/vfs.c	/^static int Do_Open_Directory(struct Mount_Point *mountPoint, const char *path, int mode, struct File **pDir)$/;"	f	file:
Do_Open_File	src/geekos/vfs.c	/^static int Do_Open_File(struct Mount_Point *mountPoint, const char *path, int mode, struct File **pFile)$/;"	f	file:
Do_Request	src/geekos/blockdev.c	/^static int Do_Request(struct Block_Device *dev, enum Request_Type type, int blockNum, void *buf)$/;"	f	file:
Dummy_Interrupt_Handler	src/geekos/int.c	/^static void Dummy_Interrupt_Handler(struct Interrupt_State* state)$/;"	f	file:
DumpData	src/geekos/bget.c	478;"	d	file:
Dump_All_Thread_List	src/geekos/kthread.c	/^void Dump_All_Thread_List(void)$/;"	f
Dump_Interrupt_State	src/geekos/int.c	/^void Dump_Interrupt_State(struct Interrupt_State* state)$/;"	f
EACCESS	include/geekos/errno.h	28;"	d
EBUSY	include/geekos/errno.h	23;"	d
EEXIST	include/geekos/errno.h	32;"	d
EFA_PARISC_1_0	include/geekos/elf.h	1715;"	d
EFA_PARISC_1_1	include/geekos/elf.h	1716;"	d
EFA_PARISC_2_0	include/geekos/elf.h	1717;"	d
EFLAGS_IF	include/geekos/int.h	85;"	d
EF_ALPHA_32BIT	include/geekos/elf.h	1895;"	d
EF_ALPHA_CANRELAX	include/geekos/elf.h	1896;"	d
EF_ARM_ABI_FLOAT_HARD	include/geekos/elf.h	2257;"	d
EF_ARM_ABI_FLOAT_SOFT	include/geekos/elf.h	2256;"	d
EF_ARM_ALIGN8	include/geekos/elf.h	2249;"	d
EF_ARM_APCS_26	include/geekos/elf.h	2246;"	d
EF_ARM_APCS_FLOAT	include/geekos/elf.h	2247;"	d
EF_ARM_BE8	include/geekos/elf.h	2268;"	d
EF_ARM_DYNSYMSUSESEGIDX	include/geekos/elf.h	2263;"	d
EF_ARM_EABIMASK	include/geekos/elf.h	2265;"	d
EF_ARM_EABI_UNKNOWN	include/geekos/elf.h	2272;"	d
EF_ARM_EABI_VER1	include/geekos/elf.h	2273;"	d
EF_ARM_EABI_VER2	include/geekos/elf.h	2274;"	d
EF_ARM_EABI_VER3	include/geekos/elf.h	2275;"	d
EF_ARM_EABI_VER4	include/geekos/elf.h	2276;"	d
EF_ARM_EABI_VER5	include/geekos/elf.h	2277;"	d
EF_ARM_EABI_VERSION	include/geekos/elf.h	2271;"	d
EF_ARM_HASENTRY	include/geekos/elf.h	2244;"	d
EF_ARM_INTERWORK	include/geekos/elf.h	2245;"	d
EF_ARM_LE8	include/geekos/elf.h	2269;"	d
EF_ARM_MAPSYMSFIRST	include/geekos/elf.h	2264;"	d
EF_ARM_MAVERICK_FLOAT	include/geekos/elf.h	2254;"	d
EF_ARM_NEW_ABI	include/geekos/elf.h	2250;"	d
EF_ARM_OLD_ABI	include/geekos/elf.h	2251;"	d
EF_ARM_PIC	include/geekos/elf.h	2248;"	d
EF_ARM_RELEXEC	include/geekos/elf.h	2243;"	d
EF_ARM_SOFT_FLOAT	include/geekos/elf.h	2252;"	d
EF_ARM_SYMSARESORTED	include/geekos/elf.h	2262;"	d
EF_ARM_VFP_FLOAT	include/geekos/elf.h	2253;"	d
EF_CPU32	include/geekos/elf.h	1074;"	d
EF_IA_64_ABI64	include/geekos/elf.h	2601;"	d
EF_IA_64_ARCH	include/geekos/elf.h	2602;"	d
EF_IA_64_MASKOS	include/geekos/elf.h	2600;"	d
EF_MIPS_64BIT_WHIRL	include/geekos/elf.h	1324;"	d
EF_MIPS_ABI2	include/geekos/elf.h	1325;"	d
EF_MIPS_ABI_ON32	include/geekos/elf.h	1326;"	d
EF_MIPS_ARCH	include/geekos/elf.h	1328;"	d
EF_MIPS_ARCH_1	include/geekos/elf.h	1332;"	d
EF_MIPS_ARCH_2	include/geekos/elf.h	1333;"	d
EF_MIPS_ARCH_3	include/geekos/elf.h	1334;"	d
EF_MIPS_ARCH_32	include/geekos/elf.h	1337;"	d
EF_MIPS_ARCH_32R2	include/geekos/elf.h	1339;"	d
EF_MIPS_ARCH_4	include/geekos/elf.h	1335;"	d
EF_MIPS_ARCH_5	include/geekos/elf.h	1336;"	d
EF_MIPS_ARCH_64	include/geekos/elf.h	1338;"	d
EF_MIPS_ARCH_64R2	include/geekos/elf.h	1340;"	d
EF_MIPS_CPIC	include/geekos/elf.h	1322;"	d
EF_MIPS_NAN2008	include/geekos/elf.h	1327;"	d
EF_MIPS_NOREORDER	include/geekos/elf.h	1320;"	d
EF_MIPS_PIC	include/geekos/elf.h	1321;"	d
EF_MIPS_XGOT	include/geekos/elf.h	1323;"	d
EF_PARISC_ARCH	include/geekos/elf.h	1711;"	d
EF_PARISC_EXT	include/geekos/elf.h	1705;"	d
EF_PARISC_LAZYSWAP	include/geekos/elf.h	1710;"	d
EF_PARISC_LSB	include/geekos/elf.h	1706;"	d
EF_PARISC_NO_KABP	include/geekos/elf.h	1708;"	d
EF_PARISC_TRAPNIL	include/geekos/elf.h	1704;"	d
EF_PARISC_WIDE	include/geekos/elf.h	1707;"	d
EF_PPC64_ABI	include/geekos/elf.h	2220;"	d
EF_PPC_EMB	include/geekos/elf.h	1965;"	d
EF_PPC_RELOCATABLE	include/geekos/elf.h	1968;"	d
EF_PPC_RELOCATABLE_LIB	include/geekos/elf.h	1969;"	d
EF_S390_HIGH_GPRS	include/geekos/elf.h	2780;"	d
EF_SH1	include/geekos/elf.h	2714;"	d
EF_SH2	include/geekos/elf.h	2715;"	d
EF_SH2A	include/geekos/elf.h	2724;"	d
EF_SH2A_NOFPU	include/geekos/elf.h	2728;"	d
EF_SH2A_SH3E	include/geekos/elf.h	2733;"	d
EF_SH2A_SH3_NOFPU	include/geekos/elf.h	2731;"	d
EF_SH2A_SH4	include/geekos/elf.h	2732;"	d
EF_SH2A_SH4_NOFPU	include/geekos/elf.h	2730;"	d
EF_SH2E	include/geekos/elf.h	2722;"	d
EF_SH3	include/geekos/elf.h	2716;"	d
EF_SH3E	include/geekos/elf.h	2720;"	d
EF_SH3_DSP	include/geekos/elf.h	2718;"	d
EF_SH3_NOMMU	include/geekos/elf.h	2729;"	d
EF_SH4	include/geekos/elf.h	2721;"	d
EF_SH4A	include/geekos/elf.h	2723;"	d
EF_SH4AL_DSP	include/geekos/elf.h	2719;"	d
EF_SH4A_NOFPU	include/geekos/elf.h	2726;"	d
EF_SH4_NOFPU	include/geekos/elf.h	2725;"	d
EF_SH4_NOMMU_NOFPU	include/geekos/elf.h	2727;"	d
EF_SH_DSP	include/geekos/elf.h	2717;"	d
EF_SH_MACH_MASK	include/geekos/elf.h	2712;"	d
EF_SH_UNKNOWN	include/geekos/elf.h	2713;"	d
EF_SPARCV9_MM	include/geekos/elf.h	1198;"	d
EF_SPARCV9_PSO	include/geekos/elf.h	1200;"	d
EF_SPARCV9_RMO	include/geekos/elf.h	1201;"	d
EF_SPARCV9_TSO	include/geekos/elf.h	1199;"	d
EF_SPARC_32PLUS	include/geekos/elf.h	1204;"	d
EF_SPARC_EXT_MASK	include/geekos/elf.h	1203;"	d
EF_SPARC_HAL_R1	include/geekos/elf.h	1206;"	d
EF_SPARC_LEDATA	include/geekos/elf.h	1202;"	d
EF_SPARC_SUN_US1	include/geekos/elf.h	1205;"	d
EF_SPARC_SUN_US3	include/geekos/elf.h	1207;"	d
EINVALID	include/geekos/errno.h	29;"	d
EINVALIDFS	include/geekos/errno.h	27;"	d
EIO	include/geekos/errno.h	22;"	d
EI_ABIVERSION	include/geekos/elf.h	156;"	d
EI_CLASS	include/geekos/elf.h	123;"	d
EI_DATA	include/geekos/elf.h	129;"	d
EI_MAG0	include/geekos/elf.h	107;"	d
EI_MAG1	include/geekos/elf.h	110;"	d
EI_MAG2	include/geekos/elf.h	113;"	d
EI_MAG3	include/geekos/elf.h	116;"	d
EI_NIDENT	include/geekos/elf.h	65;"	d
EI_OSABI	include/geekos/elf.h	138;"	d
EI_PAD	include/geekos/elf.h	158;"	d
EI_VERSION	include/geekos/elf.h	135;"	d
ELF32_M_INFO	include/geekos/elf.h	1064;"	d
ELF32_M_SIZE	include/geekos/elf.h	1063;"	d
ELF32_M_SYM	include/geekos/elf.h	1062;"	d
ELF32_R_INFO	include/geekos/elf.h	533;"	d
ELF32_R_SYM	include/geekos/elf.h	531;"	d
ELF32_R_TYPE	include/geekos/elf.h	532;"	d
ELF32_ST_BIND	include/geekos/elf.h	435;"	d
ELF32_ST_INFO	include/geekos/elf.h	437;"	d
ELF32_ST_TYPE	include/geekos/elf.h	436;"	d
ELF32_ST_VISIBILITY	include/geekos/elf.h	482;"	d
ELF64_M_INFO	include/geekos/elf.h	1068;"	d
ELF64_M_SIZE	include/geekos/elf.h	1067;"	d
ELF64_M_SYM	include/geekos/elf.h	1066;"	d
ELF64_R_INFO	include/geekos/elf.h	537;"	d
ELF64_R_SYM	include/geekos/elf.h	535;"	d
ELF64_R_TYPE	include/geekos/elf.h	536;"	d
ELF64_ST_BIND	include/geekos/elf.h	440;"	d
ELF64_ST_INFO	include/geekos/elf.h	442;"	d
ELF64_ST_TYPE	include/geekos/elf.h	441;"	d
ELF64_ST_VISIBILITY	include/geekos/elf.h	485;"	d
ELFCLASS32	include/geekos/elf.h	125;"	d
ELFCLASS64	include/geekos/elf.h	126;"	d
ELFCLASSNONE	include/geekos/elf.h	124;"	d
ELFCLASSNUM	include/geekos/elf.h	127;"	d
ELFDATA2LSB	include/geekos/elf.h	131;"	d
ELFDATA2MSB	include/geekos/elf.h	132;"	d
ELFDATANONE	include/geekos/elf.h	130;"	d
ELFDATANUM	include/geekos/elf.h	133;"	d
ELFMAG	include/geekos/elf.h	120;"	d
ELFMAG0	include/geekos/elf.h	108;"	d
ELFMAG1	include/geekos/elf.h	111;"	d
ELFMAG2	include/geekos/elf.h	114;"	d
ELFMAG3	include/geekos/elf.h	117;"	d
ELFOSABI_AIX	include/geekos/elf.h	146;"	d
ELFOSABI_ARM	include/geekos/elf.h	153;"	d
ELFOSABI_ARM_AEABI	include/geekos/elf.h	152;"	d
ELFOSABI_FREEBSD	include/geekos/elf.h	148;"	d
ELFOSABI_GNU	include/geekos/elf.h	143;"	d
ELFOSABI_HPUX	include/geekos/elf.h	141;"	d
ELFOSABI_IRIX	include/geekos/elf.h	147;"	d
ELFOSABI_LINUX	include/geekos/elf.h	144;"	d
ELFOSABI_MODESTO	include/geekos/elf.h	150;"	d
ELFOSABI_NETBSD	include/geekos/elf.h	142;"	d
ELFOSABI_NONE	include/geekos/elf.h	139;"	d
ELFOSABI_OPENBSD	include/geekos/elf.h	151;"	d
ELFOSABI_SOLARIS	include/geekos/elf.h	145;"	d
ELFOSABI_STANDALONE	include/geekos/elf.h	154;"	d
ELFOSABI_SYSV	include/geekos/elf.h	140;"	d
ELFOSABI_TRU64	include/geekos/elf.h	149;"	d
ELF_NOTE_ABI	include/geekos/elf.h	1017;"	d
ELF_NOTE_GNU	include/geekos/elf.h	999;"	d
ELF_NOTE_OS_FREEBSD	include/geekos/elf.h	1024;"	d
ELF_NOTE_OS_GNU	include/geekos/elf.h	1022;"	d
ELF_NOTE_OS_LINUX	include/geekos/elf.h	1021;"	d
ELF_NOTE_OS_SOLARIS2	include/geekos/elf.h	1023;"	d
ELF_NOTE_PAGESIZE_HINT	include/geekos/elf.h	1005;"	d
ELF_NOTE_SOLARIS	include/geekos/elf.h	996;"	d
ELF_Print	src/libc/conio.c	/^void ELF_Print(char* msg)$/;"	f
EMFILE	include/geekos/errno.h	30;"	d
EMIT	src/common/fmtout.c	81;"	d	file:
EM_386	include/geekos/elf.h	178;"	d
EM_68HC05	include/geekos/elf.h	229;"	d
EM_68HC08	include/geekos/elf.h	228;"	d
EM_68HC11	include/geekos/elf.h	227;"	d
EM_68HC12	include/geekos/elf.h	211;"	d
EM_68HC16	include/geekos/elf.h	226;"	d
EM_68K	include/geekos/elf.h	179;"	d
EM_860	include/geekos/elf.h	181;"	d
EM_88K	include/geekos/elf.h	180;"	d
EM_960	include/geekos/elf.h	189;"	d
EM_AARCH64	include/geekos/elf.h	252;"	d
EM_ALPHA	include/geekos/elf.h	262;"	d
EM_ARC	include/geekos/elf.h	203;"	d
EM_ARC_A5	include/geekos/elf.h	250;"	d
EM_ARM	include/geekos/elf.h	198;"	d
EM_AVR	include/geekos/elf.h	240;"	d
EM_COLDFIRE	include/geekos/elf.h	210;"	d
EM_CRIS	include/geekos/elf.h	233;"	d
EM_D10V	include/geekos/elf.h	242;"	d
EM_D30V	include/geekos/elf.h	243;"	d
EM_FAKE_ALPHA	include/geekos/elf.h	199;"	d
EM_FIREPATH	include/geekos/elf.h	235;"	d
EM_FR20	include/geekos/elf.h	195;"	d
EM_FR30	include/geekos/elf.h	241;"	d
EM_FX66	include/geekos/elf.h	223;"	d
EM_H8S	include/geekos/elf.h	206;"	d
EM_H8_300	include/geekos/elf.h	204;"	d
EM_H8_300H	include/geekos/elf.h	205;"	d
EM_H8_500	include/geekos/elf.h	207;"	d
EM_HUANY	include/geekos/elf.h	238;"	d
EM_IA_64	include/geekos/elf.h	208;"	d
EM_JAVELIN	include/geekos/elf.h	234;"	d
EM_M32	include/geekos/elf.h	176;"	d
EM_M32R	include/geekos/elf.h	245;"	d
EM_ME16	include/geekos/elf.h	217;"	d
EM_MICROBLAZE	include/geekos/elf.h	254;"	d
EM_MIPS	include/geekos/elf.h	182;"	d
EM_MIPS_RS3_LE	include/geekos/elf.h	184;"	d
EM_MIPS_X	include/geekos/elf.h	209;"	d
EM_MMA	include/geekos/elf.h	212;"	d
EM_MMIX	include/geekos/elf.h	237;"	d
EM_MN10200	include/geekos/elf.h	247;"	d
EM_MN10300	include/geekos/elf.h	246;"	d
EM_NCPU	include/geekos/elf.h	214;"	d
EM_NDR1	include/geekos/elf.h	215;"	d
EM_NONE	include/geekos/elf.h	175;"	d
EM_NUM	include/geekos/elf.h	256;"	d
EM_OPENRISC	include/geekos/elf.h	249;"	d
EM_PARISC	include/geekos/elf.h	186;"	d
EM_PCP	include/geekos/elf.h	213;"	d
EM_PDSP	include/geekos/elf.h	221;"	d
EM_PJ	include/geekos/elf.h	248;"	d
EM_PPC	include/geekos/elf.h	190;"	d
EM_PPC64	include/geekos/elf.h	191;"	d
EM_PRISM	include/geekos/elf.h	239;"	d
EM_RCE	include/geekos/elf.h	197;"	d
EM_RH32	include/geekos/elf.h	196;"	d
EM_S370	include/geekos/elf.h	183;"	d
EM_S390	include/geekos/elf.h	192;"	d
EM_SH	include/geekos/elf.h	200;"	d
EM_SPARC	include/geekos/elf.h	177;"	d
EM_SPARC32PLUS	include/geekos/elf.h	188;"	d
EM_SPARCV9	include/geekos/elf.h	201;"	d
EM_ST100	include/geekos/elf.h	218;"	d
EM_ST19	include/geekos/elf.h	231;"	d
EM_ST7	include/geekos/elf.h	225;"	d
EM_ST9PLUS	include/geekos/elf.h	224;"	d
EM_STARCORE	include/geekos/elf.h	216;"	d
EM_SVX	include/geekos/elf.h	230;"	d
EM_TILEGX	include/geekos/elf.h	255;"	d
EM_TILEPRO	include/geekos/elf.h	253;"	d
EM_TINYJ	include/geekos/elf.h	219;"	d
EM_TRICORE	include/geekos/elf.h	202;"	d
EM_V800	include/geekos/elf.h	194;"	d
EM_V850	include/geekos/elf.h	244;"	d
EM_VAX	include/geekos/elf.h	232;"	d
EM_VPP500	include/geekos/elf.h	187;"	d
EM_X86_64	include/geekos/elf.h	220;"	d
EM_XTENSA	include/geekos/elf.h	251;"	d
EM_ZSP	include/geekos/elf.h	236;"	d
ENAMETOOLONG	include/geekos/errno.h	26;"	d
ENODEV	include/geekos/errno.h	21;"	d
ENOEXEC	include/geekos/errno.h	35;"	d
ENOFILESYS	include/geekos/errno.h	25;"	d
ENOMEM	include/geekos/errno.h	24;"	d
ENOSPACE	include/geekos/errno.h	33;"	d
ENOTDIR	include/geekos/errno.h	31;"	d
ENOTFOUND	include/geekos/errno.h	19;"	d
EPIPE	include/geekos/errno.h	34;"	d
ERROR	include/geekos/blockdev.h	/^    PENDING, COMPLETED, ERROR$/;"	e	enum:Request_State
ESC	src/geekos/screen.c	28;"	d	file:
ESent	src/geekos/bget.c	572;"	d	file:
ET_CORE	include/geekos/elf.h	166;"	d
ET_DYN	include/geekos/elf.h	165;"	d
ET_EXEC	include/geekos/elf.h	164;"	d
ET_HIOS	include/geekos/elf.h	169;"	d
ET_HIPROC	include/geekos/elf.h	171;"	d
ET_LOOS	include/geekos/elf.h	168;"	d
ET_LOPROC	include/geekos/elf.h	170;"	d
ET_NONE	include/geekos/elf.h	162;"	d
ET_NUM	include/geekos/elf.h	167;"	d
ET_REL	include/geekos/elf.h	163;"	d
EUNSPECIFIED	include/geekos/errno.h	18;"	d
EUNSUPPORTED	include/geekos/errno.h	20;"	d
EV_CURRENT	include/geekos/elf.h	267;"	d
EV_NONE	include/geekos/elf.h	266;"	d
EV_NUM	include/geekos/elf.h	268;"	d
EXPORT	src/geekos/lowlevel.asm	/^EXPORT Get_Current_EFLAGS$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT Load_GDTR$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT Load_IDTR$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT Load_LDTR$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT Switch_To_Thread$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT g_entryPointTableEnd$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT g_entryPointTableStart$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT g_handlerSizeErr$/;"	l
EXPORT	src/geekos/lowlevel.asm	/^EXPORT g_handlerSizeNoErr$/;"	l
EXPORT	src/geekos/lspawn.asm	/^EXPORT Trampoline$/;"	l
EXTRA_CC_USER_OPTS	build/Makefile	/^EXTRA_CC_USER_OPTS := -Dmain=geekos_main$/;"	m
EXTRA_C_OPTS	build/Makefile	/^EXTRA_C_OPTS       := -DNEED_UNDERSCORE -DGNU_WIN32$/;"	m
EXTRA_NASM_OPTS	build/Makefile	/^EXTRA_NASM_OPTS    := -DNEED_UNDERSCORE$/;"	m
E_MIPS_ARCH_1	include/geekos/elf.h	1344;"	d
E_MIPS_ARCH_2	include/geekos/elf.h	1345;"	d
E_MIPS_ARCH_3	include/geekos/elf.h	1346;"	d
E_MIPS_ARCH_32	include/geekos/elf.h	1349;"	d
E_MIPS_ARCH_4	include/geekos/elf.h	1347;"	d
E_MIPS_ARCH_5	include/geekos/elf.h	1348;"	d
E_MIPS_ARCH_64	include/geekos/elf.h	1350;"	d
Elf32_Addr	include/geekos/elf.h	/^typedef uint32_t Elf32_Addr;$/;"	t
Elf32_Conflict	include/geekos/elf.h	/^typedef Elf32_Addr Elf32_Conflict;$/;"	t
Elf32_Dyn	include/geekos/elf.h	/^} Elf32_Dyn;$/;"	t	typeref:struct:__anon18
Elf32_Ehdr	include/geekos/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon4
Elf32_Half	include/geekos/elf.h	/^typedef uint16_t Elf32_Half;$/;"	t
Elf32_Lib	include/geekos/elf.h	/^} Elf32_Lib;$/;"	t	typeref:struct:__anon44
Elf32_Move	include/geekos/elf.h	/^} Elf32_Move;$/;"	t	typeref:struct:__anon36
Elf32_Nhdr	include/geekos/elf.h	/^} Elf32_Nhdr;$/;"	t	typeref:struct:__anon34
Elf32_Off	include/geekos/elf.h	/^typedef uint32_t Elf32_Off;$/;"	t
Elf32_Phdr	include/geekos/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon16
Elf32_RegInfo	include/geekos/elf.h	/^} Elf32_RegInfo;$/;"	t	typeref:struct:__anon41
Elf32_Rel	include/geekos/elf.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon12
Elf32_Rela	include/geekos/elf.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon14
Elf32_Section	include/geekos/elf.h	/^typedef uint16_t Elf32_Section;$/;"	t
Elf32_Shdr	include/geekos/elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon6
Elf32_Sword	include/geekos/elf.h	/^typedef	int32_t  Elf32_Sword;$/;"	t
Elf32_Sxword	include/geekos/elf.h	/^typedef	int64_t  Elf32_Sxword;$/;"	t
Elf32_Sym	include/geekos/elf.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon8
Elf32_Syminfo	include/geekos/elf.h	/^} Elf32_Syminfo;$/;"	t	typeref:struct:__anon10
Elf32_Verdaux	include/geekos/elf.h	/^} Elf32_Verdaux;$/;"	t	typeref:struct:__anon24
Elf32_Verdef	include/geekos/elf.h	/^} Elf32_Verdef;$/;"	t	typeref:struct:__anon22
Elf32_Vernaux	include/geekos/elf.h	/^} Elf32_Vernaux;$/;"	t	typeref:struct:__anon28
Elf32_Verneed	include/geekos/elf.h	/^} Elf32_Verneed;$/;"	t	typeref:struct:__anon26
Elf32_Versym	include/geekos/elf.h	/^typedef Elf32_Half Elf32_Versym;$/;"	t
Elf32_Word	include/geekos/elf.h	/^typedef uint32_t Elf32_Word;$/;"	t
Elf32_Xword	include/geekos/elf.h	/^typedef uint64_t Elf32_Xword;$/;"	t
Elf32_auxv_t	include/geekos/elf.h	/^} Elf32_auxv_t;$/;"	t	typeref:struct:__anon30
Elf32_gptab	include/geekos/elf.h	/^} Elf32_gptab;$/;"	t	typeref:union:__anon38
Elf64_Addr	include/geekos/elf.h	/^typedef uint64_t Elf64_Addr;$/;"	t
Elf64_Dyn	include/geekos/elf.h	/^} Elf64_Dyn;$/;"	t	typeref:struct:__anon20
Elf64_Ehdr	include/geekos/elf.h	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon5
Elf64_Half	include/geekos/elf.h	/^typedef uint16_t Elf64_Half;$/;"	t
Elf64_Lib	include/geekos/elf.h	/^} Elf64_Lib;$/;"	t	typeref:struct:__anon45
Elf64_Move	include/geekos/elf.h	/^} Elf64_Move;$/;"	t	typeref:struct:__anon37
Elf64_Nhdr	include/geekos/elf.h	/^} Elf64_Nhdr;$/;"	t	typeref:struct:__anon35
Elf64_Off	include/geekos/elf.h	/^typedef uint64_t Elf64_Off;$/;"	t
Elf64_Phdr	include/geekos/elf.h	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon17
Elf64_Rel	include/geekos/elf.h	/^} Elf64_Rel;$/;"	t	typeref:struct:__anon13
Elf64_Rela	include/geekos/elf.h	/^} Elf64_Rela;$/;"	t	typeref:struct:__anon15
Elf64_Section	include/geekos/elf.h	/^typedef uint16_t Elf64_Section;$/;"	t
Elf64_Shdr	include/geekos/elf.h	/^} Elf64_Shdr;$/;"	t	typeref:struct:__anon7
Elf64_Sword	include/geekos/elf.h	/^typedef	int32_t  Elf64_Sword;$/;"	t
Elf64_Sxword	include/geekos/elf.h	/^typedef	int64_t  Elf64_Sxword;$/;"	t
Elf64_Sym	include/geekos/elf.h	/^} Elf64_Sym;$/;"	t	typeref:struct:__anon9
Elf64_Syminfo	include/geekos/elf.h	/^} Elf64_Syminfo;$/;"	t	typeref:struct:__anon11
Elf64_Verdaux	include/geekos/elf.h	/^} Elf64_Verdaux;$/;"	t	typeref:struct:__anon25
Elf64_Verdef	include/geekos/elf.h	/^} Elf64_Verdef;$/;"	t	typeref:struct:__anon23
Elf64_Vernaux	include/geekos/elf.h	/^} Elf64_Vernaux;$/;"	t	typeref:struct:__anon29
Elf64_Verneed	include/geekos/elf.h	/^} Elf64_Verneed;$/;"	t	typeref:struct:__anon27
Elf64_Versym	include/geekos/elf.h	/^typedef Elf64_Half Elf64_Versym;$/;"	t
Elf64_Word	include/geekos/elf.h	/^typedef uint32_t Elf64_Word;$/;"	t
Elf64_Xword	include/geekos/elf.h	/^typedef uint64_t Elf64_Xword;$/;"	t
Elf64_auxv_t	include/geekos/elf.h	/^} Elf64_auxv_t;$/;"	t	typeref:struct:__anon32
Elf_Options	include/geekos/elf.h	/^} Elf_Options;$/;"	t	typeref:struct:__anon42
Elf_Options_Hw	include/geekos/elf.h	/^} Elf_Options_Hw;$/;"	t	typeref:struct:__anon43
Emit	include/libc/fmtout.h	/^    void (*Emit)(struct Output_Sink *o, int ch);$/;"	m	struct:Output_Sink
Enable_A20	src/geekos/setup.asm	/^Enable_A20:$/;"	l
Enable_IRQ	src/geekos/irq.c	/^void Enable_IRQ(int irq)$/;"	f
Enable_Interrupts	include/geekos/int.h	123;"	d
End_IRQ	src/geekos/irq.c	/^void End_IRQ(struct Interrupt_State* state)$/;"	f
End_Int_Atomic	include/geekos/int.h	/^static __inline__ void End_Int_Atomic(bool iflag)$/;"	f
Enqueue_Keycode	src/geekos/keyboard.c	/^static __inline__ void Enqueue_Keycode(Keycode keycode)$/;"	f	file:
Enqueue_Thread	include/geekos/kthread.h	/^static __inline__ void Enqueue_Thread(struct Thread_Queue *queue, struct Kernel_Thread *kthread) {$/;"	f
Exit	src/geekos/kthread.c	/^void Exit(int exitCode)$/;"	f
ExpIncr	src/geekos/bget.c	1280;"	d	file:
FAT_ENTRY_EOF	include/geekos/pfat.h	47;"	d
FAT_ENTRY_FREE	include/geekos/pfat.h	46;"	d
FDC_BASE	src/geekos/floppy.c	68;"	d	file:
FDC_COMMAND_CALIBRATE	src/geekos/floppy.c	97;"	d	file:
FDC_COMMAND_READ_SECTOR	src/geekos/floppy.c	101;"	d	file:
FDC_COMMAND_SEEK	src/geekos/floppy.c	99;"	d	file:
FDC_COMMAND_SENSE_INT_STATUS	src/geekos/floppy.c	98;"	d	file:
FDC_COMMAND_WRITE_SECTOR	src/geekos/floppy.c	100;"	d	file:
FDC_DATA_RATE_SELECT_REG	src/geekos/floppy.c	71;"	d	file:
FDC_DATA_REG	src/geekos/floppy.c	72;"	d	file:
FDC_DMA	src/geekos/floppy.c	63;"	d	file:
FDC_DOR_DMA_ENABLE	src/geekos/floppy.c	90;"	d	file:
FDC_DOR_DRIVE_SELECT	src/geekos/floppy.c	92;"	d	file:
FDC_DOR_MOTOR	src/geekos/floppy.c	89;"	d	file:
FDC_DOR_REG	src/geekos/floppy.c	69;"	d	file:
FDC_DOR_RESET_DISABLE	src/geekos/floppy.c	91;"	d	file:
FDC_IRQ	src/geekos/floppy.c	58;"	d	file:
FDC_MFM	src/geekos/floppy.c	107;"	d	file:
FDC_MULTI_TRACK	src/geekos/floppy.c	106;"	d	file:
FDC_SKIP_DELETED	src/geekos/floppy.c	108;"	d	file:
FDC_ST0_IS_SUCCESS	src/geekos/floppy.c	114;"	d	file:
FDC_ST0_SEEK_END	src/geekos/floppy.c	113;"	d	file:
FDC_STATUS_ACTIVE	src/geekos/floppy.c	81;"	d	file:
FDC_STATUS_BUSY	src/geekos/floppy.c	80;"	d	file:
FDC_STATUS_DIO	src/geekos/floppy.c	78;"	d	file:
FDC_STATUS_MRQ	src/geekos/floppy.c	77;"	d	file:
FDC_STATUS_NDMA	src/geekos/floppy.c	79;"	d	file:
FDC_STATUS_READY_MASK	src/geekos/floppy.c	82;"	d	file:
FDC_STATUS_READY_READ	src/geekos/floppy.c	84;"	d	file:
FDC_STATUS_READY_WRITE	src/geekos/floppy.c	83;"	d	file:
FDC_STATUS_REG	src/geekos/floppy.c	70;"	d	file:
FILL_DWORD	src/geekos/screen.c	58;"	d	file:
FIND_NUM_BYTES	src/geekos/bitset.c	23;"	d	file:
FIND_OFFSET_AND_BIT	src/geekos/bitset.c	17;"	d	file:
FIRST_EXCEPTION	include/geekos/idt.h	23;"	d
FIRST_EXTERNAL_INT	include/geekos/idt.h	29;"	d
FLOPPY_READ	src/geekos/floppy.c	/^enum { FLOPPY_READ, FLOPPY_WRITE };$/;"	e	enum:__anon46	file:
FLOPPY_WRITE	src/geekos/floppy.c	/^enum { FLOPPY_READ, FLOPPY_WRITE };$/;"	e	enum:__anon46	file:
FL_HASH	src/common/fmtout.c	/^  FL_HASH   = 0x20,		\/* # modifier *\/$/;"	e	enum:flags	file:
FL_MINUS	src/common/fmtout.c	/^  FL_MINUS  = 0x02,		\/* Minus modifier *\/$/;"	e	enum:flags	file:
FL_PLUS	src/common/fmtout.c	/^  FL_PLUS   = 0x04,		\/* Plus modifier *\/$/;"	e	enum:flags	file:
FL_SIGNED	src/common/fmtout.c	/^  FL_SIGNED = 0x40,		\/* Number is signed *\/$/;"	e	enum:flags	file:
FL_SPACE	src/common/fmtout.c	/^  FL_SPACE  = 0x10,		\/* Space modifier *\/$/;"	e	enum:flags	file:
FL_TICK	src/common/fmtout.c	/^  FL_TICK   = 0x08,		\/* ' modifier *\/$/;"	e	enum:flags	file:
FL_UPPER	src/common/fmtout.c	/^  FL_UPPER  = 0x80		\/* Upper case digits *\/$/;"	e	enum:flags	file:
FL_ZERO	src/common/fmtout.c	/^  FL_ZERO   = 0x01,		\/* Zero modifier *\/$/;"	e	enum:flags	file:
FStat	include/geekos/vfs.h	/^    int (*FStat)(struct File *file, struct VFS_File_Stat *stat);$/;"	m	struct:File_Ops
FStat	src/geekos/vfs.c	/^int FStat(struct File *file, struct VFS_File_Stat *stat)$/;"	f
File	include/geekos/vfs.h	/^struct File {$/;"	s
File_Ops	include/geekos/vfs.h	/^struct File_Ops {$/;"	s
Filesystem	src/geekos/vfs.c	/^struct Filesystem {$/;"	s	file:
Filesystem_Ops	include/geekos/vfs.h	/^struct Filesystem_Ops {$/;"	s
Find_Best	src/geekos/kthread.c	/^static __inline__ struct Kernel_Thread* Find_Best(struct Thread_Queue* queue)$/;"	f	file:
Find_First_Free_Bit	src/geekos/bitset.c	/^int Find_First_Free_Bit(void *bitSet, ulong_t totalBits)$/;"	f
Find_First_N_Free	src/geekos/bitset.c	/^int Find_First_N_Free(void *bitSet, uint_t runLength, ulong_t totalBits)$/;"	f
Finish	include/libc/fmtout.h	/^    void (*Finish)(struct Output_Sink *o);$/;"	m	struct:Output_Sink
Floppy_Close	src/geekos/floppy.c	/^static int Floppy_Close(struct Block_Device *dev)$/;"	f	file:
Floppy_Drive	src/geekos/floppy.c	/^struct Floppy_Drive {$/;"	s	file:
Floppy_Get_Num_Blocks	src/geekos/floppy.c	/^static int Floppy_Get_Num_Blocks(struct Block_Device *dev)$/;"	f	file:
Floppy_In	src/geekos/floppy.c	/^static uchar_t Floppy_In(void)$/;"	f	file:
Floppy_Interrupt_Handler	src/geekos/floppy.c	/^static void Floppy_Interrupt_Handler(struct Interrupt_State* state)$/;"	f	file:
Floppy_Open	src/geekos/floppy.c	/^static int Floppy_Open(struct Block_Device *dev)$/;"	f	file:
Floppy_Out	src/geekos/floppy.c	/^static void Floppy_Out(uchar_t val)$/;"	f	file:
Floppy_Parameters	src/geekos/floppy.c	/^struct Floppy_Parameters {$/;"	s	file:
Floppy_Read	src/geekos/floppy.c	/^static int Floppy_Read(int driveNum, int blockNum, char *buffer)$/;"	f	file:
Floppy_Request_Thread	src/geekos/floppy.c	/^static void Floppy_Request_Thread(ulong_t arg)$/;"	f	file:
Floppy_Seek	src/geekos/floppy.c	/^static bool Floppy_Seek(int drive, int cylinder, int head)$/;"	f	file:
Floppy_Transfer	src/geekos/floppy.c	/^static int Floppy_Transfer(int direction, int driveNum, int blockNum, char *buf)$/;"	f	file:
Floppy_Write	src/geekos/floppy.c	/^static int Floppy_Write(int driveNum, int blockNum, char *buffer)$/;"	f	file:
Format	include/geekos/vfs.h	/^    int (*Format)(struct Block_Device *blockDev);$/;"	m	struct:Filesystem_Ops
Format	src/geekos/vfs.c	/^int Format(const char *devname, const char *fstype)$/;"	f
Format_Output	src/common/fmtout.c	/^int Format_Output(struct Output_Sink *q, const char *format, va_list ap)$/;"	f
Free	src/geekos/malloc.c	/^void Free(void* buf)$/;"	f
Free_Page	src/geekos/mem.c	/^void Free_Page(void* pageAddr)$/;"	f
Free_Segment_Descriptor	src/geekos/gdt.c	/^void Free_Segment_Descriptor(struct Segment_Descriptor* desc)$/;"	f
GDT	src/geekos/setup.asm	/^GDT:$/;"	l
GDT_ENTRY_SZ	src/geekos/setup.asm	/^GDT_ENTRY_SZ equ 8		; size of a single GDT entry$/;"	d
GDT_Pointer	src/geekos/setup.asm	/^GDT_Pointer:$/;"	l
GEEKOS_ARGBLOCK_H	include/geekos/argblock.h	11;"	d
GEEKOS_BITSET_H	include/geekos/bitset.h	12;"	d
GEEKOS_BLOCKDEV_H	include/geekos/blockdev.h	12;"	d
GEEKOS_BOOTINFO_H	include/geekos/bootinfo.h	11;"	d
GEEKOS_CRC32_H	include/geekos/crc32.h	2;"	d
GEEKOS_DEFS_H	include/geekos/defs.h	11;"	d
GEEKOS_DMA_H	include/geekos/dma.h	11;"	d
GEEKOS_ERRNO_H	include/geekos/errno.h	11;"	d
GEEKOS_FILEIO_H	include/geekos/fileio.h	12;"	d
GEEKOS_FLOPPY_H	include/geekos/floppy.h	11;"	d
GEEKOS_GDT_H	include/geekos/gdt.h	11;"	d
GEEKOS_IDE_H	include/geekos/ide.h	11;"	d
GEEKOS_IDT_H	include/geekos/idt.h	11;"	d
GEEKOS_INT_H	include/geekos/int.h	17;"	d
GEEKOS_IO_H	include/geekos/io.h	11;"	d
GEEKOS_IRQ_H	include/geekos/irq.h	11;"	d
GEEKOS_KASSERT_H	include/geekos/kassert.h	11;"	d
GEEKOS_KEYBOARD_H	include/geekos/keyboard.h	11;"	d
GEEKOS_KTHREAD_H	include/geekos/kthread.h	11;"	d
GEEKOS_KTYPES_H	include/geekos/ktypes.h	11;"	d
GEEKOS_LIST_H	include/geekos/list.h	11;"	d
GEEKOS_MALLOC_H	include/geekos/malloc.h	11;"	d
GEEKOS_MEM_H	include/geekos/mem.h	12;"	d
GEEKOS_PFAT_H	include/geekos/pfat.h	12;"	d
GEEKOS_RANGE_H	include/geekos/range.h	11;"	d
GEEKOS_SCREEN_H	include/geekos/screen.h	11;"	d
GEEKOS_SEGMENT_H	include/geekos/segment.h	16;"	d
GEEKOS_SYMBOL_H	include/geekos/symbol.h	12;"	d
GEEKOS_SYNCH_H	include/geekos/synch.h	11;"	d
GEEKOS_TIMER_H	include/geekos/timer.h	11;"	d
GEEKOS_TRAP_H	include/geekos/trap.h	11;"	d
GEEKOS_TSS_H	include/geekos/tss.h	11;"	d
GEEKOS_VFS_H	include/geekos/vfs.h	12;"	d
GENERAL_OPTS	build/Makefile	/^GENERAL_OPTS := -O -Wall -fno-stack-protector $(EXTRA_C_OPTS)$/;"	m
GENERATED_LIBC_SRCS	build/Makefile	/^GENERATED_LIBC_SRCS := libc\/errno.c$/;"	m
GENERRS	build/Makefile	/^GENERRS := $(PERL) $(PROJECT_ROOT)\/scripts\/generrs$/;"	m
GPF_Handler	src/geekos/trap.c	/^static void GPF_Handler(struct Interrupt_State* state)$/;"	f	file:
GRAY	include/geekos/screen.h	22;"	d
GREEN	include/geekos/screen.h	17;"	d
GRP_COMDAT	include/geekos/elf.h	377;"	d
GetParam	src/geekos/bootsect.asm	/^GetParam:$/;"	l
Get_Arg	src/geekos/screen.c	/^static int Get_Arg(int argNum)$/;"	f	file:
Get_Current	src/geekos/kthread.c	/^struct Kernel_Thread* Get_Current(void)$/;"	f
Get_Current_Attr	src/geekos/screen.c	/^uchar_t Get_Current_Attr(void)$/;"	f
Get_Current_EFLAGS	src/geekos/lowlevel.asm	/^Get_Current_EFLAGS:$/;"	l
Get_Cursor	src/geekos/screen.c	/^void Get_Cursor(int* row, int* col)$/;"	f
Get_Descriptor_Index	src/geekos/gdt.c	/^int Get_Descriptor_Index(struct Segment_Descriptor* desc)$/;"	f
Get_IRQ_Mask	src/geekos/irq.c	/^ushort_t Get_IRQ_Mask(void)$/;"	f
Get_Next_Runnable	src/geekos/kthread.c	/^struct Kernel_Thread* Get_Next_Runnable(void)$/;"	f
Get_Num_Blocks	include/geekos/blockdev.h	/^    int (*Get_Num_Blocks)(struct Block_Device *dev);$/;"	m	struct:Block_Device_Ops
Get_Num_Blocks	src/geekos/blockdev.c	/^int Get_Num_Blocks(struct Block_Device *dev)$/;"	f
Get_PFAT_File	src/geekos/pfat.c	/^static struct PFAT_File *Get_PFAT_File(struct PFAT_Instance *instance, directoryEntry *entry)$/;"	f	file:
Get_Page	include/geekos/mem.h	/^static __inline__ struct Page *Get_Page(ulong_t addr)$/;"	f
Get_Page_Address	include/geekos/mem.h	/^static __inline__ ulong_t Get_Page_Address(struct Page *page)$/;"	f
Get_Paging_Device	src/geekos/vfs.c	/^struct Paging_Device *Get_Paging_Device(void)$/;"	f
Get_Tlocal_Pointer	src/geekos/kthread.c	/^static __inline__ const void** Get_Tlocal_Pointer(tlocal_key_t k) $/;"	f	file:
HEADS	src/geekos/defs.asm	/^HEADS equ 2$/;"	d
HIGHMEM_START	include/geekos/mem.h	40;"	d
HIGH_BYTE	src/geekos/ide.c	90;"	d	file:
HOST_CC	build/Makefile	/^HOST_CC := gcc -m32$/;"	m
Handle_Interrupt	src/geekos/lowlevel.asm	/^Handle_Interrupt:$/;"	l
ICW1	src/geekos/defs.asm	/^ICW1 equ 0x11		; ICW1 - ICW4 needed, cascade mode, interval=8,$/;"	d
ICW2_MASTER	src/geekos/defs.asm	/^ICW2_MASTER equ 0x20	; put IRQs 0-7 at 0x20 (above Intel reserved ints)$/;"	d
ICW2_SLAVE	src/geekos/defs.asm	/^ICW2_SLAVE equ 0x28	; put IRQs 8-15 at 0x28$/;"	d
ICW3_MASTER	src/geekos/defs.asm	/^ICW3_MASTER equ 0x04	; IR2 connected to slave$/;"	d
ICW3_SLAVE	src/geekos/defs.asm	/^ICW3_SLAVE equ 0x02	; slave has id 2$/;"	d
ICW4	src/geekos/defs.asm	/^ICW4 equ 0x01		; 8086 mode, no auto-EOI, non-buffered mode,$/;"	d
IDE_COMMAND_ATAPI_IDENT_DRIVE	src/geekos/ide.c	55;"	d	file:
IDE_COMMAND_DIAGNOSTIC	src/geekos/ide.c	54;"	d	file:
IDE_COMMAND_IDENTIFY_DRIVE	src/geekos/ide.c	48;"	d	file:
IDE_COMMAND_READ_BUFFER	src/geekos/ide.c	51;"	d	file:
IDE_COMMAND_READ_SECTORS	src/geekos/ide.c	50;"	d	file:
IDE_COMMAND_REGISTER	src/geekos/ide.c	40;"	d	file:
IDE_COMMAND_SEEK	src/geekos/ide.c	49;"	d	file:
IDE_COMMAND_WRITE_BUFFER	src/geekos/ide.c	53;"	d	file:
IDE_COMMAND_WRITE_SECTORS	src/geekos/ide.c	52;"	d	file:
IDE_CONTROL_INT_DISABLE	src/geekos/ide.c	87;"	d	file:
IDE_CONTROL_REGISTER	src/geekos/ide.c	85;"	d	file:
IDE_CONTROL_SOFTWARE_RESET	src/geekos/ide.c	86;"	d	file:
IDE_CYLINDER_HIGH_REGISTER	src/geekos/ide.c	37;"	d	file:
IDE_CYLINDER_LOW_REGISTER	src/geekos/ide.c	36;"	d	file:
IDE_Close	src/geekos/ide.c	/^static int IDE_Close(struct Block_Device *dev)$/;"	f	file:
IDE_DATA_REGISTER	src/geekos/ide.c	31;"	d	file:
IDE_DCR_NOINTERRUPT	src/geekos/ide.c	75;"	d	file:
IDE_DCR_RESET	src/geekos/ide.c	76;"	d	file:
IDE_DEVICE_CONTROL_REGISTER	src/geekos/ide.c	41;"	d	file:
IDE_DRIVE_0	src/geekos/ide.c	44;"	d	file:
IDE_DRIVE_1	src/geekos/ide.c	45;"	d	file:
IDE_DRIVE_HEAD_REGISTER	src/geekos/ide.c	38;"	d	file:
IDE_ERROR_BAD_DRIVE	src/geekos/ide.c	80;"	d	file:
IDE_ERROR_DRIVE_ERROR	src/geekos/ide.c	82;"	d	file:
IDE_ERROR_INVALID_BLOCK	src/geekos/ide.c	81;"	d	file:
IDE_ERROR_NO_ERROR	src/geekos/ide.c	79;"	d	file:
IDE_ERROR_REGISTER	src/geekos/ide.c	32;"	d	file:
IDE_FEATURE_REG	src/geekos/ide.c	33;"	d	file:
IDE_Get_Num_Blocks	src/geekos/ide.c	/^static int IDE_Get_Num_Blocks(struct Block_Device *dev)$/;"	f	file:
IDE_INDENTIFY_NUM_BYTES_SECTOR	src/geekos/ide.c	61;"	d	file:
IDE_INDENTIFY_NUM_BYTES_TRACK	src/geekos/ide.c	60;"	d	file:
IDE_INDENTIFY_NUM_CYLINDERS	src/geekos/ide.c	58;"	d	file:
IDE_INDENTIFY_NUM_HEADS	src/geekos/ide.c	59;"	d	file:
IDE_INDENTIFY_NUM_SECTORS_TRACK	src/geekos/ide.c	62;"	d	file:
IDE_MAX_DRIVES	src/geekos/ide.c	92;"	d	file:
IDE_Open	src/geekos/ide.c	/^static int IDE_Open(struct Block_Device *dev)$/;"	f	file:
IDE_Read	src/geekos/ide.c	/^static int IDE_Read(int driveNum, int blockNum, char *buffer)$/;"	f	file:
IDE_Request_Thread	src/geekos/ide.c	/^static void IDE_Request_Thread(ulong_t arg)$/;"	f	file:
IDE_SECTOR_COUNT_REGISTER	src/geekos/ide.c	34;"	d	file:
IDE_SECTOR_NUMBER_REGISTER	src/geekos/ide.c	35;"	d	file:
IDE_STATUS_DRIVE_BUSY	src/geekos/ide.c	65;"	d	file:
IDE_STATUS_DRIVE_CORRECTED_DATA	src/geekos/ide.c	70;"	d	file:
IDE_STATUS_DRIVE_DATA_REQUEST	src/geekos/ide.c	69;"	d	file:
IDE_STATUS_DRIVE_ERROR	src/geekos/ide.c	72;"	d	file:
IDE_STATUS_DRIVE_INDEX	src/geekos/ide.c	71;"	d	file:
IDE_STATUS_DRIVE_READY	src/geekos/ide.c	66;"	d	file:
IDE_STATUS_DRIVE_SEEK_COMPLETE	src/geekos/ide.c	68;"	d	file:
IDE_STATUS_DRIVE_WRITE_FAULT	src/geekos/ide.c	67;"	d	file:
IDE_STATUS_REGISTER	src/geekos/ide.c	39;"	d	file:
IDE_Write	src/geekos/ide.c	/^static int IDE_Write(int driveNum, int blockNum, char *buffer)$/;"	f	file:
IDE_getNumBlocks	src/geekos/ide.c	/^static int IDE_getNumBlocks(int driveNum)$/;"	f	file:
IDT_Descriptor	include/geekos/idt.h	/^union IDT_Descriptor {$/;"	u
IDT_Pointer	src/geekos/setup.asm	/^IDT_Pointer:$/;"	l
IMPLEMENT_LIST	include/geekos/list.h	34;"	d
IMPORT	src/geekos/lowlevel.asm	/^IMPORT Get_Next_Runnable$/;"	l
IMPORT	src/geekos/lowlevel.asm	/^IMPORT Make_Runnable$/;"	l
IMPORT	src/geekos/lowlevel.asm	/^IMPORT g_currentThread$/;"	l
IMPORT	src/geekos/lowlevel.asm	/^IMPORT g_interruptTable$/;"	l
IMPORT	src/geekos/lowlevel.asm	/^IMPORT g_needReschedule$/;"	l
IMPORT	src/geekos/lowlevel.asm	/^IMPORT g_preemptionDisabled$/;"	l
INITSEG	src/geekos/defs.asm	/^INITSEG equ 0x9000$/;"	d
INIT_PROGRAM	src/geekos/main.c	45;"	d	file:
INTERRUPT_STATE_SIZE	src/geekos/lowlevel.asm	/^INTERRUPT_STATE_SIZE equ 64$/;"	d
INTMAX_RANK	src/common/fmtout.c	76;"	d	file:
INVALID_FLOPPY_TYPE	src/geekos/floppy.c	147;"	d	file:
IO_Delay	src/geekos/io.c	/^void IO_Delay(void)$/;"	f
ISA_HOLE_END	include/geekos/mem.h	34;"	d
ISA_HOLE_START	include/geekos/mem.h	33;"	d
ISDIGIT	include/geekos/ktypes.h	38;"	d
IS_HELD	include/geekos/synch.h	41;"	d
IS_RESERVED	src/geekos/dma.c	108;"	d	file:
IS_VALID_FLOPPY_TYPE	src/geekos/floppy.c	162;"	d	file:
Idle	src/geekos/kthread.c	/^static void Idle(ulong_t arg)$/;"	f	file:
In_Byte	src/geekos/io.c	/^uchar_t In_Byte(ushort_t port)$/;"	f
In_Word	src/geekos/io.c	/^ushort_t In_Word(ushort_t port)$/;"	f
Init_BSS	src/geekos/mem.c	/^void Init_BSS(void)$/;"	f
Init_CRC32	src/geekos/crc32.c	/^void Init_CRC32(void) {$/;"	f
Init_Code_Segment_Descriptor	src/geekos/segment.c	/^void Init_Code_Segment_Descriptor($/;"	f
Init_DMA	src/geekos/dma.c	/^void Init_DMA(void)$/;"	f
Init_Data_Segment_Descriptor	src/geekos/segment.c	/^void Init_Data_Segment_Descriptor($/;"	f
Init_Floppy	src/geekos/floppy.c	/^void Init_Floppy(void)$/;"	f
Init_GDT	src/geekos/gdt.c	/^void Init_GDT(void)$/;"	f
Init_Heap	src/geekos/malloc.c	/^void Init_Heap(ulong_t start, ulong_t size)$/;"	f
Init_IDE	src/geekos/ide.c	/^void Init_IDE(void)$/;"	f
Init_IDT	src/geekos/idt.c	/^void Init_IDT(void)$/;"	f
Init_Interrupt_Gate	src/geekos/idt.c	/^void Init_Interrupt_Gate(union IDT_Descriptor* desc, ulong_t addr,$/;"	f
Init_Interrupts	src/geekos/int.c	/^void Init_Interrupts(void)$/;"	f
Init_Keyboard	src/geekos/keyboard.c	/^void Init_Keyboard(void)$/;"	f
Init_LDT_Descriptor	src/geekos/segment.c	/^void Init_LDT_Descriptor($/;"	f
Init_Mem	src/geekos/mem.c	/^void Init_Mem(struct Boot_Info* bootInfo)$/;"	f
Init_Null_Segment_Descriptor	src/geekos/segment.c	/^void Init_Null_Segment_Descriptor(struct Segment_Descriptor* desc)$/;"	f
Init_PFAT	src/geekos/pfat.c	/^void Init_PFAT(void)$/;"	f
Init_PIC	src/geekos/setup.asm	/^Init_PIC:$/;"	l
Init_Scheduler	src/geekos/kthread.c	/^void Init_Scheduler(void)$/;"	f
Init_Screen	src/geekos/screen.c	/^void Init_Screen(void)$/;"	f
Init_TSS	src/geekos/tss.c	/^void Init_TSS(void)$/;"	f
Init_TSS_Descriptor	src/geekos/segment.c	/^void Init_TSS_Descriptor(struct Segment_Descriptor* desc, struct TSS* theTSS)$/;"	f
Init_Thread	src/geekos/kthread.c	/^static void Init_Thread(struct Kernel_Thread* kthread, void* stackPage,$/;"	f	file:
Init_Timer	src/geekos/timer.c	/^void Init_Timer(void)$/;"	f
Init_Traps	src/geekos/trap.c	/^void Init_Traps(void)$/;"	f
Install_IRQ	src/geekos/irq.c	/^void Install_IRQ(int irq, Interrupt_Handler handler)$/;"	f
Install_Interrupt_Handler	src/geekos/idt.c	/^void Install_Interrupt_Handler(int interrupt, Interrupt_Handler handler)$/;"	f
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 0$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 1$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 15	; FIXME: not described in 486 manual$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 16$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 2	; FIXME: not described in 486 manual$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 3$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 4$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 5$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 6$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 7$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err 9	; FIXME: not described in 486 manual$/;"	l
Int_No_Err	src/geekos/lowlevel.asm	/^Int_No_Err intNum$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 10$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 11$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 12$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 13$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 14$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 17$/;"	l
Int_With_Err	src/geekos/lowlevel.asm	/^Int_With_Err 8$/;"	l
Interrupt_Gate	include/geekos/idt.h	/^struct Interrupt_Gate {$/;"	s
Interrupt_Handler	include/geekos/int.h	/^typedef void (*Interrupt_Handler)(struct Interrupt_State* state);$/;"	t
Interrupt_State	include/geekos/int.h	/^struct Interrupt_State {$/;"	s
Interrupts_Enabled	src/geekos/int.c	/^bool Interrupts_Enabled(void)$/;"	f
Is_Bit_Set	src/geekos/bitset.c	/^bool Is_Bit_Set(void *bitSet, uint_t bitPos)$/;"	f
Is_Page_Multiple	include/geekos/mem.h	/^static __inline__ bool Is_Page_Multiple(ulong_t addr)$/;"	f
Is_Queue_Empty	src/geekos/keyboard.c	/^static __inline__ bool Is_Queue_Empty(void)$/;"	f	file:
Is_Queue_Full	src/geekos/keyboard.c	/^static __inline__ bool Is_Queue_Full(void)$/;"	f	file:
Is_User_Interrupt	include/geekos/int.h	/^static __inline__ bool Is_User_Interrupt(struct Interrupt_State *state)$/;"	f
Join	src/geekos/kthread.c	/^int Join(struct Kernel_Thread* kthread)$/;"	f
KASSERT	include/geekos/kassert.h	20;"	d
KASSERT	include/geekos/kassert.h	58;"	d
KB_CMD	include/geekos/keyboard.h	26;"	d
KB_DATA	include/geekos/keyboard.h	27;"	d
KB_IRQ	include/geekos/keyboard.h	21;"	d
KB_KEY_RELEASE	include/geekos/keyboard.h	37;"	d
KB_OUTPUT_FULL	include/geekos/keyboard.h	32;"	d
KERNEL_ASM_OBJS	build/Makefile	/^KERNEL_ASM_OBJS := \\$/;"	m
KERNEL_ASM_SRCS	build/Makefile	/^KERNEL_ASM_SRCS := lowlevel.asm lspawn.asm$/;"	m
KERNEL_BASE_ADDR	build/Makefile	/^KERNEL_BASE_ADDR := 0x00010000$/;"	m
KERNEL_CS	include/geekos/defs.h	17;"	d
KERNEL_CS	src/geekos/defs.asm	/^KERNEL_CS equ 1<<3	; kernel code segment is GDT entry 1$/;"	d
KERNEL_C_OBJS	build/Makefile	/^KERNEL_C_OBJS := $(KERNEL_C_SRCS:%.c=geekos\/%.o)$/;"	m
KERNEL_C_SRCS	build/Makefile	/^KERNEL_C_SRCS := idt.c int.c trap.c irq.c io.c \\$/;"	m
KERNEL_DS	include/geekos/defs.h	18;"	d
KERNEL_DS	src/geekos/defs.asm	/^KERNEL_DS equ 2<<3	; kernel data segment is GDT entry 2$/;"	d
KERNEL_ENTRY	build/Makefile	/^KERNEL_ENTRY = $(SYM_PFX)Main$/;"	m
KERNEL_HEAP_SIZE	include/geekos/mem.h	45;"	d
KERNEL_OBJS	build/Makefile	/^KERNEL_OBJS := $(KERNEL_C_OBJS) \\$/;"	m
KERNEL_PRIVILEGE	include/geekos/defs.h	35;"	d
KERNEL_START_ADDR	include/geekos/defs.h	30;"	d
KERNSEG	src/geekos/defs.asm	/^KERNSEG equ 0x1000$/;"	d
KERN_STACK	include/geekos/defs.h	25;"	d
KERN_STACK	src/geekos/defs.asm	/^KERN_STACK equ KERN_THREAD_OBJ + 4096$/;"	d
KERN_THREAD_OBJ	include/geekos/defs.h	24;"	d
KERN_THREAD_OBJ	src/geekos/defs.asm	/^KERN_THREAD_OBJ equ (1024*1024)$/;"	d
KEYPAD_START	include/geekos/keyboard.h	98;"	d
KEY_ALT_FLAG	include/geekos/keyboard.h	62;"	d
KEY_CAPSLOCK	include/geekos/keyboard.h	90;"	d
KEY_CTRL_FLAG	include/geekos/keyboard.h	63;"	d
KEY_F1	include/geekos/keyboard.h	71;"	d
KEY_F10	include/geekos/keyboard.h	80;"	d
KEY_F11	include/geekos/keyboard.h	81;"	d
KEY_F12	include/geekos/keyboard.h	82;"	d
KEY_F2	include/geekos/keyboard.h	72;"	d
KEY_F3	include/geekos/keyboard.h	73;"	d
KEY_F4	include/geekos/keyboard.h	74;"	d
KEY_F5	include/geekos/keyboard.h	75;"	d
KEY_F6	include/geekos/keyboard.h	76;"	d
KEY_F7	include/geekos/keyboard.h	77;"	d
KEY_F8	include/geekos/keyboard.h	78;"	d
KEY_F9	include/geekos/keyboard.h	79;"	d
KEY_KEYPAD_FLAG	include/geekos/keyboard.h	60;"	d
KEY_KPCENTER	include/geekos/keyboard.h	105;"	d
KEY_KPDEL	include/geekos/keyboard.h	112;"	d
KEY_KPDOWN	include/geekos/keyboard.h	109;"	d
KEY_KPEND	include/geekos/keyboard.h	108;"	d
KEY_KPHOME	include/geekos/keyboard.h	100;"	d
KEY_KPINSERT	include/geekos/keyboard.h	111;"	d
KEY_KPLEFT	include/geekos/keyboard.h	104;"	d
KEY_KPMINUS	include/geekos/keyboard.h	103;"	d
KEY_KPPGDN	include/geekos/keyboard.h	110;"	d
KEY_KPPGUP	include/geekos/keyboard.h	102;"	d
KEY_KPPLUS	include/geekos/keyboard.h	107;"	d
KEY_KPRIGHT	include/geekos/keyboard.h	106;"	d
KEY_KPUP	include/geekos/keyboard.h	101;"	d
KEY_LALT	include/geekos/keyboard.h	87;"	d
KEY_LCTRL	include/geekos/keyboard.h	83;"	d
KEY_LSHIFT	include/geekos/keyboard.h	85;"	d
KEY_NUMLOCK	include/geekos/keyboard.h	91;"	d
KEY_PRINTSCRN	include/geekos/keyboard.h	89;"	d
KEY_RALT	include/geekos/keyboard.h	88;"	d
KEY_RCTRL	include/geekos/keyboard.h	84;"	d
KEY_RELEASE_FLAG	include/geekos/keyboard.h	64;"	d
KEY_RSHIFT	include/geekos/keyboard.h	86;"	d
KEY_SCRLOCK	include/geekos/keyboard.h	92;"	d
KEY_SHIFT_FLAG	include/geekos/keyboard.h	61;"	d
KEY_SPECIAL_FLAG	include/geekos/keyboard.h	59;"	d
KEY_SYSREQ	include/geekos/keyboard.h	93;"	d
KEY_UNKNOWN	include/geekos/keyboard.h	70;"	d
Kernel_Thread	include/geekos/kthread.h	/^struct Kernel_Thread {$/;"	s
Keyboard_Interrupt_Handler	src/geekos/keyboard.c	/^static void Keyboard_Interrupt_Handler(struct Interrupt_State* state)$/;"	f	file:
Keycode	include/geekos/keyboard.h	/^typedef ushort_t Keycode;$/;"	t
Kill_Motor	src/geekos/setup.asm	/^Kill_Motor:$/;"	l
LBA_To_CHS	src/geekos/floppy.c	/^static void LBA_To_CHS(struct Floppy_Drive* drive, int lba, int *cylinder, int *head, int *sector)$/;"	f	file:
LEFT_ALT	src/geekos/keyboard.c	49;"	d	file:
LEFT_CTRL	src/geekos/keyboard.c	47;"	d	file:
LEFT_SHIFT	src/geekos/keyboard.c	45;"	d	file:
LIBC_C_OBJS	build/Makefile	/^LIBC_C_OBJS := $(LIBC_C_SRCS:%.c=libc\/%.o)$/;"	m
LIBC_C_SRCS	build/Makefile	/^LIBC_C_SRCS := \\$/;"	m
LITUSE_ALPHA_ADDR	include/geekos/elf.h	1951;"	d
LITUSE_ALPHA_BASE	include/geekos/elf.h	1952;"	d
LITUSE_ALPHA_BYTOFF	include/geekos/elf.h	1953;"	d
LITUSE_ALPHA_JSR	include/geekos/elf.h	1954;"	d
LITUSE_ALPHA_TLS_GD	include/geekos/elf.h	1955;"	d
LITUSE_ALPHA_TLS_LDM	include/geekos/elf.h	1956;"	d
LL_DELAY_LOAD	include/geekos/elf.h	1692;"	d
LL_DELTA	include/geekos/elf.h	1693;"	d
LL_EXACT_MATCH	include/geekos/elf.h	1688;"	d
LL_EXPORTS	include/geekos/elf.h	1691;"	d
LL_IGNORE_INT_VER	include/geekos/elf.h	1689;"	d
LL_NONE	include/geekos/elf.h	1687;"	d
LL_REQUIRE_MINOR	include/geekos/elf.h	1690;"	d
LOW_BYTE	src/geekos/ide.c	89;"	d	file:
Launch_Thread	src/geekos/kthread.c	/^static void Launch_Thread(void)$/;"	f	file:
Load_GDTR	src/geekos/lowlevel.asm	/^Load_GDTR:$/;"	l
Load_IDTR	src/geekos/lowlevel.asm	/^Load_IDTR:$/;"	l
Load_LDTR	src/geekos/lowlevel.asm	/^Load_LDTR:$/;"	l
Load_Task_Register	src/geekos/tss.c	/^static void __inline__ Load_Task_Register(void)$/;"	f	file:
Lookup_Filesystem	src/geekos/vfs.c	/^static struct Filesystem *Lookup_Filesystem(const char *fstype)$/;"	f	file:
Lookup_Mount_Point	src/geekos/vfs.c	/^static struct Mount_Point *Lookup_Mount_Point(const char *prefix)$/;"	f	file:
Lookup_Thread	src/geekos/kthread.c	/^struct Kernel_Thread* Lookup_Thread(int pid)$/;"	f
MAGENTA	include/geekos/screen.h	20;"	d
MASTER	src/geekos/irq.c	29;"	d	file:
MAX	include/geekos/ktypes.h	33;"	d
MAXARGS	src/geekos/screen.c	39;"	d	file:
MAX_PREFIX_LEN	src/geekos/vfs.c	63;"	d	file:
MAX_RANK	src/common/fmtout.c	74;"	d	file:
MAX_TLOCAL_KEYS	include/geekos/kthread.h	60;"	d
MIN	include/geekos/ktypes.h	32;"	d
MIN_DESTRUCTOR_ITERATIONS	include/geekos/kthread.h	145;"	d
MIN_RANK	src/common/fmtout.c	73;"	d	file:
MUTEX_INITIALIZER	include/geekos/synch.h	26;"	d
MUTEX_LOCKED	include/geekos/synch.h	/^enum { MUTEX_UNLOCKED, MUTEX_LOCKED };$/;"	e	enum:__anon1
MUTEX_UNLOCKED	include/geekos/synch.h	/^enum { MUTEX_UNLOCKED, MUTEX_LOCKED };$/;"	e	enum:__anon1
Main	src/geekos/main.c	/^void Main(struct Boot_Info* bootInfo)$/;"	f
Make_Runnable	src/geekos/kthread.c	/^void Make_Runnable(struct Kernel_Thread* kthread)$/;"	f
Make_Runnable_Atomic	src/geekos/kthread.c	/^void Make_Runnable_Atomic(struct Kernel_Thread* kthread)$/;"	f
Malloc	src/geekos/malloc.c	/^void* Malloc(ulong_t size)$/;"	f
Malloc	src/libc/compat.c	/^void *Malloc(size_t n)$/;"	f
Mask_DMA	src/geekos/dma.c	/^void Mask_DMA(int chan)$/;"	f
MemSize	src/geekos/bget.c	491;"	d	file:
Micro_Delay	src/geekos/timer.c	/^void Micro_Delay(int us)$/;"	f
Mount	include/geekos/vfs.h	/^    int (*Mount)(struct Mount_Point *mountPoint);$/;"	m	struct:Filesystem_Ops
Mount	src/geekos/vfs.c	/^int Mount(const char *devname, const char *pathPrefix, const char *fstype)$/;"	f
Mount_Point	include/geekos/vfs.h	/^struct Mount_Point {$/;"	s
Mount_Point_Ops	include/geekos/vfs.h	/^struct Mount_Point_Ops {$/;"	s
Mount_Root_Filesystem	src/geekos/main.c	/^static void Mount_Root_Filesystem(void)$/;"	f	file:
Move_Cursor	src/geekos/screen.c	/^static void Move_Cursor(int row, int col)$/;"	f	file:
Mutex	include/geekos/synch.h	/^struct Mutex {$/;"	s
Mutex_Init	src/geekos/synch.c	/^void Mutex_Init(struct Mutex* mutex)$/;"	f
Mutex_Lock	src/geekos/synch.c	/^void Mutex_Lock(struct Mutex* mutex)$/;"	f
Mutex_Lock_Imp	src/geekos/synch.c	/^static __inline__ void Mutex_Lock_Imp(struct Mutex* mutex)$/;"	f	file:
Mutex_Unlock	src/geekos/synch.c	/^void Mutex_Unlock(struct Mutex* mutex)$/;"	f
Mutex_Unlock_Imp	src/geekos/synch.c	/^static __inline__ void Mutex_Unlock_Imp(struct Mutex* mutex)$/;"	f	file:
Mutex_Wait	src/geekos/synch.c	/^static void Mutex_Wait(struct Mutex *mutex)$/;"	f	file:
NASM	build/Makefile	/^NASM := nasm$/;"	m
NASM_KERNEL_OPTS	build/Makefile	/^NASM_KERNEL_OPTS := -I$(PROJECT_ROOT)\/src\/geekos\/ -f elf $(EXTRA_NASM_OPTS)$/;"	m
NDEBUG	src/geekos/bget.c	466;"	d	file:
NDIGITS_MAX	src/common/fmtout.c	94;"	d	file:
NEXT	src/geekos/keyboard.c	62;"	d	file:
NON_ELF_SYSTEM	build/Makefile	/^NON_ELF_SYSTEM     := yes$/;"	m
NT_386_IOPERM	include/geekos/elf.h	629;"	d
NT_386_TLS	include/geekos/elf.h	628;"	d
NT_ARM_HW_BREAK	include/geekos/elf.h	642;"	d
NT_ARM_HW_WATCH	include/geekos/elf.h	643;"	d
NT_ARM_TLS	include/geekos/elf.h	641;"	d
NT_ARM_VFP	include/geekos/elf.h	640;"	d
NT_ASRS	include/geekos/elf.h	612;"	d
NT_AUXV	include/geekos/elf.h	610;"	d
NT_FILE	include/geekos/elf.h	622;"	d
NT_FPREGSET	include/geekos/elf.h	605;"	d
NT_GNU_ABI_TAG	include/geekos/elf.h	1016;"	d
NT_GNU_BUILD_ID	include/geekos/elf.h	1036;"	d
NT_GNU_GOLD_VERSION	include/geekos/elf.h	1039;"	d
NT_GNU_HWCAP	include/geekos/elf.h	1032;"	d
NT_GWINDOWS	include/geekos/elf.h	611;"	d
NT_LWPSINFO	include/geekos/elf.h	618;"	d
NT_LWPSTATUS	include/geekos/elf.h	617;"	d
NT_PLATFORM	include/geekos/elf.h	609;"	d
NT_PPC_SPE	include/geekos/elf.h	626;"	d
NT_PPC_VMX	include/geekos/elf.h	625;"	d
NT_PPC_VSX	include/geekos/elf.h	627;"	d
NT_PRCRED	include/geekos/elf.h	615;"	d
NT_PRFPXREG	include/geekos/elf.h	619;"	d
NT_PRPSINFO	include/geekos/elf.h	606;"	d
NT_PRSTATUS	include/geekos/elf.h	604;"	d
NT_PRXFPREG	include/geekos/elf.h	624;"	d
NT_PRXREG	include/geekos/elf.h	607;"	d
NT_PSINFO	include/geekos/elf.h	614;"	d
NT_PSTATUS	include/geekos/elf.h	613;"	d
NT_S390_CTRS	include/geekos/elf.h	635;"	d
NT_S390_HIGH_GPRS	include/geekos/elf.h	631;"	d
NT_S390_LAST_BREAK	include/geekos/elf.h	637;"	d
NT_S390_PREFIX	include/geekos/elf.h	636;"	d
NT_S390_SYSTEM_CALL	include/geekos/elf.h	638;"	d
NT_S390_TDB	include/geekos/elf.h	639;"	d
NT_S390_TIMER	include/geekos/elf.h	632;"	d
NT_S390_TODCMP	include/geekos/elf.h	633;"	d
NT_S390_TODPREG	include/geekos/elf.h	634;"	d
NT_SIGINFO	include/geekos/elf.h	620;"	d
NT_TASKSTRUCT	include/geekos/elf.h	608;"	d
NT_UTSNAME	include/geekos/elf.h	616;"	d
NT_VERSION	include/geekos/elf.h	647;"	d
NT_X86_XSTATE	include/geekos/elf.h	630;"	d
NUMCOLS	include/geekos/screen.h	26;"	d
NUMROWS	include/geekos/screen.h	27;"	d
NUMSECS	build/Makefile	/^NUMSECS := $(PERL) $(PROJECT_ROOT)\/scripts\/numsecs$/;"	m
NUM_DWORDS_PER_LINE	src/geekos/screen.c	57;"	d	file:
NUM_EXCEPTIONS	include/geekos/idt.h	24;"	d
NUM_EXTERNAL_INTS	include/geekos/idt.h	30;"	d
NUM_FLOPPY_TYPES	src/geekos/floppy.c	161;"	d	file:
NUM_GDT_ENTRIES	src/geekos/gdt.c	28;"	d	file:
NUM_GDT_ENTRIES	src/geekos/setup.asm	/^NUM_GDT_ENTRIES equ 3		; number of entries in GDT$/;"	d
NUM_IDT_ENTRIES	include/geekos/idt.h	18;"	d
NUM_SCREEN_DWORDS	src/geekos/screen.c	55;"	d	file:
NUM_SCROLL_DWORDS	src/geekos/screen.c	56;"	d	file:
Newline	src/geekos/screen.c	/^static void Newline(void)$/;"	f	file:
Notify_Request_Completion	src/geekos/blockdev.c	/^void Notify_Request_Completion(struct Block_Request *request, enum Request_State state, int errorCode)$/;"	f
OBJCOPY_FLAGS	build/Makefile	/^OBJCOPY_FLAGS := -R .dynamic -R .note -R .comment$/;"	m
ODK_EXCEPTIONS	include/geekos/elf.h	1468;"	d
ODK_FILL	include/geekos/elf.h	1471;"	d
ODK_HWAND	include/geekos/elf.h	1473;"	d
ODK_HWOR	include/geekos/elf.h	1474;"	d
ODK_HWPATCH	include/geekos/elf.h	1470;"	d
ODK_NULL	include/geekos/elf.h	1466;"	d
ODK_PAD	include/geekos/elf.h	1469;"	d
ODK_REGINFO	include/geekos/elf.h	1467;"	d
ODK_TAGS	include/geekos/elf.h	1472;"	d
OEX_DISMISS	include/geekos/elf.h	1484;"	d
OEX_FPDBUG	include/geekos/elf.h	1482;"	d
OEX_FPU_DIV0	include/geekos/elf.h	1487;"	d
OEX_FPU_INEX	include/geekos/elf.h	1490;"	d
OEX_FPU_INVAL	include/geekos/elf.h	1486;"	d
OEX_FPU_MAX	include/geekos/elf.h	1479;"	d
OEX_FPU_MIN	include/geekos/elf.h	1478;"	d
OEX_FPU_OFLO	include/geekos/elf.h	1488;"	d
OEX_FPU_UFLO	include/geekos/elf.h	1489;"	d
OEX_PAGE0	include/geekos/elf.h	1480;"	d
OEX_PRECISEFP	include/geekos/elf.h	1483;"	d
OEX_SMM	include/geekos/elf.h	1481;"	d
OHWA0_R4KEOP_CHECKED	include/geekos/elf.h	1513;"	d
OHWA1_R4KEOP_CLEAN	include/geekos/elf.h	1514;"	d
OHW_R4KEOP	include/geekos/elf.h	1494;"	d
OHW_R5KCVTL	include/geekos/elf.h	1497;"	d
OHW_R5KEOP	include/geekos/elf.h	1496;"	d
OHW_R8KPFETCH	include/geekos/elf.h	1495;"	d
OPAD_POSTFIX	include/geekos/elf.h	1500;"	d
OPAD_PREFIX	include/geekos/elf.h	1499;"	d
OPAD_SYMBOL	include/geekos/elf.h	1501;"	d
OUR_RAND	src/geekos/bget.c	1271;"	d	file:
OUTPUT_H	include/libc/fmtout.h	11;"	d
O_CREATE	include/geekos/fileio.h	38;"	d
O_EXCL	include/geekos/fileio.h	41;"	d
O_READ	include/geekos/fileio.h	39;"	d
O_WRITE	include/geekos/fileio.h	40;"	d
Open	include/geekos/blockdev.h	/^    int (*Open)(struct Block_Device *dev);$/;"	m	struct:Block_Device_Ops
Open	include/geekos/vfs.h	/^    int (*Open)(struct Mount_Point *mountPoint, const char *path, int mode, struct File **pFile);$/;"	m	struct:Mount_Point_Ops
Open	src/geekos/vfs.c	/^int Open(const char *path, int mode, struct File **pFile)$/;"	f
Open_Block_Device	src/geekos/blockdev.c	/^int Open_Block_Device(const char *name, struct Block_Device **pDev)$/;"	f
Open_Directory	include/geekos/vfs.h	/^    int (*Open_Directory)(struct Mount_Point *mountPoint, const char *path, struct File **pDir);$/;"	m	struct:Mount_Point_Ops
Open_Directory	src/geekos/vfs.c	/^int Open_Directory(const char *path, struct File **pDir)$/;"	f
Out_Byte	src/geekos/io.c	/^void Out_Byte(ushort_t port, uchar_t value)$/;"	f
Out_Word	src/geekos/io.c	/^void Out_Word(ushort_t port, ushort_t value)$/;"	f
Output_Literal_Character	src/geekos/screen.c	/^static void Output_Literal_Character(int c)$/;"	f	file:
Output_Sink	include/libc/fmtout.h	/^struct Output_Sink {$/;"	s
PACKED	include/geekos/segment.h	/^    ushort_t sizeLow        PACKED ;$/;"	m	struct:Segment_Descriptor
PACKED	include/geekos/segment.h	23;"	d
PACKED	include/geekos/segment.h	25;"	d
PAD	build/Makefile	/^PAD := $(PERL) $(PROJECT_ROOT)\/scripts\/pad$/;"	m
PAGEFILE_FILENAME	src/geekos/pfat.c	41;"	d	file:
PAGE_ALLOCATED	include/geekos/mem.h	26;"	d
PAGE_AVAIL	include/geekos/mem.h	23;"	d
PAGE_HEAP	include/geekos/mem.h	28;"	d
PAGE_HW	include/geekos/mem.h	25;"	d
PAGE_KERN	include/geekos/mem.h	24;"	d
PAGE_MASK	include/geekos/defs.h	61;"	d
PAGE_POWER	include/geekos/defs.h	59;"	d
PAGE_SIZE	include/geekos/defs.h	60;"	d
PAGE_UNUSED	include/geekos/mem.h	27;"	d
PAUSE	include/geekos/kassert.h	46;"	d
PAUSE	include/geekos/kassert.h	60;"	d
PENDING	include/geekos/blockdev.h	/^    PENDING, COMPLETED, ERROR$/;"	e	enum:Request_State
PERL	build/Makefile	/^PERL := perl$/;"	m
PFAT_BOOT_RECORD_OFFSET	include/geekos/pfat.h	53;"	d
PFAT_BOOT_RECORD_OFFSET	src/geekos/defs.asm	/^PFAT_BOOT_RECORD_OFFSET equ BIOS_SIGNATURE_OFFSET - PFAT_BOOT_RECORD_SIZE$/;"	d
PFAT_BOOT_RECORD_SIZE	src/geekos/bootsect.asm	/^PFAT_BOOT_RECORD_SIZE equ 28$/;"	d
PFAT_BOOT_RECORD_SIZE	src/geekos/defs.asm	/^PFAT_BOOT_RECORD_SIZE equ 28$/;"	d
PFAT_Close	src/geekos/pfat.c	/^static int PFAT_Close(struct File *file)$/;"	f	file:
PFAT_Close_Dir	src/geekos/pfat.c	/^static int PFAT_Close_Dir(struct File *dir)$/;"	f	file:
PFAT_FStat	src/geekos/pfat.c	/^static int PFAT_FStat(struct File *file, struct VFS_File_Stat *stat)$/;"	f	file:
PFAT_FStat_Dir	src/geekos/pfat.c	/^static int PFAT_FStat_Dir(struct File *dir, struct VFS_File_Stat *stat)$/;"	f	file:
PFAT_File	src/geekos/pfat.c	/^struct PFAT_File {$/;"	s	file:
PFAT_Instance	src/geekos/pfat.c	/^struct PFAT_Instance {$/;"	s	file:
PFAT_Lookup	src/geekos/pfat.c	/^static directoryEntry *PFAT_Lookup(struct PFAT_Instance *instance, const char *path)$/;"	f	file:
PFAT_MAGIC	include/geekos/pfat.h	50;"	d
PFAT_Mount	src/geekos/pfat.c	/^static int PFAT_Mount(struct Mount_Point *mountPoint)$/;"	f	file:
PFAT_Open	src/geekos/pfat.c	/^static int PFAT_Open(struct Mount_Point *mountPoint, const char *path, int mode, struct File **pFile)$/;"	f	file:
PFAT_Open_Directory	src/geekos/pfat.c	/^static int PFAT_Open_Directory(struct Mount_Point *mountPoint, const char *path, struct File **pDir)$/;"	f	file:
PFAT_Read	src/geekos/pfat.c	/^static int PFAT_Read(struct File *file, void *buf, ulong_t numBytes)$/;"	f	file:
PFAT_Read_Entry	src/geekos/pfat.c	/^static int PFAT_Read_Entry(struct File *dir, struct VFS_Dir_Entry *entry)$/;"	f	file:
PFAT_Register_Paging_File	src/geekos/pfat.c	/^static void PFAT_Register_Paging_File(struct Mount_Point *mountPoint, struct PFAT_Instance *instance)$/;"	f	file:
PFAT_Seek	src/geekos/pfat.c	/^static int PFAT_Seek(struct File *file, ulong_t pos)$/;"	f	file:
PFAT_Stat	src/geekos/pfat.c	/^static int PFAT_Stat(struct Mount_Point *mountPoint, const char *path, struct VFS_File_Stat *stat)$/;"	f	file:
PFAT_Sync	src/geekos/pfat.c	/^static int PFAT_Sync(struct Mount_Point *mountPoint)$/;"	f	file:
PFAT_Write	src/geekos/pfat.c	/^static int PFAT_Write(struct File *file, void *buf, ulong_t numBytes)$/;"	f	file:
PF_ARM_ABS	include/geekos/elf.h	2292;"	d
PF_ARM_PI	include/geekos/elf.h	2291;"	d
PF_ARM_SB	include/geekos/elf.h	2289;"	d
PF_HP_CODE	include/geekos/elf.h	1885;"	d
PF_HP_FAR_SHARED	include/geekos/elf.h	1883;"	d
PF_HP_LAZYSWAP	include/geekos/elf.h	1887;"	d
PF_HP_MODIFY	include/geekos/elf.h	1886;"	d
PF_HP_NEAR_SHARED	include/geekos/elf.h	1884;"	d
PF_HP_PAGE_SIZE	include/geekos/elf.h	1882;"	d
PF_HP_SBP	include/geekos/elf.h	1888;"	d
PF_IA_64_NORECOV	include/geekos/elf.h	2612;"	d
PF_MASKOS	include/geekos/elf.h	599;"	d
PF_MASKPROC	include/geekos/elf.h	600;"	d
PF_MIPS_LOCAL	include/geekos/elf.h	1581;"	d
PF_PARISC_SBP	include/geekos/elf.h	1880;"	d
PF_R	include/geekos/elf.h	598;"	d
PF_W	include/geekos/elf.h	597;"	d
PF_X	include/geekos/elf.h	596;"	d
PN_XNUM	include/geekos/elf.h	569;"	d
POLYNOMIAL	src/geekos/crc32.c	12;"	d	file:
PPC64_LOCAL_ENTRY_OFFSET	include/geekos/elf.h	2236;"	d
PPC64_OPT_MULTI_TOC	include/geekos/elf.h	2231;"	d
PPC64_OPT_TLS	include/geekos/elf.h	2230;"	d
PRIORITY_HIGH	include/geekos/kthread.h	91;"	d
PRIORITY_IDLE	include/geekos/kthread.h	87;"	d
PRIORITY_LOW	include/geekos/kthread.h	89;"	d
PRIORITY_NORMAL	include/geekos/kthread.h	90;"	d
PRIORITY_USER	include/geekos/kthread.h	88;"	d
PROJECT_ROOT	build/Makefile	/^PROJECT_ROOT := ..$/;"	m
PROTOTYPES	include/geekos/bget.h	17;"	d
PTRDIFF_T_RANK	src/common/fmtout.c	78;"	d	file:
PT_ARM_EXIDX	include/geekos/elf.h	2295;"	d
PT_DYNAMIC	include/geekos/elf.h	575;"	d
PT_GNU_EH_FRAME	include/geekos/elf.h	583;"	d
PT_GNU_RELRO	include/geekos/elf.h	585;"	d
PT_GNU_STACK	include/geekos/elf.h	584;"	d
PT_HIOS	include/geekos/elf.h	590;"	d
PT_HIPROC	include/geekos/elf.h	592;"	d
PT_HISUNW	include/geekos/elf.h	589;"	d
PT_HP_CORE_COMM	include/geekos/elf.h	1863;"	d
PT_HP_CORE_KERNEL	include/geekos/elf.h	1862;"	d
PT_HP_CORE_LOADABLE	include/geekos/elf.h	1865;"	d
PT_HP_CORE_MMF	include/geekos/elf.h	1868;"	d
PT_HP_CORE_NONE	include/geekos/elf.h	1860;"	d
PT_HP_CORE_PROC	include/geekos/elf.h	1864;"	d
PT_HP_CORE_SHM	include/geekos/elf.h	1867;"	d
PT_HP_CORE_STACK	include/geekos/elf.h	1866;"	d
PT_HP_CORE_VERSION	include/geekos/elf.h	1861;"	d
PT_HP_FASTBIND	include/geekos/elf.h	1870;"	d
PT_HP_HSL_ANNOT	include/geekos/elf.h	1872;"	d
PT_HP_OPT_ANNOT	include/geekos/elf.h	1871;"	d
PT_HP_PARALLEL	include/geekos/elf.h	1869;"	d
PT_HP_STACK	include/geekos/elf.h	1873;"	d
PT_HP_TLS	include/geekos/elf.h	1859;"	d
PT_IA_64_ARCHEXT	include/geekos/elf.h	2605;"	d
PT_IA_64_HP_HSL_ANOT	include/geekos/elf.h	2608;"	d
PT_IA_64_HP_OPT_ANOT	include/geekos/elf.h	2607;"	d
PT_IA_64_HP_STACK	include/geekos/elf.h	2609;"	d
PT_IA_64_UNWIND	include/geekos/elf.h	2606;"	d
PT_INTERP	include/geekos/elf.h	576;"	d
PT_LOAD	include/geekos/elf.h	574;"	d
PT_LOOS	include/geekos/elf.h	582;"	d
PT_LOPROC	include/geekos/elf.h	591;"	d
PT_LOSUNW	include/geekos/elf.h	586;"	d
PT_MIPS_OPTIONS	include/geekos/elf.h	1577;"	d
PT_MIPS_REGINFO	include/geekos/elf.h	1575;"	d
PT_MIPS_RTPROC	include/geekos/elf.h	1576;"	d
PT_NOTE	include/geekos/elf.h	577;"	d
PT_NULL	include/geekos/elf.h	573;"	d
PT_NUM	include/geekos/elf.h	581;"	d
PT_PARISC_ARCHEXT	include/geekos/elf.h	1875;"	d
PT_PARISC_UNWIND	include/geekos/elf.h	1876;"	d
PT_PHDR	include/geekos/elf.h	579;"	d
PT_SHLIB	include/geekos/elf.h	578;"	d
PT_SUNWBSS	include/geekos/elf.h	587;"	d
PT_SUNWSTACK	include/geekos/elf.h	588;"	d
PT_TLS	include/geekos/elf.h	580;"	d
PadFromStart	src/geekos/bootsect.asm	/^PadFromStart BIOS_SIGNATURE_OFFSET - PFAT_BOOT_RECORD_SIZE$/;"	l
PadFromStart	src/geekos/bootsect.asm	/^PadFromStart BIOS_SIGNATURE_OFFSET$/;"	l
Pad_From_Symbol	src/geekos/fd_boot.asm	/^Pad_From_Symbol BIOS_SIGNATURE_OFFSET, BeginText$/;"	l
Pad_From_Symbol	src/geekos/fd_boot.asm	/^Pad_From_Symbol PFAT_BOOT_RECORD_OFFSET, BeginText$/;"	l
Page	include/geekos/mem.h	/^struct Page {$/;"	s
Page_Index	include/geekos/mem.h	/^static __inline__ int Page_Index(ulong_t addr)$/;"	f
Paging_Device	include/geekos/vfs.h	/^struct Paging_Device {$/;"	s
Panic	include/geekos/kassert.h	74;"	d
Parse_ELF_Executable	src/geekos/elf.c	/^int Parse_ELF_Executable(char *exeFileData, ulong_t exeFileLength,$/;"	f
PoolSize	src/geekos/bget.c	1276;"	d	file:
PoolSize	src/geekos/bget.c	1278;"	d	file:
Post_Request_And_Wait	src/geekos/blockdev.c	/^void Post_Request_And_Wait(struct Block_Request *request)$/;"	f
Print	src/geekos/screen.c	/^void Print(const char *fmt, ...)$/;"	f
PrintHex	src/geekos/util.asm	/^PrintHex:$/;"	l
PrintNL	src/geekos/util.asm	/^PrintNL:			; print CR and NL$/;"	l
Print_Emit	src/geekos/screen.c	/^static void Print_Emit(struct Output_Sink *o, int ch) { Put_Char_Imp(ch); }$/;"	f	file:
Print_Finish	src/geekos/screen.c	/^static void Print_Finish(struct Output_Sink *o) { Update_Cursor(); }$/;"	f	file:
Print_Selector	src/geekos/int.c	/^static void Print_Selector(const char* regName, uint_t value)$/;"	f	file:
Printrap_Handler	src/geekos/lprog.c	/^static void Printrap_Handler( struct Interrupt_State* state )$/;"	f	file:
Push	src/geekos/kthread.c	/^static __inline__ void Push(struct Kernel_Thread* kthread, ulong_t value)$/;"	f	file:
Push_General_Registers	src/geekos/kthread.c	/^static void Push_General_Registers(struct Kernel_Thread* kthread)$/;"	f	file:
Put_Buf	src/geekos/screen.c	/^void Put_Buf(const char* buf, ulong_t length)$/;"	f
Put_Char	src/geekos/screen.c	/^void Put_Char(int c)$/;"	f
Put_Char_Imp	src/geekos/screen.c	/^static void Put_Char_Imp(int c)$/;"	f	file:
Put_Cursor	src/geekos/screen.c	/^bool Put_Cursor(int row, int col)$/;"	f
Put_Graphic_Char	src/geekos/screen.c	/^static void Put_Graphic_Char(int c)$/;"	f	file:
Put_String	src/geekos/screen.c	/^void Put_String(const char* s)$/;"	f
QLSize	src/geekos/bget.c	563;"	d	file:
QUEUE_MASK	src/geekos/keyboard.c	61;"	d	file:
QUEUE_SIZE	src/geekos/keyboard.c	60;"	d	file:
RED	include/geekos/screen.h	19;"	d
REG_SKIP	src/geekos/lowlevel.asm	/^REG_SKIP equ (11*4)$/;"	d
RHF_CORD	include/geekos/elf.h	1660;"	d
RHF_DEFAULT_DELAY_LOAD	include/geekos/elf.h	1657;"	d
RHF_DELTA_C_PLUS_PLUS	include/geekos/elf.h	1654;"	d
RHF_GUARANTEE_INIT	include/geekos/elf.h	1653;"	d
RHF_GUARANTEE_START_INIT	include/geekos/elf.h	1655;"	d
RHF_NONE	include/geekos/elf.h	1647;"	d
RHF_NOTPOT	include/geekos/elf.h	1649;"	d
RHF_NO_LIBRARY_REPLACEMENT	include/geekos/elf.h	1650;"	d
RHF_NO_MOVE	include/geekos/elf.h	1651;"	d
RHF_NO_UNRES_UNDEF	include/geekos/elf.h	1661;"	d
RHF_PIXIE	include/geekos/elf.h	1656;"	d
RHF_QUICKSTART	include/geekos/elf.h	1648;"	d
RHF_REQUICKSTART	include/geekos/elf.h	1658;"	d
RHF_REQUICKSTARTED	include/geekos/elf.h	1659;"	d
RHF_RLD_ORDER_SAFE	include/geekos/elf.h	1662;"	d
RHF_SGI_ONLY	include/geekos/elf.h	1652;"	d
RIGHT_ALT	src/geekos/keyboard.c	50;"	d	file:
RIGHT_CTRL	src/geekos/keyboard.c	48;"	d	file:
RIGHT_SHIFT	src/geekos/keyboard.c	46;"	d	file:
ROOT_DEVICE	src/geekos/main.c	38;"	d	file:
ROOT_DEVICE	src/geekos/main.c	41;"	d	file:
ROOT_PREFIX	src/geekos/main.c	39;"	d	file:
ROOT_PREFIX	src/geekos/main.c	42;"	d	file:
R_386_16	include/geekos/elf.h	1153;"	d
R_386_32	include/geekos/elf.h	1130;"	d
R_386_32PLT	include/geekos/elf.h	1140;"	d
R_386_8	include/geekos/elf.h	1155;"	d
R_386_COPY	include/geekos/elf.h	1134;"	d
R_386_GLOB_DAT	include/geekos/elf.h	1135;"	d
R_386_GOT32	include/geekos/elf.h	1132;"	d
R_386_GOTOFF	include/geekos/elf.h	1138;"	d
R_386_GOTPC	include/geekos/elf.h	1139;"	d
R_386_IRELATIVE	include/geekos/elf.h	1186;"	d
R_386_JMP_SLOT	include/geekos/elf.h	1136;"	d
R_386_NONE	include/geekos/elf.h	1129;"	d
R_386_NUM	include/geekos/elf.h	1188;"	d
R_386_PC16	include/geekos/elf.h	1154;"	d
R_386_PC32	include/geekos/elf.h	1131;"	d
R_386_PC8	include/geekos/elf.h	1156;"	d
R_386_PLT32	include/geekos/elf.h	1133;"	d
R_386_RELATIVE	include/geekos/elf.h	1137;"	d
R_386_SIZE32	include/geekos/elf.h	1177;"	d
R_386_TLS_DESC	include/geekos/elf.h	1182;"	d
R_386_TLS_DESC_CALL	include/geekos/elf.h	1179;"	d
R_386_TLS_DTPMOD32	include/geekos/elf.h	1174;"	d
R_386_TLS_DTPOFF32	include/geekos/elf.h	1175;"	d
R_386_TLS_GD	include/geekos/elf.h	1148;"	d
R_386_TLS_GD_32	include/geekos/elf.h	1157;"	d
R_386_TLS_GD_CALL	include/geekos/elf.h	1160;"	d
R_386_TLS_GD_POP	include/geekos/elf.h	1162;"	d
R_386_TLS_GD_PUSH	include/geekos/elf.h	1159;"	d
R_386_TLS_GOTDESC	include/geekos/elf.h	1178;"	d
R_386_TLS_GOTIE	include/geekos/elf.h	1144;"	d
R_386_TLS_IE	include/geekos/elf.h	1142;"	d
R_386_TLS_IE_32	include/geekos/elf.h	1170;"	d
R_386_TLS_LDM	include/geekos/elf.h	1150;"	d
R_386_TLS_LDM_32	include/geekos/elf.h	1163;"	d
R_386_TLS_LDM_CALL	include/geekos/elf.h	1166;"	d
R_386_TLS_LDM_POP	include/geekos/elf.h	1168;"	d
R_386_TLS_LDM_PUSH	include/geekos/elf.h	1165;"	d
R_386_TLS_LDO_32	include/geekos/elf.h	1169;"	d
R_386_TLS_LE	include/geekos/elf.h	1146;"	d
R_386_TLS_LE_32	include/geekos/elf.h	1172;"	d
R_386_TLS_TPOFF	include/geekos/elf.h	1141;"	d
R_386_TLS_TPOFF32	include/geekos/elf.h	1176;"	d
R_390_12	include/geekos/elf.h	2786;"	d
R_390_16	include/geekos/elf.h	2787;"	d
R_390_20	include/geekos/elf.h	2858;"	d
R_390_32	include/geekos/elf.h	2788;"	d
R_390_64	include/geekos/elf.h	2806;"	d
R_390_8	include/geekos/elf.h	2785;"	d
R_390_COPY	include/geekos/elf.h	2793;"	d
R_390_GLOB_DAT	include/geekos/elf.h	2794;"	d
R_390_GOT12	include/geekos/elf.h	2790;"	d
R_390_GOT16	include/geekos/elf.h	2799;"	d
R_390_GOT20	include/geekos/elf.h	2859;"	d
R_390_GOT32	include/geekos/elf.h	2791;"	d
R_390_GOT64	include/geekos/elf.h	2808;"	d
R_390_GOTENT	include/geekos/elf.h	2810;"	d
R_390_GOTOFF16	include/geekos/elf.h	2811;"	d
R_390_GOTOFF32	include/geekos/elf.h	2797;"	d
R_390_GOTOFF64	include/geekos/elf.h	2812;"	d
R_390_GOTPC	include/geekos/elf.h	2798;"	d
R_390_GOTPCDBL	include/geekos/elf.h	2805;"	d
R_390_GOTPLT12	include/geekos/elf.h	2813;"	d
R_390_GOTPLT16	include/geekos/elf.h	2814;"	d
R_390_GOTPLT20	include/geekos/elf.h	2860;"	d
R_390_GOTPLT32	include/geekos/elf.h	2815;"	d
R_390_GOTPLT64	include/geekos/elf.h	2816;"	d
R_390_GOTPLTENT	include/geekos/elf.h	2817;"	d
R_390_IRELATIVE	include/geekos/elf.h	2863;"	d
R_390_JMP_SLOT	include/geekos/elf.h	2795;"	d
R_390_NONE	include/geekos/elf.h	2784;"	d
R_390_NUM	include/geekos/elf.h	2865;"	d
R_390_PC16	include/geekos/elf.h	2800;"	d
R_390_PC16DBL	include/geekos/elf.h	2801;"	d
R_390_PC32	include/geekos/elf.h	2789;"	d
R_390_PC32DBL	include/geekos/elf.h	2803;"	d
R_390_PC64	include/geekos/elf.h	2807;"	d
R_390_PLT16DBL	include/geekos/elf.h	2802;"	d
R_390_PLT32	include/geekos/elf.h	2792;"	d
R_390_PLT32DBL	include/geekos/elf.h	2804;"	d
R_390_PLT64	include/geekos/elf.h	2809;"	d
R_390_PLTOFF16	include/geekos/elf.h	2818;"	d
R_390_PLTOFF32	include/geekos/elf.h	2819;"	d
R_390_PLTOFF64	include/geekos/elf.h	2820;"	d
R_390_RELATIVE	include/geekos/elf.h	2796;"	d
R_390_TLS_DTPMOD	include/geekos/elf.h	2854;"	d
R_390_TLS_DTPOFF	include/geekos/elf.h	2855;"	d
R_390_TLS_GD32	include/geekos/elf.h	2826;"	d
R_390_TLS_GD64	include/geekos/elf.h	2828;"	d
R_390_TLS_GDCALL	include/geekos/elf.h	2822;"	d
R_390_TLS_GOTIE12	include/geekos/elf.h	2830;"	d
R_390_TLS_GOTIE20	include/geekos/elf.h	2861;"	d
R_390_TLS_GOTIE32	include/geekos/elf.h	2832;"	d
R_390_TLS_GOTIE64	include/geekos/elf.h	2834;"	d
R_390_TLS_IE32	include/geekos/elf.h	2840;"	d
R_390_TLS_IE64	include/geekos/elf.h	2842;"	d
R_390_TLS_IEENT	include/geekos/elf.h	2844;"	d
R_390_TLS_LDCALL	include/geekos/elf.h	2824;"	d
R_390_TLS_LDM32	include/geekos/elf.h	2836;"	d
R_390_TLS_LDM64	include/geekos/elf.h	2838;"	d
R_390_TLS_LDO32	include/geekos/elf.h	2850;"	d
R_390_TLS_LDO64	include/geekos/elf.h	2852;"	d
R_390_TLS_LE32	include/geekos/elf.h	2846;"	d
R_390_TLS_LE64	include/geekos/elf.h	2848;"	d
R_390_TLS_LOAD	include/geekos/elf.h	2821;"	d
R_390_TLS_TPOFF	include/geekos/elf.h	2856;"	d
R_68K_16	include/geekos/elf.h	1080;"	d
R_68K_32	include/geekos/elf.h	1079;"	d
R_68K_8	include/geekos/elf.h	1081;"	d
R_68K_COPY	include/geekos/elf.h	1097;"	d
R_68K_GLOB_DAT	include/geekos/elf.h	1098;"	d
R_68K_GOT16	include/geekos/elf.h	1086;"	d
R_68K_GOT16O	include/geekos/elf.h	1089;"	d
R_68K_GOT32	include/geekos/elf.h	1085;"	d
R_68K_GOT32O	include/geekos/elf.h	1088;"	d
R_68K_GOT8	include/geekos/elf.h	1087;"	d
R_68K_GOT8O	include/geekos/elf.h	1090;"	d
R_68K_JMP_SLOT	include/geekos/elf.h	1099;"	d
R_68K_NONE	include/geekos/elf.h	1078;"	d
R_68K_NUM	include/geekos/elf.h	1123;"	d
R_68K_PC16	include/geekos/elf.h	1083;"	d
R_68K_PC32	include/geekos/elf.h	1082;"	d
R_68K_PC8	include/geekos/elf.h	1084;"	d
R_68K_PLT16	include/geekos/elf.h	1092;"	d
R_68K_PLT16O	include/geekos/elf.h	1095;"	d
R_68K_PLT32	include/geekos/elf.h	1091;"	d
R_68K_PLT32O	include/geekos/elf.h	1094;"	d
R_68K_PLT8	include/geekos/elf.h	1093;"	d
R_68K_PLT8O	include/geekos/elf.h	1096;"	d
R_68K_RELATIVE	include/geekos/elf.h	1100;"	d
R_68K_TLS_DTPMOD32	include/geekos/elf.h	1119;"	d
R_68K_TLS_DTPREL32	include/geekos/elf.h	1120;"	d
R_68K_TLS_GD16	include/geekos/elf.h	1102;"	d
R_68K_TLS_GD32	include/geekos/elf.h	1101;"	d
R_68K_TLS_GD8	include/geekos/elf.h	1103;"	d
R_68K_TLS_IE16	include/geekos/elf.h	1111;"	d
R_68K_TLS_IE32	include/geekos/elf.h	1110;"	d
R_68K_TLS_IE8	include/geekos/elf.h	1112;"	d
R_68K_TLS_LDM16	include/geekos/elf.h	1105;"	d
R_68K_TLS_LDM32	include/geekos/elf.h	1104;"	d
R_68K_TLS_LDM8	include/geekos/elf.h	1106;"	d
R_68K_TLS_LDO16	include/geekos/elf.h	1108;"	d
R_68K_TLS_LDO32	include/geekos/elf.h	1107;"	d
R_68K_TLS_LDO8	include/geekos/elf.h	1109;"	d
R_68K_TLS_LE16	include/geekos/elf.h	1115;"	d
R_68K_TLS_LE32	include/geekos/elf.h	1113;"	d
R_68K_TLS_LE8	include/geekos/elf.h	1117;"	d
R_68K_TLS_TPREL32	include/geekos/elf.h	1121;"	d
R_AARCH64_ABS16	include/geekos/elf.h	2308;"	d
R_AARCH64_ABS32	include/geekos/elf.h	2307;"	d
R_AARCH64_ABS64	include/geekos/elf.h	2306;"	d
R_AARCH64_ADD_ABS_LO12_NC	include/geekos/elf.h	2326;"	d
R_AARCH64_ADR_GOT_PAGE	include/geekos/elf.h	2354;"	d
R_AARCH64_ADR_PREL_LO21	include/geekos/elf.h	2323;"	d
R_AARCH64_ADR_PREL_PG_HI21	include/geekos/elf.h	2324;"	d
R_AARCH64_ADR_PREL_PG_HI21_NC	include/geekos/elf.h	2325;"	d
R_AARCH64_CALL26	include/geekos/elf.h	2331;"	d
R_AARCH64_CONDBR19	include/geekos/elf.h	2329;"	d
R_AARCH64_COPY	include/geekos/elf.h	2419;"	d
R_AARCH64_GLOB_DAT	include/geekos/elf.h	2420;"	d
R_AARCH64_GOTREL32	include/geekos/elf.h	2351;"	d
R_AARCH64_GOTREL64	include/geekos/elf.h	2350;"	d
R_AARCH64_GOT_LD_PREL19	include/geekos/elf.h	2352;"	d
R_AARCH64_IRELATIVE	include/geekos/elf.h	2427;"	d
R_AARCH64_JUMP26	include/geekos/elf.h	2330;"	d
R_AARCH64_JUMP_SLOT	include/geekos/elf.h	2421;"	d
R_AARCH64_LD64_GOTOFF_LO15	include/geekos/elf.h	2353;"	d
R_AARCH64_LD64_GOTPAGE_LO15	include/geekos/elf.h	2356;"	d
R_AARCH64_LD64_GOT_LO12_NC	include/geekos/elf.h	2355;"	d
R_AARCH64_LDST128_ABS_LO12_NC	include/geekos/elf.h	2342;"	d
R_AARCH64_LDST16_ABS_LO12_NC	include/geekos/elf.h	2332;"	d
R_AARCH64_LDST32_ABS_LO12_NC	include/geekos/elf.h	2333;"	d
R_AARCH64_LDST64_ABS_LO12_NC	include/geekos/elf.h	2334;"	d
R_AARCH64_LDST8_ABS_LO12_NC	include/geekos/elf.h	2327;"	d
R_AARCH64_LD_PREL_LO19	include/geekos/elf.h	2322;"	d
R_AARCH64_MOVW_GOTOFF_G0	include/geekos/elf.h	2343;"	d
R_AARCH64_MOVW_GOTOFF_G0_NC	include/geekos/elf.h	2344;"	d
R_AARCH64_MOVW_GOTOFF_G1	include/geekos/elf.h	2345;"	d
R_AARCH64_MOVW_GOTOFF_G1_NC	include/geekos/elf.h	2346;"	d
R_AARCH64_MOVW_GOTOFF_G2	include/geekos/elf.h	2347;"	d
R_AARCH64_MOVW_GOTOFF_G2_NC	include/geekos/elf.h	2348;"	d
R_AARCH64_MOVW_GOTOFF_G3	include/geekos/elf.h	2349;"	d
R_AARCH64_MOVW_PREL_G0	include/geekos/elf.h	2335;"	d
R_AARCH64_MOVW_PREL_G0_NC	include/geekos/elf.h	2336;"	d
R_AARCH64_MOVW_PREL_G1	include/geekos/elf.h	2337;"	d
R_AARCH64_MOVW_PREL_G1_NC	include/geekos/elf.h	2338;"	d
R_AARCH64_MOVW_PREL_G2	include/geekos/elf.h	2339;"	d
R_AARCH64_MOVW_PREL_G2_NC	include/geekos/elf.h	2340;"	d
R_AARCH64_MOVW_PREL_G3	include/geekos/elf.h	2341;"	d
R_AARCH64_MOVW_SABS_G0	include/geekos/elf.h	2319;"	d
R_AARCH64_MOVW_SABS_G1	include/geekos/elf.h	2320;"	d
R_AARCH64_MOVW_SABS_G2	include/geekos/elf.h	2321;"	d
R_AARCH64_MOVW_UABS_G0	include/geekos/elf.h	2312;"	d
R_AARCH64_MOVW_UABS_G0_NC	include/geekos/elf.h	2313;"	d
R_AARCH64_MOVW_UABS_G1	include/geekos/elf.h	2314;"	d
R_AARCH64_MOVW_UABS_G1_NC	include/geekos/elf.h	2315;"	d
R_AARCH64_MOVW_UABS_G2	include/geekos/elf.h	2316;"	d
R_AARCH64_MOVW_UABS_G2_NC	include/geekos/elf.h	2317;"	d
R_AARCH64_MOVW_UABS_G3	include/geekos/elf.h	2318;"	d
R_AARCH64_NONE	include/geekos/elf.h	2305;"	d
R_AARCH64_PREL16	include/geekos/elf.h	2311;"	d
R_AARCH64_PREL32	include/geekos/elf.h	2310;"	d
R_AARCH64_PREL64	include/geekos/elf.h	2309;"	d
R_AARCH64_RELATIVE	include/geekos/elf.h	2422;"	d
R_AARCH64_TLSDESC	include/geekos/elf.h	2426;"	d
R_AARCH64_TLSDESC_ADD	include/geekos/elf.h	2413;"	d
R_AARCH64_TLSDESC_ADD_LO12	include/geekos/elf.h	2409;"	d
R_AARCH64_TLSDESC_ADR_PAGE21	include/geekos/elf.h	2407;"	d
R_AARCH64_TLSDESC_ADR_PREL21	include/geekos/elf.h	2406;"	d
R_AARCH64_TLSDESC_CALL	include/geekos/elf.h	2414;"	d
R_AARCH64_TLSDESC_LD64_LO12	include/geekos/elf.h	2408;"	d
R_AARCH64_TLSDESC_LDR	include/geekos/elf.h	2412;"	d
R_AARCH64_TLSDESC_LD_PREL19	include/geekos/elf.h	2405;"	d
R_AARCH64_TLSDESC_OFF_G0_NC	include/geekos/elf.h	2411;"	d
R_AARCH64_TLSDESC_OFF_G1	include/geekos/elf.h	2410;"	d
R_AARCH64_TLSGD_ADD_LO12_NC	include/geekos/elf.h	2359;"	d
R_AARCH64_TLSGD_ADR_PAGE21	include/geekos/elf.h	2358;"	d
R_AARCH64_TLSGD_ADR_PREL21	include/geekos/elf.h	2357;"	d
R_AARCH64_TLSGD_MOVW_G0_NC	include/geekos/elf.h	2361;"	d
R_AARCH64_TLSGD_MOVW_G1	include/geekos/elf.h	2360;"	d
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21	include/geekos/elf.h	2386;"	d
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC	include/geekos/elf.h	2387;"	d
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19	include/geekos/elf.h	2388;"	d
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC	include/geekos/elf.h	2385;"	d
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1	include/geekos/elf.h	2384;"	d
R_AARCH64_TLSLD_ADD_DTPREL_HI12	include/geekos/elf.h	2373;"	d
R_AARCH64_TLSLD_ADD_DTPREL_LO12	include/geekos/elf.h	2374;"	d
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC	include/geekos/elf.h	2375;"	d
R_AARCH64_TLSLD_ADD_LO12_NC	include/geekos/elf.h	2364;"	d
R_AARCH64_TLSLD_ADR_PAGE21	include/geekos/elf.h	2363;"	d
R_AARCH64_TLSLD_ADR_PREL21	include/geekos/elf.h	2362;"	d
R_AARCH64_TLSLD_LDST128_DTPREL_LO12	include/geekos/elf.h	2417;"	d
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC	include/geekos/elf.h	2418;"	d
R_AARCH64_TLSLD_LDST16_DTPREL_LO12	include/geekos/elf.h	2378;"	d
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC	include/geekos/elf.h	2379;"	d
R_AARCH64_TLSLD_LDST32_DTPREL_LO12	include/geekos/elf.h	2380;"	d
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC	include/geekos/elf.h	2381;"	d
R_AARCH64_TLSLD_LDST64_DTPREL_LO12	include/geekos/elf.h	2382;"	d
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC	include/geekos/elf.h	2383;"	d
R_AARCH64_TLSLD_LDST8_DTPREL_LO12	include/geekos/elf.h	2376;"	d
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC	include/geekos/elf.h	2377;"	d
R_AARCH64_TLSLD_LD_PREL19	include/geekos/elf.h	2367;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G0	include/geekos/elf.h	2371;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC	include/geekos/elf.h	2372;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G1	include/geekos/elf.h	2369;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC	include/geekos/elf.h	2370;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G2	include/geekos/elf.h	2368;"	d
R_AARCH64_TLSLD_MOVW_G0_NC	include/geekos/elf.h	2366;"	d
R_AARCH64_TLSLD_MOVW_G1	include/geekos/elf.h	2365;"	d
R_AARCH64_TLSLE_ADD_TPREL_HI12	include/geekos/elf.h	2394;"	d
R_AARCH64_TLSLE_ADD_TPREL_LO12	include/geekos/elf.h	2395;"	d
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC	include/geekos/elf.h	2396;"	d
R_AARCH64_TLSLE_LDST128_TPREL_LO12	include/geekos/elf.h	2415;"	d
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC	include/geekos/elf.h	2416;"	d
R_AARCH64_TLSLE_LDST16_TPREL_LO12	include/geekos/elf.h	2399;"	d
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC	include/geekos/elf.h	2400;"	d
R_AARCH64_TLSLE_LDST32_TPREL_LO12	include/geekos/elf.h	2401;"	d
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC	include/geekos/elf.h	2402;"	d
R_AARCH64_TLSLE_LDST64_TPREL_LO12	include/geekos/elf.h	2403;"	d
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC	include/geekos/elf.h	2404;"	d
R_AARCH64_TLSLE_LDST8_TPREL_LO12	include/geekos/elf.h	2397;"	d
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC	include/geekos/elf.h	2398;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G0	include/geekos/elf.h	2392;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC	include/geekos/elf.h	2393;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G1	include/geekos/elf.h	2390;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC	include/geekos/elf.h	2391;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G2	include/geekos/elf.h	2389;"	d
R_AARCH64_TLS_DTPMOD64	include/geekos/elf.h	2423;"	d
R_AARCH64_TLS_DTPREL64	include/geekos/elf.h	2424;"	d
R_AARCH64_TLS_TPREL64	include/geekos/elf.h	2425;"	d
R_AARCH64_TSTBR14	include/geekos/elf.h	2328;"	d
R_ALPHA_BRADDR	include/geekos/elf.h	1921;"	d
R_ALPHA_COPY	include/geekos/elf.h	1929;"	d
R_ALPHA_DTPMOD64	include/geekos/elf.h	1936;"	d
R_ALPHA_DTPREL16	include/geekos/elf.h	1941;"	d
R_ALPHA_DTPREL64	include/geekos/elf.h	1938;"	d
R_ALPHA_DTPRELHI	include/geekos/elf.h	1939;"	d
R_ALPHA_DTPRELLO	include/geekos/elf.h	1940;"	d
R_ALPHA_GLOB_DAT	include/geekos/elf.h	1930;"	d
R_ALPHA_GOTDTPREL	include/geekos/elf.h	1937;"	d
R_ALPHA_GOTTPREL	include/geekos/elf.h	1942;"	d
R_ALPHA_GPDISP	include/geekos/elf.h	1920;"	d
R_ALPHA_GPREL16	include/geekos/elf.h	1928;"	d
R_ALPHA_GPREL32	include/geekos/elf.h	1917;"	d
R_ALPHA_GPRELHIGH	include/geekos/elf.h	1926;"	d
R_ALPHA_GPRELLOW	include/geekos/elf.h	1927;"	d
R_ALPHA_HINT	include/geekos/elf.h	1922;"	d
R_ALPHA_JMP_SLOT	include/geekos/elf.h	1931;"	d
R_ALPHA_LITERAL	include/geekos/elf.h	1918;"	d
R_ALPHA_LITUSE	include/geekos/elf.h	1919;"	d
R_ALPHA_NONE	include/geekos/elf.h	1914;"	d
R_ALPHA_NUM	include/geekos/elf.h	1948;"	d
R_ALPHA_REFLONG	include/geekos/elf.h	1915;"	d
R_ALPHA_REFQUAD	include/geekos/elf.h	1916;"	d
R_ALPHA_RELATIVE	include/geekos/elf.h	1932;"	d
R_ALPHA_SREL16	include/geekos/elf.h	1923;"	d
R_ALPHA_SREL32	include/geekos/elf.h	1924;"	d
R_ALPHA_SREL64	include/geekos/elf.h	1925;"	d
R_ALPHA_TLSGD	include/geekos/elf.h	1934;"	d
R_ALPHA_TLS_GD_HI	include/geekos/elf.h	1933;"	d
R_ALPHA_TLS_LDM	include/geekos/elf.h	1935;"	d
R_ALPHA_TPREL16	include/geekos/elf.h	1946;"	d
R_ALPHA_TPREL64	include/geekos/elf.h	1943;"	d
R_ALPHA_TPRELHI	include/geekos/elf.h	1944;"	d
R_ALPHA_TPRELLO	include/geekos/elf.h	1945;"	d
R_ARM_ABS12	include/geekos/elf.h	2438;"	d
R_ARM_ABS16	include/geekos/elf.h	2437;"	d
R_ARM_ABS32	include/geekos/elf.h	2434;"	d
R_ARM_ABS32_NOI	include/geekos/elf.h	2497;"	d
R_ARM_ABS8	include/geekos/elf.h	2440;"	d
R_ARM_ALU_PCREL_15_8	include/geekos/elf.h	2468;"	d
R_ARM_ALU_PCREL_23_15	include/geekos/elf.h	2469;"	d
R_ARM_ALU_PCREL_7_0	include/geekos/elf.h	2467;"	d
R_ARM_ALU_PC_G0	include/geekos/elf.h	2500;"	d
R_ARM_ALU_PC_G0_NC	include/geekos/elf.h	2499;"	d
R_ARM_ALU_PC_G1	include/geekos/elf.h	2502;"	d
R_ARM_ALU_PC_G1_NC	include/geekos/elf.h	2501;"	d
R_ARM_ALU_PC_G2	include/geekos/elf.h	2503;"	d
R_ARM_ALU_SBREL_19_12	include/geekos/elf.h	2471;"	d
R_ARM_ALU_SBREL_27_20	include/geekos/elf.h	2472;"	d
R_ARM_ALU_SB_G0	include/geekos/elf.h	2516;"	d
R_ARM_ALU_SB_G0_NC	include/geekos/elf.h	2515;"	d
R_ARM_ALU_SB_G1	include/geekos/elf.h	2518;"	d
R_ARM_ALU_SB_G1_NC	include/geekos/elf.h	2517;"	d
R_ARM_ALU_SB_G2	include/geekos/elf.h	2519;"	d
R_ARM_AMP_VCALL9	include/geekos/elf.h	2445;"	d
R_ARM_BASE_ABS	include/geekos/elf.h	2466;"	d
R_ARM_CALL	include/geekos/elf.h	2462;"	d
R_ARM_COPY	include/geekos/elf.h	2454;"	d
R_ARM_GLOB_DAT	include/geekos/elf.h	2455;"	d
R_ARM_GNU_VTENTRY	include/geekos/elf.h	2559;"	d
R_ARM_GNU_VTINHERIT	include/geekos/elf.h	2560;"	d
R_ARM_GOT32	include/geekos/elf.h	2460;"	d
R_ARM_GOTOFF	include/geekos/elf.h	2458;"	d
R_ARM_GOTOFF12	include/geekos/elf.h	2556;"	d
R_ARM_GOTPC	include/geekos/elf.h	2459;"	d
R_ARM_GOTRELAX	include/geekos/elf.h	2558;"	d
R_ARM_GOT_ABS	include/geekos/elf.h	2552;"	d
R_ARM_GOT_BREL12	include/geekos/elf.h	2554;"	d
R_ARM_GOT_PREL	include/geekos/elf.h	2553;"	d
R_ARM_IRELATIVE	include/geekos/elf.h	2586;"	d
R_ARM_JUMP24	include/geekos/elf.h	2463;"	d
R_ARM_JUMP_SLOT	include/geekos/elf.h	2456;"	d
R_ARM_LDC_PC_G0	include/geekos/elf.h	2512;"	d
R_ARM_LDC_PC_G1	include/geekos/elf.h	2513;"	d
R_ARM_LDC_PC_G2	include/geekos/elf.h	2514;"	d
R_ARM_LDC_SB_G0	include/geekos/elf.h	2532;"	d
R_ARM_LDC_SB_G1	include/geekos/elf.h	2533;"	d
R_ARM_LDC_SB_G2	include/geekos/elf.h	2534;"	d
R_ARM_LDRS_PC_G0	include/geekos/elf.h	2506;"	d
R_ARM_LDRS_PC_G1	include/geekos/elf.h	2508;"	d
R_ARM_LDRS_PC_G2	include/geekos/elf.h	2510;"	d
R_ARM_LDRS_SB_G0	include/geekos/elf.h	2526;"	d
R_ARM_LDRS_SB_G1	include/geekos/elf.h	2528;"	d
R_ARM_LDRS_SB_G2	include/geekos/elf.h	2530;"	d
R_ARM_LDR_PC_G1	include/geekos/elf.h	2504;"	d
R_ARM_LDR_PC_G2	include/geekos/elf.h	2505;"	d
R_ARM_LDR_SBREL_11_0	include/geekos/elf.h	2470;"	d
R_ARM_LDR_SB_G0	include/geekos/elf.h	2520;"	d
R_ARM_LDR_SB_G1	include/geekos/elf.h	2522;"	d
R_ARM_LDR_SB_G2	include/geekos/elf.h	2524;"	d
R_ARM_ME_TOO	include/geekos/elf.h	2580;"	d
R_ARM_MOVT_ABS	include/geekos/elf.h	2479;"	d
R_ARM_MOVT_BREL	include/geekos/elf.h	2537;"	d
R_ARM_MOVT_PREL	include/geekos/elf.h	2481;"	d
R_ARM_MOVW_ABS_NC	include/geekos/elf.h	2478;"	d
R_ARM_MOVW_BREL	include/geekos/elf.h	2539;"	d
R_ARM_MOVW_BREL_NC	include/geekos/elf.h	2535;"	d
R_ARM_MOVW_PREL_NC	include/geekos/elf.h	2480;"	d
R_ARM_NONE	include/geekos/elf.h	2431;"	d
R_ARM_NUM	include/geekos/elf.h	2595;"	d
R_ARM_PC13	include/geekos/elf.h	2436;"	d
R_ARM_PC24	include/geekos/elf.h	2432;"	d
R_ARM_PLT32	include/geekos/elf.h	2461;"	d
R_ARM_PLT32_ABS	include/geekos/elf.h	2551;"	d
R_ARM_PREL31	include/geekos/elf.h	2477;"	d
R_ARM_RABS22	include/geekos/elf.h	2591;"	d
R_ARM_RBASE	include/geekos/elf.h	2593;"	d
R_ARM_REL32	include/geekos/elf.h	2435;"	d
R_ARM_REL32_NOI	include/geekos/elf.h	2498;"	d
R_ARM_RELATIVE	include/geekos/elf.h	2457;"	d
R_ARM_RPC24	include/geekos/elf.h	2592;"	d
R_ARM_RREL32	include/geekos/elf.h	2590;"	d
R_ARM_RSBREL32	include/geekos/elf.h	2588;"	d
R_ARM_RXPC25	include/geekos/elf.h	2587;"	d
R_ARM_SBREL31	include/geekos/elf.h	2474;"	d
R_ARM_SBREL32	include/geekos/elf.h	2441;"	d
R_ARM_SWI24	include/geekos/elf.h	2446;"	d
R_ARM_TARGET1	include/geekos/elf.h	2473;"	d
R_ARM_TARGET2	include/geekos/elf.h	2476;"	d
R_ARM_THM_ABS5	include/geekos/elf.h	2439;"	d
R_ARM_THM_ALU_PREL_11_0	include/geekos/elf.h	2493;"	d
R_ARM_THM_GOT_BREL12	include/geekos/elf.h	2584;"	d
R_ARM_THM_JUMP19	include/geekos/elf.h	2489;"	d
R_ARM_THM_JUMP24	include/geekos/elf.h	2465;"	d
R_ARM_THM_JUMP6	include/geekos/elf.h	2491;"	d
R_ARM_THM_MOVT_ABS	include/geekos/elf.h	2483;"	d
R_ARM_THM_MOVT_BREL	include/geekos/elf.h	2543;"	d
R_ARM_THM_MOVT_PREL	include/geekos/elf.h	2487;"	d
R_ARM_THM_MOVW_ABS_NC	include/geekos/elf.h	2482;"	d
R_ARM_THM_MOVW_BREL	include/geekos/elf.h	2545;"	d
R_ARM_THM_MOVW_BREL_NC	include/geekos/elf.h	2541;"	d
R_ARM_THM_MOVW_PREL_NC	include/geekos/elf.h	2485;"	d
R_ARM_THM_PC11	include/geekos/elf.h	2561;"	d
R_ARM_THM_PC12	include/geekos/elf.h	2495;"	d
R_ARM_THM_PC22	include/geekos/elf.h	2442;"	d
R_ARM_THM_PC8	include/geekos/elf.h	2443;"	d
R_ARM_THM_PC9	include/geekos/elf.h	2562;"	d
R_ARM_THM_RPC22	include/geekos/elf.h	2589;"	d
R_ARM_THM_SWI8	include/geekos/elf.h	2448;"	d
R_ARM_THM_TLS_CALL	include/geekos/elf.h	2550;"	d
R_ARM_THM_TLS_DESCSEQ	include/geekos/elf.h	2581;"	d
R_ARM_THM_TLS_DESCSEQ16	include/geekos/elf.h	2582;"	d
R_ARM_THM_TLS_DESCSEQ32	include/geekos/elf.h	2583;"	d
R_ARM_THM_XPC22	include/geekos/elf.h	2450;"	d
R_ARM_TLS_CALL	include/geekos/elf.h	2548;"	d
R_ARM_TLS_DESC	include/geekos/elf.h	2447;"	d
R_ARM_TLS_DESCSEQ	include/geekos/elf.h	2549;"	d
R_ARM_TLS_DTPMOD32	include/geekos/elf.h	2451;"	d
R_ARM_TLS_DTPOFF32	include/geekos/elf.h	2452;"	d
R_ARM_TLS_GD32	include/geekos/elf.h	2564;"	d
R_ARM_TLS_GOTDESC	include/geekos/elf.h	2547;"	d
R_ARM_TLS_IE12GP	include/geekos/elf.h	2578;"	d
R_ARM_TLS_IE32	include/geekos/elf.h	2570;"	d
R_ARM_TLS_LDM32	include/geekos/elf.h	2566;"	d
R_ARM_TLS_LDO12	include/geekos/elf.h	2574;"	d
R_ARM_TLS_LDO32	include/geekos/elf.h	2568;"	d
R_ARM_TLS_LE12	include/geekos/elf.h	2576;"	d
R_ARM_TLS_LE32	include/geekos/elf.h	2572;"	d
R_ARM_TLS_TPOFF32	include/geekos/elf.h	2453;"	d
R_ARM_V4BX	include/geekos/elf.h	2475;"	d
R_ARM_XPC25	include/geekos/elf.h	2449;"	d
R_CRIS_16	include/geekos/elf.h	2871;"	d
R_CRIS_16_GOT	include/geekos/elf.h	2882;"	d
R_CRIS_16_GOTPLT	include/geekos/elf.h	2884;"	d
R_CRIS_16_PCREL	include/geekos/elf.h	2874;"	d
R_CRIS_32	include/geekos/elf.h	2872;"	d
R_CRIS_32_GOT	include/geekos/elf.h	2883;"	d
R_CRIS_32_GOTPLT	include/geekos/elf.h	2885;"	d
R_CRIS_32_GOTREL	include/geekos/elf.h	2886;"	d
R_CRIS_32_PCREL	include/geekos/elf.h	2875;"	d
R_CRIS_32_PLT_GOTREL	include/geekos/elf.h	2887;"	d
R_CRIS_32_PLT_PCREL	include/geekos/elf.h	2888;"	d
R_CRIS_8	include/geekos/elf.h	2870;"	d
R_CRIS_8_PCREL	include/geekos/elf.h	2873;"	d
R_CRIS_COPY	include/geekos/elf.h	2878;"	d
R_CRIS_GLOB_DAT	include/geekos/elf.h	2879;"	d
R_CRIS_GNU_VTENTRY	include/geekos/elf.h	2877;"	d
R_CRIS_GNU_VTINHERIT	include/geekos/elf.h	2876;"	d
R_CRIS_JUMP_SLOT	include/geekos/elf.h	2880;"	d
R_CRIS_NONE	include/geekos/elf.h	2869;"	d
R_CRIS_NUM	include/geekos/elf.h	2890;"	d
R_CRIS_RELATIVE	include/geekos/elf.h	2881;"	d
R_IA64_COPY	include/geekos/elf.h	2687;"	d
R_IA64_DIR32LSB	include/geekos/elf.h	2632;"	d
R_IA64_DIR32MSB	include/geekos/elf.h	2631;"	d
R_IA64_DIR64LSB	include/geekos/elf.h	2634;"	d
R_IA64_DIR64MSB	include/geekos/elf.h	2633;"	d
R_IA64_DTPMOD64LSB	include/geekos/elf.h	2698;"	d
R_IA64_DTPMOD64MSB	include/geekos/elf.h	2697;"	d
R_IA64_DTPREL14	include/geekos/elf.h	2700;"	d
R_IA64_DTPREL22	include/geekos/elf.h	2701;"	d
R_IA64_DTPREL32LSB	include/geekos/elf.h	2704;"	d
R_IA64_DTPREL32MSB	include/geekos/elf.h	2703;"	d
R_IA64_DTPREL64I	include/geekos/elf.h	2702;"	d
R_IA64_DTPREL64LSB	include/geekos/elf.h	2706;"	d
R_IA64_DTPREL64MSB	include/geekos/elf.h	2705;"	d
R_IA64_FPTR32LSB	include/geekos/elf.h	2649;"	d
R_IA64_FPTR32MSB	include/geekos/elf.h	2648;"	d
R_IA64_FPTR64I	include/geekos/elf.h	2647;"	d
R_IA64_FPTR64LSB	include/geekos/elf.h	2651;"	d
R_IA64_FPTR64MSB	include/geekos/elf.h	2650;"	d
R_IA64_GPREL22	include/geekos/elf.h	2635;"	d
R_IA64_GPREL32LSB	include/geekos/elf.h	2638;"	d
R_IA64_GPREL32MSB	include/geekos/elf.h	2637;"	d
R_IA64_GPREL64I	include/geekos/elf.h	2636;"	d
R_IA64_GPREL64LSB	include/geekos/elf.h	2640;"	d
R_IA64_GPREL64MSB	include/geekos/elf.h	2639;"	d
R_IA64_IMM14	include/geekos/elf.h	2628;"	d
R_IA64_IMM22	include/geekos/elf.h	2629;"	d
R_IA64_IMM64	include/geekos/elf.h	2630;"	d
R_IA64_IPLTLSB	include/geekos/elf.h	2686;"	d
R_IA64_IPLTMSB	include/geekos/elf.h	2685;"	d
R_IA64_LDXMOV	include/geekos/elf.h	2690;"	d
R_IA64_LTOFF22	include/geekos/elf.h	2641;"	d
R_IA64_LTOFF22X	include/geekos/elf.h	2689;"	d
R_IA64_LTOFF64I	include/geekos/elf.h	2642;"	d
R_IA64_LTOFF_DTPMOD22	include/geekos/elf.h	2699;"	d
R_IA64_LTOFF_DTPREL22	include/geekos/elf.h	2707;"	d
R_IA64_LTOFF_FPTR22	include/geekos/elf.h	2660;"	d
R_IA64_LTOFF_FPTR32LSB	include/geekos/elf.h	2663;"	d
R_IA64_LTOFF_FPTR32MSB	include/geekos/elf.h	2662;"	d
R_IA64_LTOFF_FPTR64I	include/geekos/elf.h	2661;"	d
R_IA64_LTOFF_FPTR64LSB	include/geekos/elf.h	2665;"	d
R_IA64_LTOFF_FPTR64MSB	include/geekos/elf.h	2664;"	d
R_IA64_LTOFF_TPREL22	include/geekos/elf.h	2696;"	d
R_IA64_LTV32LSB	include/geekos/elf.h	2679;"	d
R_IA64_LTV32MSB	include/geekos/elf.h	2678;"	d
R_IA64_LTV64LSB	include/geekos/elf.h	2681;"	d
R_IA64_LTV64MSB	include/geekos/elf.h	2680;"	d
R_IA64_NONE	include/geekos/elf.h	2627;"	d
R_IA64_PCREL21B	include/geekos/elf.h	2653;"	d
R_IA64_PCREL21BI	include/geekos/elf.h	2682;"	d
R_IA64_PCREL21F	include/geekos/elf.h	2655;"	d
R_IA64_PCREL21M	include/geekos/elf.h	2654;"	d
R_IA64_PCREL22	include/geekos/elf.h	2683;"	d
R_IA64_PCREL32LSB	include/geekos/elf.h	2657;"	d
R_IA64_PCREL32MSB	include/geekos/elf.h	2656;"	d
R_IA64_PCREL60B	include/geekos/elf.h	2652;"	d
R_IA64_PCREL64I	include/geekos/elf.h	2684;"	d
R_IA64_PCREL64LSB	include/geekos/elf.h	2659;"	d
R_IA64_PCREL64MSB	include/geekos/elf.h	2658;"	d
R_IA64_PLTOFF22	include/geekos/elf.h	2643;"	d
R_IA64_PLTOFF64I	include/geekos/elf.h	2644;"	d
R_IA64_PLTOFF64LSB	include/geekos/elf.h	2646;"	d
R_IA64_PLTOFF64MSB	include/geekos/elf.h	2645;"	d
R_IA64_REL32LSB	include/geekos/elf.h	2675;"	d
R_IA64_REL32MSB	include/geekos/elf.h	2674;"	d
R_IA64_REL64LSB	include/geekos/elf.h	2677;"	d
R_IA64_REL64MSB	include/geekos/elf.h	2676;"	d
R_IA64_SECREL32LSB	include/geekos/elf.h	2671;"	d
R_IA64_SECREL32MSB	include/geekos/elf.h	2670;"	d
R_IA64_SECREL64LSB	include/geekos/elf.h	2673;"	d
R_IA64_SECREL64MSB	include/geekos/elf.h	2672;"	d
R_IA64_SEGREL32LSB	include/geekos/elf.h	2667;"	d
R_IA64_SEGREL32MSB	include/geekos/elf.h	2666;"	d
R_IA64_SEGREL64LSB	include/geekos/elf.h	2669;"	d
R_IA64_SEGREL64MSB	include/geekos/elf.h	2668;"	d
R_IA64_SUB	include/geekos/elf.h	2688;"	d
R_IA64_TPREL14	include/geekos/elf.h	2691;"	d
R_IA64_TPREL22	include/geekos/elf.h	2692;"	d
R_IA64_TPREL64I	include/geekos/elf.h	2693;"	d
R_IA64_TPREL64LSB	include/geekos/elf.h	2695;"	d
R_IA64_TPREL64MSB	include/geekos/elf.h	2694;"	d
R_M32R_10_PCREL	include/geekos/elf.h	2994;"	d
R_M32R_10_PCREL_RELA	include/geekos/elf.h	3007;"	d
R_M32R_16	include/geekos/elf.h	2991;"	d
R_M32R_16_RELA	include/geekos/elf.h	3004;"	d
R_M32R_18_PCREL	include/geekos/elf.h	2995;"	d
R_M32R_18_PCREL_RELA	include/geekos/elf.h	3008;"	d
R_M32R_24	include/geekos/elf.h	2993;"	d
R_M32R_24_RELA	include/geekos/elf.h	3006;"	d
R_M32R_26_PCREL	include/geekos/elf.h	2996;"	d
R_M32R_26_PCREL_RELA	include/geekos/elf.h	3009;"	d
R_M32R_26_PLTREL	include/geekos/elf.h	3019;"	d
R_M32R_32	include/geekos/elf.h	2992;"	d
R_M32R_32_RELA	include/geekos/elf.h	3005;"	d
R_M32R_COPY	include/geekos/elf.h	3020;"	d
R_M32R_GLOB_DAT	include/geekos/elf.h	3021;"	d
R_M32R_GNU_VTENTRY	include/geekos/elf.h	3002;"	d
R_M32R_GNU_VTINHERIT	include/geekos/elf.h	3001;"	d
R_M32R_GOT16_HI_SLO	include/geekos/elf.h	3028;"	d
R_M32R_GOT16_HI_ULO	include/geekos/elf.h	3026;"	d
R_M32R_GOT16_LO	include/geekos/elf.h	3030;"	d
R_M32R_GOT24	include/geekos/elf.h	3018;"	d
R_M32R_GOTOFF	include/geekos/elf.h	3024;"	d
R_M32R_GOTOFF_HI_SLO	include/geekos/elf.h	3039;"	d
R_M32R_GOTOFF_HI_ULO	include/geekos/elf.h	3037;"	d
R_M32R_GOTOFF_LO	include/geekos/elf.h	3041;"	d
R_M32R_GOTPC24	include/geekos/elf.h	3025;"	d
R_M32R_GOTPC_HI_SLO	include/geekos/elf.h	3033;"	d
R_M32R_GOTPC_HI_ULO	include/geekos/elf.h	3031;"	d
R_M32R_GOTPC_LO	include/geekos/elf.h	3035;"	d
R_M32R_HI16_SLO	include/geekos/elf.h	2998;"	d
R_M32R_HI16_SLO_RELA	include/geekos/elf.h	3011;"	d
R_M32R_HI16_ULO	include/geekos/elf.h	2997;"	d
R_M32R_HI16_ULO_RELA	include/geekos/elf.h	3010;"	d
R_M32R_JMP_SLOT	include/geekos/elf.h	3022;"	d
R_M32R_LO16	include/geekos/elf.h	2999;"	d
R_M32R_LO16_RELA	include/geekos/elf.h	3012;"	d
R_M32R_NONE	include/geekos/elf.h	2990;"	d
R_M32R_NUM	include/geekos/elf.h	3042;"	d
R_M32R_REL32	include/geekos/elf.h	3016;"	d
R_M32R_RELATIVE	include/geekos/elf.h	3023;"	d
R_M32R_RELA_GNU_VTENTRY	include/geekos/elf.h	3015;"	d
R_M32R_RELA_GNU_VTINHERIT	include/geekos/elf.h	3014;"	d
R_M32R_SDA16	include/geekos/elf.h	3000;"	d
R_M32R_SDA16_RELA	include/geekos/elf.h	3013;"	d
R_MICROBLAZE_32	include/geekos/elf.h	3046;"	d
R_MICROBLAZE_32_LO	include/geekos/elf.h	3051;"	d
R_MICROBLAZE_32_PCREL	include/geekos/elf.h	3047;"	d
R_MICROBLAZE_32_PCREL_LO	include/geekos/elf.h	3049;"	d
R_MICROBLAZE_32_SYM_OP_SYM	include/geekos/elf.h	3055;"	d
R_MICROBLAZE_64	include/geekos/elf.h	3050;"	d
R_MICROBLAZE_64_NONE	include/geekos/elf.h	3054;"	d
R_MICROBLAZE_64_PCREL	include/geekos/elf.h	3048;"	d
R_MICROBLAZE_COPY	include/geekos/elf.h	3066;"	d
R_MICROBLAZE_GLOB_DAT	include/geekos/elf.h	3063;"	d
R_MICROBLAZE_GNU_VTENTRY	include/geekos/elf.h	3057;"	d
R_MICROBLAZE_GNU_VTINHERIT	include/geekos/elf.h	3056;"	d
R_MICROBLAZE_GOTOFF_32	include/geekos/elf.h	3065;"	d
R_MICROBLAZE_GOTOFF_64	include/geekos/elf.h	3064;"	d
R_MICROBLAZE_GOTPC_64	include/geekos/elf.h	3058;"	d
R_MICROBLAZE_GOT_64	include/geekos/elf.h	3059;"	d
R_MICROBLAZE_JUMP_SLOT	include/geekos/elf.h	3062;"	d
R_MICROBLAZE_NONE	include/geekos/elf.h	3045;"	d
R_MICROBLAZE_PLT_64	include/geekos/elf.h	3060;"	d
R_MICROBLAZE_REL	include/geekos/elf.h	3061;"	d
R_MICROBLAZE_SRO32	include/geekos/elf.h	3052;"	d
R_MICROBLAZE_SRW32	include/geekos/elf.h	3053;"	d
R_MICROBLAZE_TLS	include/geekos/elf.h	3067;"	d
R_MICROBLAZE_TLSDTPMOD32	include/geekos/elf.h	3070;"	d
R_MICROBLAZE_TLSDTPREL32	include/geekos/elf.h	3071;"	d
R_MICROBLAZE_TLSDTPREL64	include/geekos/elf.h	3072;"	d
R_MICROBLAZE_TLSGD	include/geekos/elf.h	3068;"	d
R_MICROBLAZE_TLSGOTTPREL32	include/geekos/elf.h	3073;"	d
R_MICROBLAZE_TLSLD	include/geekos/elf.h	3069;"	d
R_MICROBLAZE_TLSTPREL32	include/geekos/elf.h	3074;"	d
R_MIPS_16	include/geekos/elf.h	1519;"	d
R_MIPS_26	include/geekos/elf.h	1522;"	d
R_MIPS_32	include/geekos/elf.h	1520;"	d
R_MIPS_64	include/geekos/elf.h	1534;"	d
R_MIPS_ADD_IMMEDIATE	include/geekos/elf.h	1550;"	d
R_MIPS_CALL16	include/geekos/elf.h	1529;"	d
R_MIPS_CALL_HI16	include/geekos/elf.h	1546;"	d
R_MIPS_CALL_LO16	include/geekos/elf.h	1547;"	d
R_MIPS_COPY	include/geekos/elf.h	1568;"	d
R_MIPS_DELETE	include/geekos/elf.h	1543;"	d
R_MIPS_GLOB_DAT	include/geekos/elf.h	1567;"	d
R_MIPS_GOT16	include/geekos/elf.h	1527;"	d
R_MIPS_GOT_DISP	include/geekos/elf.h	1535;"	d
R_MIPS_GOT_HI16	include/geekos/elf.h	1538;"	d
R_MIPS_GOT_LO16	include/geekos/elf.h	1539;"	d
R_MIPS_GOT_OFST	include/geekos/elf.h	1537;"	d
R_MIPS_GOT_PAGE	include/geekos/elf.h	1536;"	d
R_MIPS_GPREL16	include/geekos/elf.h	1525;"	d
R_MIPS_GPREL32	include/geekos/elf.h	1530;"	d
R_MIPS_HI16	include/geekos/elf.h	1523;"	d
R_MIPS_HIGHER	include/geekos/elf.h	1544;"	d
R_MIPS_HIGHEST	include/geekos/elf.h	1545;"	d
R_MIPS_INSERT_A	include/geekos/elf.h	1541;"	d
R_MIPS_INSERT_B	include/geekos/elf.h	1542;"	d
R_MIPS_JALR	include/geekos/elf.h	1553;"	d
R_MIPS_JUMP_SLOT	include/geekos/elf.h	1569;"	d
R_MIPS_LITERAL	include/geekos/elf.h	1526;"	d
R_MIPS_LO16	include/geekos/elf.h	1524;"	d
R_MIPS_NONE	include/geekos/elf.h	1518;"	d
R_MIPS_NUM	include/geekos/elf.h	1571;"	d
R_MIPS_PC16	include/geekos/elf.h	1528;"	d
R_MIPS_PJUMP	include/geekos/elf.h	1551;"	d
R_MIPS_REL16	include/geekos/elf.h	1549;"	d
R_MIPS_REL32	include/geekos/elf.h	1521;"	d
R_MIPS_RELGOT	include/geekos/elf.h	1552;"	d
R_MIPS_SCN_DISP	include/geekos/elf.h	1548;"	d
R_MIPS_SHIFT5	include/geekos/elf.h	1532;"	d
R_MIPS_SHIFT6	include/geekos/elf.h	1533;"	d
R_MIPS_SUB	include/geekos/elf.h	1540;"	d
R_MIPS_TLS_DTPMOD32	include/geekos/elf.h	1554;"	d
R_MIPS_TLS_DTPMOD64	include/geekos/elf.h	1556;"	d
R_MIPS_TLS_DTPREL32	include/geekos/elf.h	1555;"	d
R_MIPS_TLS_DTPREL64	include/geekos/elf.h	1557;"	d
R_MIPS_TLS_DTPREL_HI16	include/geekos/elf.h	1560;"	d
R_MIPS_TLS_DTPREL_LO16	include/geekos/elf.h	1561;"	d
R_MIPS_TLS_GD	include/geekos/elf.h	1558;"	d
R_MIPS_TLS_GOTTPREL	include/geekos/elf.h	1562;"	d
R_MIPS_TLS_LDM	include/geekos/elf.h	1559;"	d
R_MIPS_TLS_TPREL32	include/geekos/elf.h	1563;"	d
R_MIPS_TLS_TPREL64	include/geekos/elf.h	1564;"	d
R_MIPS_TLS_TPREL_HI16	include/geekos/elf.h	1565;"	d
R_MIPS_TLS_TPREL_LO16	include/geekos/elf.h	1566;"	d
R_MN10300_16	include/geekos/elf.h	2948;"	d
R_MN10300_24	include/geekos/elf.h	2955;"	d
R_MN10300_32	include/geekos/elf.h	2947;"	d
R_MN10300_8	include/geekos/elf.h	2949;"	d
R_MN10300_ALIGN	include/geekos/elf.h	2984;"	d
R_MN10300_COPY	include/geekos/elf.h	2966;"	d
R_MN10300_GLOB_DAT	include/geekos/elf.h	2967;"	d
R_MN10300_GNU_VTENTRY	include/geekos/elf.h	2954;"	d
R_MN10300_GNU_VTINHERIT	include/geekos/elf.h	2953;"	d
R_MN10300_GOT16	include/geekos/elf.h	2965;"	d
R_MN10300_GOT24	include/geekos/elf.h	2964;"	d
R_MN10300_GOT32	include/geekos/elf.h	2963;"	d
R_MN10300_GOTOFF16	include/geekos/elf.h	2960;"	d
R_MN10300_GOTOFF24	include/geekos/elf.h	2959;"	d
R_MN10300_GOTOFF32	include/geekos/elf.h	2958;"	d
R_MN10300_GOTPC16	include/geekos/elf.h	2957;"	d
R_MN10300_GOTPC32	include/geekos/elf.h	2956;"	d
R_MN10300_JMP_SLOT	include/geekos/elf.h	2968;"	d
R_MN10300_NONE	include/geekos/elf.h	2946;"	d
R_MN10300_NUM	include/geekos/elf.h	2986;"	d
R_MN10300_PCREL16	include/geekos/elf.h	2951;"	d
R_MN10300_PCREL32	include/geekos/elf.h	2950;"	d
R_MN10300_PCREL8	include/geekos/elf.h	2952;"	d
R_MN10300_PLT16	include/geekos/elf.h	2962;"	d
R_MN10300_PLT32	include/geekos/elf.h	2961;"	d
R_MN10300_RELATIVE	include/geekos/elf.h	2969;"	d
R_MN10300_SYM_DIFF	include/geekos/elf.h	2982;"	d
R_MN10300_TLS_DTPMOD	include/geekos/elf.h	2979;"	d
R_MN10300_TLS_DTPOFF	include/geekos/elf.h	2980;"	d
R_MN10300_TLS_GD	include/geekos/elf.h	2970;"	d
R_MN10300_TLS_GOTIE	include/geekos/elf.h	2973;"	d
R_MN10300_TLS_IE	include/geekos/elf.h	2975;"	d
R_MN10300_TLS_LD	include/geekos/elf.h	2971;"	d
R_MN10300_TLS_LDO	include/geekos/elf.h	2972;"	d
R_MN10300_TLS_LE	include/geekos/elf.h	2977;"	d
R_MN10300_TLS_TPOFF	include/geekos/elf.h	2981;"	d
R_PARISC_COPY	include/geekos/elf.h	1814;"	d
R_PARISC_DIR14DR	include/geekos/elf.h	1784;"	d
R_PARISC_DIR14R	include/geekos/elf.h	1751;"	d
R_PARISC_DIR14WR	include/geekos/elf.h	1783;"	d
R_PARISC_DIR16DF	include/geekos/elf.h	1787;"	d
R_PARISC_DIR16F	include/geekos/elf.h	1785;"	d
R_PARISC_DIR16WF	include/geekos/elf.h	1786;"	d
R_PARISC_DIR17F	include/geekos/elf.h	1750;"	d
R_PARISC_DIR17R	include/geekos/elf.h	1749;"	d
R_PARISC_DIR21L	include/geekos/elf.h	1748;"	d
R_PARISC_DIR32	include/geekos/elf.h	1747;"	d
R_PARISC_DIR64	include/geekos/elf.h	1782;"	d
R_PARISC_DPREL14R	include/geekos/elf.h	1758;"	d
R_PARISC_DPREL21L	include/geekos/elf.h	1757;"	d
R_PARISC_EPLT	include/geekos/elf.h	1816;"	d
R_PARISC_FPTR64	include/geekos/elf.h	1771;"	d
R_PARISC_GNU_VTENTRY	include/geekos/elf.h	1835;"	d
R_PARISC_GNU_VTINHERIT	include/geekos/elf.h	1836;"	d
R_PARISC_GPREL14DR	include/geekos/elf.h	1790;"	d
R_PARISC_GPREL14R	include/geekos/elf.h	1760;"	d
R_PARISC_GPREL14WR	include/geekos/elf.h	1789;"	d
R_PARISC_GPREL16DF	include/geekos/elf.h	1793;"	d
R_PARISC_GPREL16F	include/geekos/elf.h	1791;"	d
R_PARISC_GPREL16WF	include/geekos/elf.h	1792;"	d
R_PARISC_GPREL21L	include/geekos/elf.h	1759;"	d
R_PARISC_GPREL64	include/geekos/elf.h	1788;"	d
R_PARISC_HIRESERVE	include/geekos/elf.h	1855;"	d
R_PARISC_IPLT	include/geekos/elf.h	1815;"	d
R_PARISC_LORESERVE	include/geekos/elf.h	1813;"	d
R_PARISC_LTOFF14DR	include/geekos/elf.h	1796;"	d
R_PARISC_LTOFF14R	include/geekos/elf.h	1762;"	d
R_PARISC_LTOFF14WR	include/geekos/elf.h	1795;"	d
R_PARISC_LTOFF16DF	include/geekos/elf.h	1799;"	d
R_PARISC_LTOFF16F	include/geekos/elf.h	1797;"	d
R_PARISC_LTOFF16WF	include/geekos/elf.h	1798;"	d
R_PARISC_LTOFF21L	include/geekos/elf.h	1761;"	d
R_PARISC_LTOFF64	include/geekos/elf.h	1794;"	d
R_PARISC_LTOFF_FPTR14DR	include/geekos/elf.h	1809;"	d
R_PARISC_LTOFF_FPTR14R	include/geekos/elf.h	1770;"	d
R_PARISC_LTOFF_FPTR14WR	include/geekos/elf.h	1808;"	d
R_PARISC_LTOFF_FPTR16DF	include/geekos/elf.h	1812;"	d
R_PARISC_LTOFF_FPTR16F	include/geekos/elf.h	1810;"	d
R_PARISC_LTOFF_FPTR16WF	include/geekos/elf.h	1811;"	d
R_PARISC_LTOFF_FPTR21L	include/geekos/elf.h	1769;"	d
R_PARISC_LTOFF_FPTR32	include/geekos/elf.h	1768;"	d
R_PARISC_LTOFF_FPTR64	include/geekos/elf.h	1807;"	d
R_PARISC_LTOFF_TP14DR	include/geekos/elf.h	1831;"	d
R_PARISC_LTOFF_TP14F	include/geekos/elf.h	1822;"	d
R_PARISC_LTOFF_TP14R	include/geekos/elf.h	1821;"	d
R_PARISC_LTOFF_TP14WR	include/geekos/elf.h	1830;"	d
R_PARISC_LTOFF_TP16DF	include/geekos/elf.h	1834;"	d
R_PARISC_LTOFF_TP16F	include/geekos/elf.h	1832;"	d
R_PARISC_LTOFF_TP16WF	include/geekos/elf.h	1833;"	d
R_PARISC_LTOFF_TP21L	include/geekos/elf.h	1820;"	d
R_PARISC_LTOFF_TP64	include/geekos/elf.h	1829;"	d
R_PARISC_NONE	include/geekos/elf.h	1746;"	d
R_PARISC_PCREL14DR	include/geekos/elf.h	1778;"	d
R_PARISC_PCREL14R	include/geekos/elf.h	1756;"	d
R_PARISC_PCREL14WR	include/geekos/elf.h	1777;"	d
R_PARISC_PCREL16DF	include/geekos/elf.h	1781;"	d
R_PARISC_PCREL16F	include/geekos/elf.h	1779;"	d
R_PARISC_PCREL16WF	include/geekos/elf.h	1780;"	d
R_PARISC_PCREL17F	include/geekos/elf.h	1755;"	d
R_PARISC_PCREL17R	include/geekos/elf.h	1754;"	d
R_PARISC_PCREL21L	include/geekos/elf.h	1753;"	d
R_PARISC_PCREL22F	include/geekos/elf.h	1776;"	d
R_PARISC_PCREL32	include/geekos/elf.h	1752;"	d
R_PARISC_PCREL64	include/geekos/elf.h	1775;"	d
R_PARISC_PLABEL14R	include/geekos/elf.h	1774;"	d
R_PARISC_PLABEL21L	include/geekos/elf.h	1773;"	d
R_PARISC_PLABEL32	include/geekos/elf.h	1772;"	d
R_PARISC_PLTOFF14DR	include/geekos/elf.h	1803;"	d
R_PARISC_PLTOFF14R	include/geekos/elf.h	1767;"	d
R_PARISC_PLTOFF14WR	include/geekos/elf.h	1802;"	d
R_PARISC_PLTOFF16DF	include/geekos/elf.h	1806;"	d
R_PARISC_PLTOFF16F	include/geekos/elf.h	1804;"	d
R_PARISC_PLTOFF16WF	include/geekos/elf.h	1805;"	d
R_PARISC_PLTOFF21L	include/geekos/elf.h	1766;"	d
R_PARISC_SECREL32	include/geekos/elf.h	1763;"	d
R_PARISC_SECREL64	include/geekos/elf.h	1800;"	d
R_PARISC_SEGBASE	include/geekos/elf.h	1764;"	d
R_PARISC_SEGREL32	include/geekos/elf.h	1765;"	d
R_PARISC_SEGREL64	include/geekos/elf.h	1801;"	d
R_PARISC_TLS_DTPMOD32	include/geekos/elf.h	1845;"	d
R_PARISC_TLS_DTPMOD64	include/geekos/elf.h	1846;"	d
R_PARISC_TLS_DTPOFF32	include/geekos/elf.h	1847;"	d
R_PARISC_TLS_DTPOFF64	include/geekos/elf.h	1848;"	d
R_PARISC_TLS_GD14R	include/geekos/elf.h	1838;"	d
R_PARISC_TLS_GD21L	include/geekos/elf.h	1837;"	d
R_PARISC_TLS_GDCALL	include/geekos/elf.h	1839;"	d
R_PARISC_TLS_IE14R	include/geekos/elf.h	1852;"	d
R_PARISC_TLS_IE21L	include/geekos/elf.h	1851;"	d
R_PARISC_TLS_LDM14R	include/geekos/elf.h	1841;"	d
R_PARISC_TLS_LDM21L	include/geekos/elf.h	1840;"	d
R_PARISC_TLS_LDMCALL	include/geekos/elf.h	1842;"	d
R_PARISC_TLS_LDO14R	include/geekos/elf.h	1844;"	d
R_PARISC_TLS_LDO21L	include/geekos/elf.h	1843;"	d
R_PARISC_TLS_LE14R	include/geekos/elf.h	1850;"	d
R_PARISC_TLS_LE21L	include/geekos/elf.h	1849;"	d
R_PARISC_TLS_TPREL32	include/geekos/elf.h	1853;"	d
R_PARISC_TLS_TPREL64	include/geekos/elf.h	1854;"	d
R_PARISC_TPREL14DR	include/geekos/elf.h	1825;"	d
R_PARISC_TPREL14R	include/geekos/elf.h	1819;"	d
R_PARISC_TPREL14WR	include/geekos/elf.h	1824;"	d
R_PARISC_TPREL16DF	include/geekos/elf.h	1828;"	d
R_PARISC_TPREL16F	include/geekos/elf.h	1826;"	d
R_PARISC_TPREL16WF	include/geekos/elf.h	1827;"	d
R_PARISC_TPREL21L	include/geekos/elf.h	1818;"	d
R_PARISC_TPREL32	include/geekos/elf.h	1817;"	d
R_PARISC_TPREL64	include/geekos/elf.h	1823;"	d
R_PPC64_ADDR14	include/geekos/elf.h	2093;"	d
R_PPC64_ADDR14_BRNTAKEN	include/geekos/elf.h	2095;"	d
R_PPC64_ADDR14_BRTAKEN	include/geekos/elf.h	2094;"	d
R_PPC64_ADDR16	include/geekos/elf.h	2089;"	d
R_PPC64_ADDR16_DS	include/geekos/elf.h	2143;"	d
R_PPC64_ADDR16_HA	include/geekos/elf.h	2092;"	d
R_PPC64_ADDR16_HI	include/geekos/elf.h	2091;"	d
R_PPC64_ADDR16_HIGH	include/geekos/elf.h	2201;"	d
R_PPC64_ADDR16_HIGHA	include/geekos/elf.h	2202;"	d
R_PPC64_ADDR16_HIGHER	include/geekos/elf.h	2125;"	d
R_PPC64_ADDR16_HIGHERA	include/geekos/elf.h	2126;"	d
R_PPC64_ADDR16_HIGHEST	include/geekos/elf.h	2127;"	d
R_PPC64_ADDR16_HIGHESTA	include/geekos/elf.h	2128;"	d
R_PPC64_ADDR16_LO	include/geekos/elf.h	2090;"	d
R_PPC64_ADDR16_LO_DS	include/geekos/elf.h	2144;"	d
R_PPC64_ADDR24	include/geekos/elf.h	2088;"	d
R_PPC64_ADDR30	include/geekos/elf.h	2123;"	d
R_PPC64_ADDR32	include/geekos/elf.h	2087;"	d
R_PPC64_ADDR64	include/geekos/elf.h	2124;"	d
R_PPC64_COPY	include/geekos/elf.h	2105;"	d
R_PPC64_DTPMOD64	include/geekos/elf.h	2157;"	d
R_PPC64_DTPREL16	include/geekos/elf.h	2163;"	d
R_PPC64_DTPREL16_DS	include/geekos/elf.h	2190;"	d
R_PPC64_DTPREL16_HA	include/geekos/elf.h	2166;"	d
R_PPC64_DTPREL16_HI	include/geekos/elf.h	2165;"	d
R_PPC64_DTPREL16_HIGH	include/geekos/elf.h	2205;"	d
R_PPC64_DTPREL16_HIGHA	include/geekos/elf.h	2206;"	d
R_PPC64_DTPREL16_HIGHER	include/geekos/elf.h	2192;"	d
R_PPC64_DTPREL16_HIGHERA	include/geekos/elf.h	2193;"	d
R_PPC64_DTPREL16_HIGHEST	include/geekos/elf.h	2194;"	d
R_PPC64_DTPREL16_HIGHESTA	include/geekos/elf.h	2195;"	d
R_PPC64_DTPREL16_LO	include/geekos/elf.h	2164;"	d
R_PPC64_DTPREL16_LO_DS	include/geekos/elf.h	2191;"	d
R_PPC64_DTPREL64	include/geekos/elf.h	2167;"	d
R_PPC64_GLOB_DAT	include/geekos/elf.h	2106;"	d
R_PPC64_GOT16	include/geekos/elf.h	2100;"	d
R_PPC64_GOT16_DS	include/geekos/elf.h	2145;"	d
R_PPC64_GOT16_HA	include/geekos/elf.h	2103;"	d
R_PPC64_GOT16_HI	include/geekos/elf.h	2102;"	d
R_PPC64_GOT16_LO	include/geekos/elf.h	2101;"	d
R_PPC64_GOT16_LO_DS	include/geekos/elf.h	2146;"	d
R_PPC64_GOT_DTPREL16_DS	include/geekos/elf.h	2180;"	d
R_PPC64_GOT_DTPREL16_HA	include/geekos/elf.h	2183;"	d
R_PPC64_GOT_DTPREL16_HI	include/geekos/elf.h	2182;"	d
R_PPC64_GOT_DTPREL16_LO_DS	include/geekos/elf.h	2181;"	d
R_PPC64_GOT_TLSGD16	include/geekos/elf.h	2168;"	d
R_PPC64_GOT_TLSGD16_HA	include/geekos/elf.h	2171;"	d
R_PPC64_GOT_TLSGD16_HI	include/geekos/elf.h	2170;"	d
R_PPC64_GOT_TLSGD16_LO	include/geekos/elf.h	2169;"	d
R_PPC64_GOT_TLSLD16	include/geekos/elf.h	2172;"	d
R_PPC64_GOT_TLSLD16_HA	include/geekos/elf.h	2175;"	d
R_PPC64_GOT_TLSLD16_HI	include/geekos/elf.h	2174;"	d
R_PPC64_GOT_TLSLD16_LO	include/geekos/elf.h	2173;"	d
R_PPC64_GOT_TPREL16_DS	include/geekos/elf.h	2176;"	d
R_PPC64_GOT_TPREL16_HA	include/geekos/elf.h	2179;"	d
R_PPC64_GOT_TPREL16_HI	include/geekos/elf.h	2178;"	d
R_PPC64_GOT_TPREL16_LO_DS	include/geekos/elf.h	2177;"	d
R_PPC64_IRELATIVE	include/geekos/elf.h	2210;"	d
R_PPC64_JMP_IREL	include/geekos/elf.h	2209;"	d
R_PPC64_JMP_SLOT	include/geekos/elf.h	2107;"	d
R_PPC64_NONE	include/geekos/elf.h	2086;"	d
R_PPC64_PLT16_HA	include/geekos/elf.h	2117;"	d
R_PPC64_PLT16_HI	include/geekos/elf.h	2116;"	d
R_PPC64_PLT16_LO	include/geekos/elf.h	2115;"	d
R_PPC64_PLT16_LO_DS	include/geekos/elf.h	2147;"	d
R_PPC64_PLT32	include/geekos/elf.h	2113;"	d
R_PPC64_PLT64	include/geekos/elf.h	2131;"	d
R_PPC64_PLTGOT16	include/geekos/elf.h	2138;"	d
R_PPC64_PLTGOT16_DS	include/geekos/elf.h	2152;"	d
R_PPC64_PLTGOT16_HA	include/geekos/elf.h	2141;"	d
R_PPC64_PLTGOT16_HI	include/geekos/elf.h	2140;"	d
R_PPC64_PLTGOT16_LO	include/geekos/elf.h	2139;"	d
R_PPC64_PLTGOT16_LO_DS	include/geekos/elf.h	2153;"	d
R_PPC64_PLTREL32	include/geekos/elf.h	2114;"	d
R_PPC64_PLTREL64	include/geekos/elf.h	2132;"	d
R_PPC64_REL14	include/geekos/elf.h	2097;"	d
R_PPC64_REL14_BRNTAKEN	include/geekos/elf.h	2099;"	d
R_PPC64_REL14_BRTAKEN	include/geekos/elf.h	2098;"	d
R_PPC64_REL16	include/geekos/elf.h	2211;"	d
R_PPC64_REL16_HA	include/geekos/elf.h	2214;"	d
R_PPC64_REL16_HI	include/geekos/elf.h	2213;"	d
R_PPC64_REL16_LO	include/geekos/elf.h	2212;"	d
R_PPC64_REL24	include/geekos/elf.h	2096;"	d
R_PPC64_REL32	include/geekos/elf.h	2112;"	d
R_PPC64_REL64	include/geekos/elf.h	2130;"	d
R_PPC64_RELATIVE	include/geekos/elf.h	2108;"	d
R_PPC64_SECTOFF	include/geekos/elf.h	2119;"	d
R_PPC64_SECTOFF_DS	include/geekos/elf.h	2148;"	d
R_PPC64_SECTOFF_HA	include/geekos/elf.h	2122;"	d
R_PPC64_SECTOFF_HI	include/geekos/elf.h	2121;"	d
R_PPC64_SECTOFF_LO	include/geekos/elf.h	2120;"	d
R_PPC64_SECTOFF_LO_DS	include/geekos/elf.h	2149;"	d
R_PPC64_TLS	include/geekos/elf.h	2156;"	d
R_PPC64_TLSGD	include/geekos/elf.h	2196;"	d
R_PPC64_TLSLD	include/geekos/elf.h	2197;"	d
R_PPC64_TOC	include/geekos/elf.h	2137;"	d
R_PPC64_TOC16	include/geekos/elf.h	2133;"	d
R_PPC64_TOC16_DS	include/geekos/elf.h	2150;"	d
R_PPC64_TOC16_HA	include/geekos/elf.h	2136;"	d
R_PPC64_TOC16_HI	include/geekos/elf.h	2135;"	d
R_PPC64_TOC16_LO	include/geekos/elf.h	2134;"	d
R_PPC64_TOC16_LO_DS	include/geekos/elf.h	2151;"	d
R_PPC64_TOCSAVE	include/geekos/elf.h	2198;"	d
R_PPC64_TPREL16	include/geekos/elf.h	2158;"	d
R_PPC64_TPREL16_DS	include/geekos/elf.h	2184;"	d
R_PPC64_TPREL16_HA	include/geekos/elf.h	2161;"	d
R_PPC64_TPREL16_HI	include/geekos/elf.h	2160;"	d
R_PPC64_TPREL16_HIGH	include/geekos/elf.h	2203;"	d
R_PPC64_TPREL16_HIGHA	include/geekos/elf.h	2204;"	d
R_PPC64_TPREL16_HIGHER	include/geekos/elf.h	2186;"	d
R_PPC64_TPREL16_HIGHERA	include/geekos/elf.h	2187;"	d
R_PPC64_TPREL16_HIGHEST	include/geekos/elf.h	2188;"	d
R_PPC64_TPREL16_HIGHESTA	include/geekos/elf.h	2189;"	d
R_PPC64_TPREL16_LO	include/geekos/elf.h	2159;"	d
R_PPC64_TPREL16_LO_DS	include/geekos/elf.h	2185;"	d
R_PPC64_TPREL64	include/geekos/elf.h	2162;"	d
R_PPC64_UADDR16	include/geekos/elf.h	2111;"	d
R_PPC64_UADDR32	include/geekos/elf.h	2110;"	d
R_PPC64_UADDR64	include/geekos/elf.h	2129;"	d
R_PPC_ADDR14	include/geekos/elf.h	1980;"	d
R_PPC_ADDR14_BRNTAKEN	include/geekos/elf.h	1982;"	d
R_PPC_ADDR14_BRTAKEN	include/geekos/elf.h	1981;"	d
R_PPC_ADDR16	include/geekos/elf.h	1976;"	d
R_PPC_ADDR16_HA	include/geekos/elf.h	1979;"	d
R_PPC_ADDR16_HI	include/geekos/elf.h	1978;"	d
R_PPC_ADDR16_LO	include/geekos/elf.h	1977;"	d
R_PPC_ADDR24	include/geekos/elf.h	1975;"	d
R_PPC_ADDR32	include/geekos/elf.h	1974;"	d
R_PPC_COPY	include/geekos/elf.h	1992;"	d
R_PPC_DIAB_RELSDA_HA	include/geekos/elf.h	2066;"	d
R_PPC_DIAB_RELSDA_HI	include/geekos/elf.h	2065;"	d
R_PPC_DIAB_RELSDA_LO	include/geekos/elf.h	2064;"	d
R_PPC_DIAB_SDA21_HA	include/geekos/elf.h	2063;"	d
R_PPC_DIAB_SDA21_HI	include/geekos/elf.h	2062;"	d
R_PPC_DIAB_SDA21_LO	include/geekos/elf.h	2061;"	d
R_PPC_DTPMOD32	include/geekos/elf.h	2013;"	d
R_PPC_DTPREL16	include/geekos/elf.h	2019;"	d
R_PPC_DTPREL16_HA	include/geekos/elf.h	2022;"	d
R_PPC_DTPREL16_HI	include/geekos/elf.h	2021;"	d
R_PPC_DTPREL16_LO	include/geekos/elf.h	2020;"	d
R_PPC_DTPREL32	include/geekos/elf.h	2023;"	d
R_PPC_EMB_BIT_FLD	include/geekos/elf.h	2057;"	d
R_PPC_EMB_MRKREF	include/geekos/elf.h	2052;"	d
R_PPC_EMB_NADDR16	include/geekos/elf.h	2044;"	d
R_PPC_EMB_NADDR16_HA	include/geekos/elf.h	2047;"	d
R_PPC_EMB_NADDR16_HI	include/geekos/elf.h	2046;"	d
R_PPC_EMB_NADDR16_LO	include/geekos/elf.h	2045;"	d
R_PPC_EMB_NADDR32	include/geekos/elf.h	2043;"	d
R_PPC_EMB_RELSDA	include/geekos/elf.h	2058;"	d
R_PPC_EMB_RELSEC16	include/geekos/elf.h	2053;"	d
R_PPC_EMB_RELST_HA	include/geekos/elf.h	2056;"	d
R_PPC_EMB_RELST_HI	include/geekos/elf.h	2055;"	d
R_PPC_EMB_RELST_LO	include/geekos/elf.h	2054;"	d
R_PPC_EMB_SDA21	include/geekos/elf.h	2051;"	d
R_PPC_EMB_SDA2I16	include/geekos/elf.h	2049;"	d
R_PPC_EMB_SDA2REL	include/geekos/elf.h	2050;"	d
R_PPC_EMB_SDAI16	include/geekos/elf.h	2048;"	d
R_PPC_GLOB_DAT	include/geekos/elf.h	1993;"	d
R_PPC_GOT16	include/geekos/elf.h	1987;"	d
R_PPC_GOT16_HA	include/geekos/elf.h	1990;"	d
R_PPC_GOT16_HI	include/geekos/elf.h	1989;"	d
R_PPC_GOT16_LO	include/geekos/elf.h	1988;"	d
R_PPC_GOT_DTPREL16	include/geekos/elf.h	2036;"	d
R_PPC_GOT_DTPREL16_HA	include/geekos/elf.h	2039;"	d
R_PPC_GOT_DTPREL16_HI	include/geekos/elf.h	2038;"	d
R_PPC_GOT_DTPREL16_LO	include/geekos/elf.h	2037;"	d
R_PPC_GOT_TLSGD16	include/geekos/elf.h	2024;"	d
R_PPC_GOT_TLSGD16_HA	include/geekos/elf.h	2027;"	d
R_PPC_GOT_TLSGD16_HI	include/geekos/elf.h	2026;"	d
R_PPC_GOT_TLSGD16_LO	include/geekos/elf.h	2025;"	d
R_PPC_GOT_TLSLD16	include/geekos/elf.h	2028;"	d
R_PPC_GOT_TLSLD16_HA	include/geekos/elf.h	2031;"	d
R_PPC_GOT_TLSLD16_HI	include/geekos/elf.h	2030;"	d
R_PPC_GOT_TLSLD16_LO	include/geekos/elf.h	2029;"	d
R_PPC_GOT_TPREL16	include/geekos/elf.h	2032;"	d
R_PPC_GOT_TPREL16_HA	include/geekos/elf.h	2035;"	d
R_PPC_GOT_TPREL16_HI	include/geekos/elf.h	2034;"	d
R_PPC_GOT_TPREL16_LO	include/geekos/elf.h	2033;"	d
R_PPC_IRELATIVE	include/geekos/elf.h	2069;"	d
R_PPC_JMP_SLOT	include/geekos/elf.h	1994;"	d
R_PPC_LOCAL24PC	include/geekos/elf.h	1996;"	d
R_PPC_NONE	include/geekos/elf.h	1973;"	d
R_PPC_PLT16_HA	include/geekos/elf.h	2004;"	d
R_PPC_PLT16_HI	include/geekos/elf.h	2003;"	d
R_PPC_PLT16_LO	include/geekos/elf.h	2002;"	d
R_PPC_PLT32	include/geekos/elf.h	2000;"	d
R_PPC_PLTREL24	include/geekos/elf.h	1991;"	d
R_PPC_PLTREL32	include/geekos/elf.h	2001;"	d
R_PPC_REL14	include/geekos/elf.h	1984;"	d
R_PPC_REL14_BRNTAKEN	include/geekos/elf.h	1986;"	d
R_PPC_REL14_BRTAKEN	include/geekos/elf.h	1985;"	d
R_PPC_REL16	include/geekos/elf.h	2072;"	d
R_PPC_REL16_HA	include/geekos/elf.h	2075;"	d
R_PPC_REL16_HI	include/geekos/elf.h	2074;"	d
R_PPC_REL16_LO	include/geekos/elf.h	2073;"	d
R_PPC_REL24	include/geekos/elf.h	1983;"	d
R_PPC_REL32	include/geekos/elf.h	1999;"	d
R_PPC_RELATIVE	include/geekos/elf.h	1995;"	d
R_PPC_SDAREL16	include/geekos/elf.h	2005;"	d
R_PPC_SECTOFF	include/geekos/elf.h	2006;"	d
R_PPC_SECTOFF_HA	include/geekos/elf.h	2009;"	d
R_PPC_SECTOFF_HI	include/geekos/elf.h	2008;"	d
R_PPC_SECTOFF_LO	include/geekos/elf.h	2007;"	d
R_PPC_TLS	include/geekos/elf.h	2012;"	d
R_PPC_TOC16	include/geekos/elf.h	2079;"	d
R_PPC_TPREL16	include/geekos/elf.h	2014;"	d
R_PPC_TPREL16_HA	include/geekos/elf.h	2017;"	d
R_PPC_TPREL16_HI	include/geekos/elf.h	2016;"	d
R_PPC_TPREL16_LO	include/geekos/elf.h	2015;"	d
R_PPC_TPREL32	include/geekos/elf.h	2018;"	d
R_PPC_UADDR16	include/geekos/elf.h	1998;"	d
R_PPC_UADDR32	include/geekos/elf.h	1997;"	d
R_SH_ALIGN	include/geekos/elf.h	2750;"	d
R_SH_CODE	include/geekos/elf.h	2751;"	d
R_SH_COPY	include/geekos/elf.h	2767;"	d
R_SH_COUNT	include/geekos/elf.h	2749;"	d
R_SH_DATA	include/geekos/elf.h	2752;"	d
R_SH_DIR32	include/geekos/elf.h	2737;"	d
R_SH_DIR8BP	include/geekos/elf.h	2743;"	d
R_SH_DIR8L	include/geekos/elf.h	2745;"	d
R_SH_DIR8W	include/geekos/elf.h	2744;"	d
R_SH_DIR8WPL	include/geekos/elf.h	2741;"	d
R_SH_DIR8WPN	include/geekos/elf.h	2739;"	d
R_SH_DIR8WPZ	include/geekos/elf.h	2742;"	d
R_SH_GLOB_DAT	include/geekos/elf.h	2768;"	d
R_SH_GNU_VTENTRY	include/geekos/elf.h	2756;"	d
R_SH_GNU_VTINHERIT	include/geekos/elf.h	2755;"	d
R_SH_GOT32	include/geekos/elf.h	2765;"	d
R_SH_GOTOFF	include/geekos/elf.h	2771;"	d
R_SH_GOTPC	include/geekos/elf.h	2772;"	d
R_SH_IND12W	include/geekos/elf.h	2740;"	d
R_SH_JMP_SLOT	include/geekos/elf.h	2769;"	d
R_SH_LABEL	include/geekos/elf.h	2753;"	d
R_SH_NONE	include/geekos/elf.h	2736;"	d
R_SH_NUM	include/geekos/elf.h	2774;"	d
R_SH_PLT32	include/geekos/elf.h	2766;"	d
R_SH_REL32	include/geekos/elf.h	2738;"	d
R_SH_RELATIVE	include/geekos/elf.h	2770;"	d
R_SH_SWITCH16	include/geekos/elf.h	2746;"	d
R_SH_SWITCH32	include/geekos/elf.h	2747;"	d
R_SH_SWITCH8	include/geekos/elf.h	2754;"	d
R_SH_TLS_DTPMOD32	include/geekos/elf.h	2762;"	d
R_SH_TLS_DTPOFF32	include/geekos/elf.h	2763;"	d
R_SH_TLS_GD_32	include/geekos/elf.h	2757;"	d
R_SH_TLS_IE_32	include/geekos/elf.h	2760;"	d
R_SH_TLS_LDO_32	include/geekos/elf.h	2759;"	d
R_SH_TLS_LD_32	include/geekos/elf.h	2758;"	d
R_SH_TLS_LE_32	include/geekos/elf.h	2761;"	d
R_SH_TLS_TPOFF32	include/geekos/elf.h	2764;"	d
R_SH_USES	include/geekos/elf.h	2748;"	d
R_SPARC_10	include/geekos/elf.h	1244;"	d
R_SPARC_11	include/geekos/elf.h	1245;"	d
R_SPARC_13	include/geekos/elf.h	1222;"	d
R_SPARC_16	include/geekos/elf.h	1213;"	d
R_SPARC_22	include/geekos/elf.h	1221;"	d
R_SPARC_32	include/geekos/elf.h	1214;"	d
R_SPARC_5	include/geekos/elf.h	1258;"	d
R_SPARC_6	include/geekos/elf.h	1259;"	d
R_SPARC_64	include/geekos/elf.h	1246;"	d
R_SPARC_7	include/geekos/elf.h	1257;"	d
R_SPARC_8	include/geekos/elf.h	1212;"	d
R_SPARC_COPY	include/geekos/elf.h	1230;"	d
R_SPARC_DISP16	include/geekos/elf.h	1216;"	d
R_SPARC_DISP32	include/geekos/elf.h	1217;"	d
R_SPARC_DISP64	include/geekos/elf.h	1260;"	d
R_SPARC_DISP8	include/geekos/elf.h	1215;"	d
R_SPARC_GLOB_DAT	include/geekos/elf.h	1231;"	d
R_SPARC_GLOB_JMP	include/geekos/elf.h	1256;"	d
R_SPARC_GNU_VTENTRY	include/geekos/elf.h	1306;"	d
R_SPARC_GNU_VTINHERIT	include/geekos/elf.h	1305;"	d
R_SPARC_GOT10	include/geekos/elf.h	1224;"	d
R_SPARC_GOT13	include/geekos/elf.h	1225;"	d
R_SPARC_GOT22	include/geekos/elf.h	1226;"	d
R_SPARC_GOTDATA_HIX22	include/geekos/elf.h	1294;"	d
R_SPARC_GOTDATA_LOX10	include/geekos/elf.h	1295;"	d
R_SPARC_GOTDATA_OP	include/geekos/elf.h	1298;"	d
R_SPARC_GOTDATA_OP_HIX22	include/geekos/elf.h	1296;"	d
R_SPARC_GOTDATA_OP_LOX10	include/geekos/elf.h	1297;"	d
R_SPARC_H34	include/geekos/elf.h	1299;"	d
R_SPARC_H44	include/geekos/elf.h	1264;"	d
R_SPARC_HH22	include/geekos/elf.h	1248;"	d
R_SPARC_HI22	include/geekos/elf.h	1220;"	d
R_SPARC_HIPLT22	include/geekos/elf.h	1239;"	d
R_SPARC_HIX22	include/geekos/elf.h	1262;"	d
R_SPARC_HM10	include/geekos/elf.h	1249;"	d
R_SPARC_IRELATIVE	include/geekos/elf.h	1304;"	d
R_SPARC_JMP_IREL	include/geekos/elf.h	1303;"	d
R_SPARC_JMP_SLOT	include/geekos/elf.h	1232;"	d
R_SPARC_L44	include/geekos/elf.h	1266;"	d
R_SPARC_LM22	include/geekos/elf.h	1250;"	d
R_SPARC_LO10	include/geekos/elf.h	1223;"	d
R_SPARC_LOPLT10	include/geekos/elf.h	1240;"	d
R_SPARC_LOX10	include/geekos/elf.h	1263;"	d
R_SPARC_M44	include/geekos/elf.h	1265;"	d
R_SPARC_NONE	include/geekos/elf.h	1211;"	d
R_SPARC_NUM	include/geekos/elf.h	1309;"	d
R_SPARC_OLO10	include/geekos/elf.h	1247;"	d
R_SPARC_PC10	include/geekos/elf.h	1227;"	d
R_SPARC_PC22	include/geekos/elf.h	1228;"	d
R_SPARC_PCPLT10	include/geekos/elf.h	1243;"	d
R_SPARC_PCPLT22	include/geekos/elf.h	1242;"	d
R_SPARC_PCPLT32	include/geekos/elf.h	1241;"	d
R_SPARC_PC_HH22	include/geekos/elf.h	1251;"	d
R_SPARC_PC_HM10	include/geekos/elf.h	1252;"	d
R_SPARC_PC_LM22	include/geekos/elf.h	1253;"	d
R_SPARC_PLT32	include/geekos/elf.h	1238;"	d
R_SPARC_PLT64	include/geekos/elf.h	1261;"	d
R_SPARC_REGISTER	include/geekos/elf.h	1267;"	d
R_SPARC_RELATIVE	include/geekos/elf.h	1233;"	d
R_SPARC_REV32	include/geekos/elf.h	1307;"	d
R_SPARC_SIZE32	include/geekos/elf.h	1300;"	d
R_SPARC_SIZE64	include/geekos/elf.h	1301;"	d
R_SPARC_TLS_DTPMOD32	include/geekos/elf.h	1288;"	d
R_SPARC_TLS_DTPMOD64	include/geekos/elf.h	1289;"	d
R_SPARC_TLS_DTPOFF32	include/geekos/elf.h	1290;"	d
R_SPARC_TLS_DTPOFF64	include/geekos/elf.h	1291;"	d
R_SPARC_TLS_GD_ADD	include/geekos/elf.h	1272;"	d
R_SPARC_TLS_GD_CALL	include/geekos/elf.h	1273;"	d
R_SPARC_TLS_GD_HI22	include/geekos/elf.h	1270;"	d
R_SPARC_TLS_GD_LO10	include/geekos/elf.h	1271;"	d
R_SPARC_TLS_IE_ADD	include/geekos/elf.h	1285;"	d
R_SPARC_TLS_IE_HI22	include/geekos/elf.h	1281;"	d
R_SPARC_TLS_IE_LD	include/geekos/elf.h	1283;"	d
R_SPARC_TLS_IE_LDX	include/geekos/elf.h	1284;"	d
R_SPARC_TLS_IE_LO10	include/geekos/elf.h	1282;"	d
R_SPARC_TLS_LDM_ADD	include/geekos/elf.h	1276;"	d
R_SPARC_TLS_LDM_CALL	include/geekos/elf.h	1277;"	d
R_SPARC_TLS_LDM_HI22	include/geekos/elf.h	1274;"	d
R_SPARC_TLS_LDM_LO10	include/geekos/elf.h	1275;"	d
R_SPARC_TLS_LDO_ADD	include/geekos/elf.h	1280;"	d
R_SPARC_TLS_LDO_HIX22	include/geekos/elf.h	1278;"	d
R_SPARC_TLS_LDO_LOX10	include/geekos/elf.h	1279;"	d
R_SPARC_TLS_LE_HIX22	include/geekos/elf.h	1286;"	d
R_SPARC_TLS_LE_LOX10	include/geekos/elf.h	1287;"	d
R_SPARC_TLS_TPOFF32	include/geekos/elf.h	1292;"	d
R_SPARC_TLS_TPOFF64	include/geekos/elf.h	1293;"	d
R_SPARC_UA16	include/geekos/elf.h	1269;"	d
R_SPARC_UA32	include/geekos/elf.h	1234;"	d
R_SPARC_UA64	include/geekos/elf.h	1268;"	d
R_SPARC_WDISP10	include/geekos/elf.h	1302;"	d
R_SPARC_WDISP16	include/geekos/elf.h	1254;"	d
R_SPARC_WDISP19	include/geekos/elf.h	1255;"	d
R_SPARC_WDISP22	include/geekos/elf.h	1219;"	d
R_SPARC_WDISP30	include/geekos/elf.h	1218;"	d
R_SPARC_WPLT30	include/geekos/elf.h	1229;"	d
R_TILEGX_16	include/geekos/elf.h	3178;"	d
R_TILEGX_16_PCREL	include/geekos/elf.h	3182;"	d
R_TILEGX_32	include/geekos/elf.h	3177;"	d
R_TILEGX_32_PCREL	include/geekos/elf.h	3181;"	d
R_TILEGX_64	include/geekos/elf.h	3176;"	d
R_TILEGX_64_PCREL	include/geekos/elf.h	3180;"	d
R_TILEGX_8	include/geekos/elf.h	3179;"	d
R_TILEGX_8_PCREL	include/geekos/elf.h	3183;"	d
R_TILEGX_BROFF_X1	include/geekos/elf.h	3195;"	d
R_TILEGX_COPY	include/geekos/elf.h	3191;"	d
R_TILEGX_DEST_IMM8_X1	include/geekos/elf.h	3202;"	d
R_TILEGX_GLOB_DAT	include/geekos/elf.h	3192;"	d
R_TILEGX_GNU_VTENTRY	include/geekos/elf.h	3297;"	d
R_TILEGX_GNU_VTINHERIT	include/geekos/elf.h	3296;"	d
R_TILEGX_HW0	include/geekos/elf.h	3184;"	d
R_TILEGX_HW0_LAST	include/geekos/elf.h	3188;"	d
R_TILEGX_HW1	include/geekos/elf.h	3185;"	d
R_TILEGX_HW1_LAST	include/geekos/elf.h	3189;"	d
R_TILEGX_HW2	include/geekos/elf.h	3186;"	d
R_TILEGX_HW2_LAST	include/geekos/elf.h	3190;"	d
R_TILEGX_HW3	include/geekos/elf.h	3187;"	d
R_TILEGX_IMM16_X0_HW0	include/geekos/elf.h	3211;"	d
R_TILEGX_IMM16_X0_HW0_GOT	include/geekos/elf.h	3239;"	d
R_TILEGX_IMM16_X0_HW0_LAST	include/geekos/elf.h	3219;"	d
R_TILEGX_IMM16_X0_HW0_LAST_GOT	include/geekos/elf.h	3247;"	d
R_TILEGX_IMM16_X0_HW0_LAST_PCREL	include/geekos/elf.h	3233;"	d
R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL	include/geekos/elf.h	3268;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD	include/geekos/elf.h	3261;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE	include/geekos/elf.h	3274;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE	include/geekos/elf.h	3257;"	d
R_TILEGX_IMM16_X0_HW0_PCREL	include/geekos/elf.h	3225;"	d
R_TILEGX_IMM16_X0_HW0_PLT_PCREL	include/geekos/elf.h	3241;"	d
R_TILEGX_IMM16_X0_HW0_TLS_GD	include/geekos/elf.h	3253;"	d
R_TILEGX_IMM16_X0_HW0_TLS_IE	include/geekos/elf.h	3266;"	d
R_TILEGX_IMM16_X0_HW0_TLS_LE	include/geekos/elf.h	3255;"	d
R_TILEGX_IMM16_X0_HW1	include/geekos/elf.h	3213;"	d
R_TILEGX_IMM16_X0_HW1_LAST	include/geekos/elf.h	3221;"	d
R_TILEGX_IMM16_X0_HW1_LAST_GOT	include/geekos/elf.h	3249;"	d
R_TILEGX_IMM16_X0_HW1_LAST_PCREL	include/geekos/elf.h	3235;"	d
R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL	include/geekos/elf.h	3270;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD	include/geekos/elf.h	3263;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE	include/geekos/elf.h	3276;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE	include/geekos/elf.h	3259;"	d
R_TILEGX_IMM16_X0_HW1_PCREL	include/geekos/elf.h	3227;"	d
R_TILEGX_IMM16_X0_HW1_PLT_PCREL	include/geekos/elf.h	3243;"	d
R_TILEGX_IMM16_X0_HW2	include/geekos/elf.h	3215;"	d
R_TILEGX_IMM16_X0_HW2_LAST	include/geekos/elf.h	3223;"	d
R_TILEGX_IMM16_X0_HW2_LAST_PCREL	include/geekos/elf.h	3237;"	d
R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL	include/geekos/elf.h	3272;"	d
R_TILEGX_IMM16_X0_HW2_PCREL	include/geekos/elf.h	3229;"	d
R_TILEGX_IMM16_X0_HW2_PLT_PCREL	include/geekos/elf.h	3245;"	d
R_TILEGX_IMM16_X0_HW3	include/geekos/elf.h	3217;"	d
R_TILEGX_IMM16_X0_HW3_PCREL	include/geekos/elf.h	3231;"	d
R_TILEGX_IMM16_X0_HW3_PLT_PCREL	include/geekos/elf.h	3251;"	d
R_TILEGX_IMM16_X1_HW0	include/geekos/elf.h	3212;"	d
R_TILEGX_IMM16_X1_HW0_GOT	include/geekos/elf.h	3240;"	d
R_TILEGX_IMM16_X1_HW0_LAST	include/geekos/elf.h	3220;"	d
R_TILEGX_IMM16_X1_HW0_LAST_GOT	include/geekos/elf.h	3248;"	d
R_TILEGX_IMM16_X1_HW0_LAST_PCREL	include/geekos/elf.h	3234;"	d
R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL	include/geekos/elf.h	3269;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD	include/geekos/elf.h	3262;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE	include/geekos/elf.h	3275;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE	include/geekos/elf.h	3258;"	d
R_TILEGX_IMM16_X1_HW0_PCREL	include/geekos/elf.h	3226;"	d
R_TILEGX_IMM16_X1_HW0_PLT_PCREL	include/geekos/elf.h	3242;"	d
R_TILEGX_IMM16_X1_HW0_TLS_GD	include/geekos/elf.h	3254;"	d
R_TILEGX_IMM16_X1_HW0_TLS_IE	include/geekos/elf.h	3267;"	d
R_TILEGX_IMM16_X1_HW0_TLS_LE	include/geekos/elf.h	3256;"	d
R_TILEGX_IMM16_X1_HW1	include/geekos/elf.h	3214;"	d
R_TILEGX_IMM16_X1_HW1_LAST	include/geekos/elf.h	3222;"	d
R_TILEGX_IMM16_X1_HW1_LAST_GOT	include/geekos/elf.h	3250;"	d
R_TILEGX_IMM16_X1_HW1_LAST_PCREL	include/geekos/elf.h	3236;"	d
R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL	include/geekos/elf.h	3271;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD	include/geekos/elf.h	3264;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE	include/geekos/elf.h	3277;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE	include/geekos/elf.h	3260;"	d
R_TILEGX_IMM16_X1_HW1_PCREL	include/geekos/elf.h	3228;"	d
R_TILEGX_IMM16_X1_HW1_PLT_PCREL	include/geekos/elf.h	3244;"	d
R_TILEGX_IMM16_X1_HW2	include/geekos/elf.h	3216;"	d
R_TILEGX_IMM16_X1_HW2_LAST	include/geekos/elf.h	3224;"	d
R_TILEGX_IMM16_X1_HW2_LAST_PCREL	include/geekos/elf.h	3238;"	d
R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL	include/geekos/elf.h	3273;"	d
R_TILEGX_IMM16_X1_HW2_PCREL	include/geekos/elf.h	3230;"	d
R_TILEGX_IMM16_X1_HW2_PLT_PCREL	include/geekos/elf.h	3246;"	d
R_TILEGX_IMM16_X1_HW3	include/geekos/elf.h	3218;"	d
R_TILEGX_IMM16_X1_HW3_PCREL	include/geekos/elf.h	3232;"	d
R_TILEGX_IMM16_X1_HW3_PLT_PCREL	include/geekos/elf.h	3252;"	d
R_TILEGX_IMM8_X0	include/geekos/elf.h	3198;"	d
R_TILEGX_IMM8_X0_TLS_ADD	include/geekos/elf.h	3291;"	d
R_TILEGX_IMM8_X0_TLS_GD_ADD	include/geekos/elf.h	3286;"	d
R_TILEGX_IMM8_X1	include/geekos/elf.h	3200;"	d
R_TILEGX_IMM8_X1_TLS_ADD	include/geekos/elf.h	3292;"	d
R_TILEGX_IMM8_X1_TLS_GD_ADD	include/geekos/elf.h	3287;"	d
R_TILEGX_IMM8_Y0	include/geekos/elf.h	3199;"	d
R_TILEGX_IMM8_Y0_TLS_ADD	include/geekos/elf.h	3293;"	d
R_TILEGX_IMM8_Y0_TLS_GD_ADD	include/geekos/elf.h	3288;"	d
R_TILEGX_IMM8_Y1	include/geekos/elf.h	3201;"	d
R_TILEGX_IMM8_Y1_TLS_ADD	include/geekos/elf.h	3294;"	d
R_TILEGX_IMM8_Y1_TLS_GD_ADD	include/geekos/elf.h	3289;"	d
R_TILEGX_JMP_SLOT	include/geekos/elf.h	3193;"	d
R_TILEGX_JUMPOFF_X1	include/geekos/elf.h	3196;"	d
R_TILEGX_JUMPOFF_X1_PLT	include/geekos/elf.h	3197;"	d
R_TILEGX_MF_IMM14_X1	include/geekos/elf.h	3204;"	d
R_TILEGX_MMEND_X0	include/geekos/elf.h	3206;"	d
R_TILEGX_MMSTART_X0	include/geekos/elf.h	3205;"	d
R_TILEGX_MT_IMM14_X1	include/geekos/elf.h	3203;"	d
R_TILEGX_NONE	include/geekos/elf.h	3175;"	d
R_TILEGX_NUM	include/geekos/elf.h	3299;"	d
R_TILEGX_RELATIVE	include/geekos/elf.h	3194;"	d
R_TILEGX_SHAMT_X0	include/geekos/elf.h	3207;"	d
R_TILEGX_SHAMT_X1	include/geekos/elf.h	3208;"	d
R_TILEGX_SHAMT_Y0	include/geekos/elf.h	3209;"	d
R_TILEGX_SHAMT_Y1	include/geekos/elf.h	3210;"	d
R_TILEGX_TLS_DTPMOD32	include/geekos/elf.h	3282;"	d
R_TILEGX_TLS_DTPMOD64	include/geekos/elf.h	3279;"	d
R_TILEGX_TLS_DTPOFF32	include/geekos/elf.h	3283;"	d
R_TILEGX_TLS_DTPOFF64	include/geekos/elf.h	3280;"	d
R_TILEGX_TLS_GD_CALL	include/geekos/elf.h	3285;"	d
R_TILEGX_TLS_IE_LOAD	include/geekos/elf.h	3290;"	d
R_TILEGX_TLS_TPOFF32	include/geekos/elf.h	3284;"	d
R_TILEGX_TLS_TPOFF64	include/geekos/elf.h	3281;"	d
R_TILEPRO_16	include/geekos/elf.h	3079;"	d
R_TILEPRO_16_PCREL	include/geekos/elf.h	3082;"	d
R_TILEPRO_32	include/geekos/elf.h	3078;"	d
R_TILEPRO_32_PCREL	include/geekos/elf.h	3081;"	d
R_TILEPRO_8	include/geekos/elf.h	3080;"	d
R_TILEPRO_8_PCREL	include/geekos/elf.h	3083;"	d
R_TILEPRO_BROFF_X1	include/geekos/elf.h	3091;"	d
R_TILEPRO_COPY	include/geekos/elf.h	3087;"	d
R_TILEPRO_DEST_IMM8_X1	include/geekos/elf.h	3132;"	d
R_TILEPRO_GLOB_DAT	include/geekos/elf.h	3088;"	d
R_TILEPRO_GNU_VTENTRY	include/geekos/elf.h	3169;"	d
R_TILEPRO_GNU_VTINHERIT	include/geekos/elf.h	3168;"	d
R_TILEPRO_HA16	include/geekos/elf.h	3086;"	d
R_TILEPRO_HI16	include/geekos/elf.h	3085;"	d
R_TILEPRO_IMM16_X0	include/geekos/elf.h	3100;"	d
R_TILEPRO_IMM16_X0_GOT	include/geekos/elf.h	3116;"	d
R_TILEPRO_IMM16_X0_GOT_HA	include/geekos/elf.h	3122;"	d
R_TILEPRO_IMM16_X0_GOT_HI	include/geekos/elf.h	3120;"	d
R_TILEPRO_IMM16_X0_GOT_LO	include/geekos/elf.h	3118;"	d
R_TILEPRO_IMM16_X0_HA	include/geekos/elf.h	3106;"	d
R_TILEPRO_IMM16_X0_HA_PCREL	include/geekos/elf.h	3114;"	d
R_TILEPRO_IMM16_X0_HI	include/geekos/elf.h	3104;"	d
R_TILEPRO_IMM16_X0_HI_PCREL	include/geekos/elf.h	3112;"	d
R_TILEPRO_IMM16_X0_LO	include/geekos/elf.h	3102;"	d
R_TILEPRO_IMM16_X0_LO_PCREL	include/geekos/elf.h	3110;"	d
R_TILEPRO_IMM16_X0_PCREL	include/geekos/elf.h	3108;"	d
R_TILEPRO_IMM16_X0_TLS_GD	include/geekos/elf.h	3140;"	d
R_TILEPRO_IMM16_X0_TLS_GD_HA	include/geekos/elf.h	3146;"	d
R_TILEPRO_IMM16_X0_TLS_GD_HI	include/geekos/elf.h	3144;"	d
R_TILEPRO_IMM16_X0_TLS_GD_LO	include/geekos/elf.h	3142;"	d
R_TILEPRO_IMM16_X0_TLS_IE	include/geekos/elf.h	3148;"	d
R_TILEPRO_IMM16_X0_TLS_IE_HA	include/geekos/elf.h	3154;"	d
R_TILEPRO_IMM16_X0_TLS_IE_HI	include/geekos/elf.h	3152;"	d
R_TILEPRO_IMM16_X0_TLS_IE_LO	include/geekos/elf.h	3150;"	d
R_TILEPRO_IMM16_X0_TLS_LE	include/geekos/elf.h	3159;"	d
R_TILEPRO_IMM16_X0_TLS_LE_HA	include/geekos/elf.h	3165;"	d
R_TILEPRO_IMM16_X0_TLS_LE_HI	include/geekos/elf.h	3163;"	d
R_TILEPRO_IMM16_X0_TLS_LE_LO	include/geekos/elf.h	3161;"	d
R_TILEPRO_IMM16_X1	include/geekos/elf.h	3101;"	d
R_TILEPRO_IMM16_X1_GOT	include/geekos/elf.h	3117;"	d
R_TILEPRO_IMM16_X1_GOT_HA	include/geekos/elf.h	3123;"	d
R_TILEPRO_IMM16_X1_GOT_HI	include/geekos/elf.h	3121;"	d
R_TILEPRO_IMM16_X1_GOT_LO	include/geekos/elf.h	3119;"	d
R_TILEPRO_IMM16_X1_HA	include/geekos/elf.h	3107;"	d
R_TILEPRO_IMM16_X1_HA_PCREL	include/geekos/elf.h	3115;"	d
R_TILEPRO_IMM16_X1_HI	include/geekos/elf.h	3105;"	d
R_TILEPRO_IMM16_X1_HI_PCREL	include/geekos/elf.h	3113;"	d
R_TILEPRO_IMM16_X1_LO	include/geekos/elf.h	3103;"	d
R_TILEPRO_IMM16_X1_LO_PCREL	include/geekos/elf.h	3111;"	d
R_TILEPRO_IMM16_X1_PCREL	include/geekos/elf.h	3109;"	d
R_TILEPRO_IMM16_X1_TLS_GD	include/geekos/elf.h	3141;"	d
R_TILEPRO_IMM16_X1_TLS_GD_HA	include/geekos/elf.h	3147;"	d
R_TILEPRO_IMM16_X1_TLS_GD_HI	include/geekos/elf.h	3145;"	d
R_TILEPRO_IMM16_X1_TLS_GD_LO	include/geekos/elf.h	3143;"	d
R_TILEPRO_IMM16_X1_TLS_IE	include/geekos/elf.h	3149;"	d
R_TILEPRO_IMM16_X1_TLS_IE_HA	include/geekos/elf.h	3155;"	d
R_TILEPRO_IMM16_X1_TLS_IE_HI	include/geekos/elf.h	3153;"	d
R_TILEPRO_IMM16_X1_TLS_IE_LO	include/geekos/elf.h	3151;"	d
R_TILEPRO_IMM16_X1_TLS_LE	include/geekos/elf.h	3160;"	d
R_TILEPRO_IMM16_X1_TLS_LE_HA	include/geekos/elf.h	3166;"	d
R_TILEPRO_IMM16_X1_TLS_LE_HI	include/geekos/elf.h	3164;"	d
R_TILEPRO_IMM16_X1_TLS_LE_LO	include/geekos/elf.h	3162;"	d
R_TILEPRO_IMM8_X0	include/geekos/elf.h	3094;"	d
R_TILEPRO_IMM8_X0_TLS_GD_ADD	include/geekos/elf.h	3135;"	d
R_TILEPRO_IMM8_X1	include/geekos/elf.h	3096;"	d
R_TILEPRO_IMM8_X1_TLS_GD_ADD	include/geekos/elf.h	3136;"	d
R_TILEPRO_IMM8_Y0	include/geekos/elf.h	3095;"	d
R_TILEPRO_IMM8_Y0_TLS_GD_ADD	include/geekos/elf.h	3137;"	d
R_TILEPRO_IMM8_Y1	include/geekos/elf.h	3097;"	d
R_TILEPRO_IMM8_Y1_TLS_GD_ADD	include/geekos/elf.h	3138;"	d
R_TILEPRO_JMP_SLOT	include/geekos/elf.h	3089;"	d
R_TILEPRO_JOFFLONG_X1	include/geekos/elf.h	3092;"	d
R_TILEPRO_JOFFLONG_X1_PLT	include/geekos/elf.h	3093;"	d
R_TILEPRO_LO16	include/geekos/elf.h	3084;"	d
R_TILEPRO_MF_IMM15_X1	include/geekos/elf.h	3099;"	d
R_TILEPRO_MMEND_X0	include/geekos/elf.h	3125;"	d
R_TILEPRO_MMEND_X1	include/geekos/elf.h	3127;"	d
R_TILEPRO_MMSTART_X0	include/geekos/elf.h	3124;"	d
R_TILEPRO_MMSTART_X1	include/geekos/elf.h	3126;"	d
R_TILEPRO_MT_IMM15_X1	include/geekos/elf.h	3098;"	d
R_TILEPRO_NONE	include/geekos/elf.h	3077;"	d
R_TILEPRO_NUM	include/geekos/elf.h	3171;"	d
R_TILEPRO_RELATIVE	include/geekos/elf.h	3090;"	d
R_TILEPRO_SHAMT_X0	include/geekos/elf.h	3128;"	d
R_TILEPRO_SHAMT_X1	include/geekos/elf.h	3129;"	d
R_TILEPRO_SHAMT_Y0	include/geekos/elf.h	3130;"	d
R_TILEPRO_SHAMT_Y1	include/geekos/elf.h	3131;"	d
R_TILEPRO_TLS_DTPMOD32	include/geekos/elf.h	3156;"	d
R_TILEPRO_TLS_DTPOFF32	include/geekos/elf.h	3157;"	d
R_TILEPRO_TLS_GD_CALL	include/geekos/elf.h	3134;"	d
R_TILEPRO_TLS_IE_LOAD	include/geekos/elf.h	3139;"	d
R_TILEPRO_TLS_TPOFF32	include/geekos/elf.h	3158;"	d
R_X86_64_16	include/geekos/elf.h	2907;"	d
R_X86_64_32	include/geekos/elf.h	2905;"	d
R_X86_64_32S	include/geekos/elf.h	2906;"	d
R_X86_64_64	include/geekos/elf.h	2895;"	d
R_X86_64_8	include/geekos/elf.h	2909;"	d
R_X86_64_COPY	include/geekos/elf.h	2899;"	d
R_X86_64_DTPMOD64	include/geekos/elf.h	2911;"	d
R_X86_64_DTPOFF32	include/geekos/elf.h	2918;"	d
R_X86_64_DTPOFF64	include/geekos/elf.h	2912;"	d
R_X86_64_GLOB_DAT	include/geekos/elf.h	2900;"	d
R_X86_64_GOT32	include/geekos/elf.h	2897;"	d
R_X86_64_GOT64	include/geekos/elf.h	2926;"	d
R_X86_64_GOTOFF64	include/geekos/elf.h	2923;"	d
R_X86_64_GOTPC32	include/geekos/elf.h	2924;"	d
R_X86_64_GOTPC32_TLSDESC	include/geekos/elf.h	2935;"	d
R_X86_64_GOTPC64	include/geekos/elf.h	2929;"	d
R_X86_64_GOTPCREL	include/geekos/elf.h	2903;"	d
R_X86_64_GOTPCREL64	include/geekos/elf.h	2927;"	d
R_X86_64_GOTPLT64	include/geekos/elf.h	2930;"	d
R_X86_64_GOTTPOFF	include/geekos/elf.h	2919;"	d
R_X86_64_IRELATIVE	include/geekos/elf.h	2939;"	d
R_X86_64_JUMP_SLOT	include/geekos/elf.h	2901;"	d
R_X86_64_NONE	include/geekos/elf.h	2894;"	d
R_X86_64_NUM	include/geekos/elf.h	2942;"	d
R_X86_64_PC16	include/geekos/elf.h	2908;"	d
R_X86_64_PC32	include/geekos/elf.h	2896;"	d
R_X86_64_PC64	include/geekos/elf.h	2922;"	d
R_X86_64_PC8	include/geekos/elf.h	2910;"	d
R_X86_64_PLT32	include/geekos/elf.h	2898;"	d
R_X86_64_PLTOFF64	include/geekos/elf.h	2931;"	d
R_X86_64_RELATIVE	include/geekos/elf.h	2902;"	d
R_X86_64_RELATIVE64	include/geekos/elf.h	2940;"	d
R_X86_64_SIZE32	include/geekos/elf.h	2933;"	d
R_X86_64_SIZE64	include/geekos/elf.h	2934;"	d
R_X86_64_TLSDESC	include/geekos/elf.h	2938;"	d
R_X86_64_TLSDESC_CALL	include/geekos/elf.h	2936;"	d
R_X86_64_TLSGD	include/geekos/elf.h	2914;"	d
R_X86_64_TLSLD	include/geekos/elf.h	2916;"	d
R_X86_64_TPOFF32	include/geekos/elf.h	2921;"	d
R_X86_64_TPOFF64	include/geekos/elf.h	2913;"	d
Read	include/geekos/vfs.h	/^    int (*Read)(struct File *file, void *buf, ulong_t numBytes);$/;"	m	struct:File_Ops
Read	src/geekos/vfs.c	/^int Read(struct File *file, void *buf, ulong_t len)$/;"	f
ReadSector	src/geekos/bootsect.asm	/^ReadSector:$/;"	l
ReadSector	src/geekos/fd_boot.asm	/^ReadSector:$/;"	l
ReadWord	scripts/kerninfo	/^sub ReadWord {$/;"	s
ReadWord	scripts/pw	/^sub ReadWord {$/;"	s
Read_Entry	include/geekos/vfs.h	/^    int (*Read_Entry)(struct File *dir, struct VFS_Dir_Entry *entry);  \/* Read next directory entry. *\/$/;"	m	struct:File_Ops
Read_Entry	src/geekos/vfs.c	/^int Read_Entry(struct File *file, struct VFS_Dir_Entry *entry)$/;"	f
Read_Fully	src/geekos/vfs.c	/^int Read_Fully(const char *path, void **pBuffer, ulong_t *pLen)$/;"	f
Read_Key	src/geekos/keyboard.c	/^bool Read_Key(Keycode* keycode)$/;"	f
Reap_Thread	src/geekos/kthread.c	/^static void Reap_Thread(struct Kernel_Thread* kthread)$/;"	f	file:
Reaper	src/geekos/kthread.c	/^static void Reaper(ulong_t arg)$/;"	f	file:
Register_Block_Device	src/geekos/blockdev.c	/^int Register_Block_Device(const char *name, struct Block_Device_Ops *ops,$/;"	f
Register_Filesystem	src/geekos/vfs.c	/^bool Register_Filesystem(const char *fsName, struct Filesystem_Ops *fsOps)$/;"	f
Register_Paging_Device	src/geekos/vfs.c	/^void Register_Paging_Device(struct Paging_Device *pagingDevice)$/;"	f
Remove_Thread	include/geekos/kthread.h	/^static __inline__ void Remove_Thread(struct Thread_Queue *queue, struct Kernel_Thread *kthread) {$/;"	f
Repeatable	src/geekos/bget.c	1265;"	d	file:
Request_State	include/geekos/blockdev.h	/^enum Request_State {$/;"	g
Request_Type	include/geekos/blockdev.h	/^enum Request_Type {$/;"	g
Reserve_DMA	src/geekos/dma.c	/^bool Reserve_DMA(int chan)$/;"	f
Reset	src/geekos/screen.c	/^static void Reset(void)$/;"	f	file:
Reset_Controller	src/geekos/floppy.c	/^static bool Reset_Controller(void)$/;"	f	file:
Restore_Cursor	src/geekos/screen.c	/^static void Restore_Cursor(void)$/;"	f	file:
Round_Down_To_Block	include/geekos/blockdev.h	/^static __inline__ ulong_t Round_Down_To_Block(ulong_t offset)$/;"	f
Round_Down_To_Page	include/geekos/mem.h	/^static __inline__ ulong_t Round_Down_To_Page(ulong_t addr)$/;"	f
Round_Up_To_Block	include/geekos/blockdev.h	/^static __inline__ ulong_t Round_Up_To_Block(ulong_t offset)$/;"	f
Round_Up_To_Page	include/geekos/mem.h	/^static __inline__ ulong_t Round_Up_To_Page(ulong_t addr)$/;"	f
SCAN_TABLE_SIZE	src/geekos/keyboard.c	98;"	d	file:
SECTORS_PER_TRACK	src/geekos/defs.asm	/^SECTORS_PER_TRACK equ 18$/;"	d
SECTOR_SIZE	include/geekos/fileio.h	27;"	d
SECTOR_SIZE	src/tools/buildFat.c	11;"	d	file:
SELFMAG	include/geekos/elf.h	121;"	d
SETUPSEG	src/geekos/defs.asm	/^SETUPSEG equ 0x9020$/;"	d
SHF_ALLOC	include/geekos/elf.h	359;"	d
SHF_ALPHA_GPREL	include/geekos/elf.h	1906;"	d
SHF_ARM_COMDEF	include/geekos/elf.h	2285;"	d
SHF_ARM_ENTRYSECT	include/geekos/elf.h	2284;"	d
SHF_EXCLUDE	include/geekos/elf.h	373;"	d
SHF_EXECINSTR	include/geekos/elf.h	360;"	d
SHF_GROUP	include/geekos/elf.h	367;"	d
SHF_IA_64_NORECOV	include/geekos/elf.h	2620;"	d
SHF_IA_64_SHORT	include/geekos/elf.h	2619;"	d
SHF_INFO_LINK	include/geekos/elf.h	363;"	d
SHF_LINK_ORDER	include/geekos/elf.h	364;"	d
SHF_MASKOS	include/geekos/elf.h	369;"	d
SHF_MASKPROC	include/geekos/elf.h	370;"	d
SHF_MERGE	include/geekos/elf.h	361;"	d
SHF_MIPS_ADDR	include/geekos/elf.h	1406;"	d
SHF_MIPS_GPREL	include/geekos/elf.h	1404;"	d
SHF_MIPS_LOCAL	include/geekos/elf.h	1409;"	d
SHF_MIPS_MERGE	include/geekos/elf.h	1405;"	d
SHF_MIPS_NAMES	include/geekos/elf.h	1410;"	d
SHF_MIPS_NODUPE	include/geekos/elf.h	1411;"	d
SHF_MIPS_NOSTRIP	include/geekos/elf.h	1408;"	d
SHF_MIPS_STRINGS	include/geekos/elf.h	1407;"	d
SHF_ORDERED	include/geekos/elf.h	371;"	d
SHF_OS_NONCONFORMING	include/geekos/elf.h	365;"	d
SHF_PARISC_HUGE	include/geekos/elf.h	1734;"	d
SHF_PARISC_SBP	include/geekos/elf.h	1735;"	d
SHF_PARISC_SHORT	include/geekos/elf.h	1733;"	d
SHF_STRINGS	include/geekos/elf.h	362;"	d
SHF_TLS	include/geekos/elf.h	368;"	d
SHF_WRITE	include/geekos/elf.h	358;"	d
SHIFT_MASK	src/geekos/keyboard.c	51;"	d	file:
SHN_ABS	include/geekos/elf.h	312;"	d
SHN_AFTER	include/geekos/elf.h	307;"	d
SHN_BEFORE	include/geekos/elf.h	305;"	d
SHN_COMMON	include/geekos/elf.h	313;"	d
SHN_HIOS	include/geekos/elf.h	311;"	d
SHN_HIPROC	include/geekos/elf.h	309;"	d
SHN_HIRESERVE	include/geekos/elf.h	315;"	d
SHN_LOOS	include/geekos/elf.h	310;"	d
SHN_LOPROC	include/geekos/elf.h	304;"	d
SHN_LORESERVE	include/geekos/elf.h	303;"	d
SHN_MIPS_ACOMMON	include/geekos/elf.h	1354;"	d
SHN_MIPS_DATA	include/geekos/elf.h	1356;"	d
SHN_MIPS_SCOMMON	include/geekos/elf.h	1357;"	d
SHN_MIPS_SUNDEFINED	include/geekos/elf.h	1358;"	d
SHN_MIPS_TEXT	include/geekos/elf.h	1355;"	d
SHN_PARISC_ANSI_COMMON	include/geekos/elf.h	1721;"	d
SHN_PARISC_HUGE_COMMON	include/geekos/elf.h	1723;"	d
SHN_UNDEF	include/geekos/elf.h	302;"	d
SHN_XINDEX	include/geekos/elf.h	314;"	d
SHT_ALPHA_DEBUG	include/geekos/elf.h	1901;"	d
SHT_ALPHA_REGINFO	include/geekos/elf.h	1902;"	d
SHT_ARM_ATTRIBUTES	include/geekos/elf.h	2300;"	d
SHT_ARM_EXIDX	include/geekos/elf.h	2298;"	d
SHT_ARM_PREEMPTMAP	include/geekos/elf.h	2299;"	d
SHT_CHECKSUM	include/geekos/elf.h	341;"	d
SHT_DYNAMIC	include/geekos/elf.h	325;"	d
SHT_DYNSYM	include/geekos/elf.h	330;"	d
SHT_FINI_ARRAY	include/geekos/elf.h	332;"	d
SHT_GNU_ATTRIBUTES	include/geekos/elf.h	338;"	d
SHT_GNU_HASH	include/geekos/elf.h	339;"	d
SHT_GNU_LIBLIST	include/geekos/elf.h	340;"	d
SHT_GNU_verdef	include/geekos/elf.h	346;"	d
SHT_GNU_verneed	include/geekos/elf.h	347;"	d
SHT_GNU_versym	include/geekos/elf.h	348;"	d
SHT_GROUP	include/geekos/elf.h	334;"	d
SHT_HASH	include/geekos/elf.h	324;"	d
SHT_HIOS	include/geekos/elf.h	350;"	d
SHT_HIPROC	include/geekos/elf.h	352;"	d
SHT_HISUNW	include/geekos/elf.h	349;"	d
SHT_HIUSER	include/geekos/elf.h	354;"	d
SHT_IA_64_EXT	include/geekos/elf.h	2615;"	d
SHT_IA_64_UNWIND	include/geekos/elf.h	2616;"	d
SHT_INIT_ARRAY	include/geekos/elf.h	331;"	d
SHT_LOOS	include/geekos/elf.h	337;"	d
SHT_LOPROC	include/geekos/elf.h	351;"	d
SHT_LOSUNW	include/geekos/elf.h	342;"	d
SHT_LOUSER	include/geekos/elf.h	353;"	d
SHT_MIPS_AUXSYM	include/geekos/elf.h	1381;"	d
SHT_MIPS_CONFLICT	include/geekos/elf.h	1364;"	d
SHT_MIPS_CONTENT	include/geekos/elf.h	1373;"	d
SHT_MIPS_DEBUG	include/geekos/elf.h	1367;"	d
SHT_MIPS_DELTACLASS	include/geekos/elf.h	1388;"	d
SHT_MIPS_DELTADECL	include/geekos/elf.h	1390;"	d
SHT_MIPS_DELTAINST	include/geekos/elf.h	1387;"	d
SHT_MIPS_DELTASYM	include/geekos/elf.h	1386;"	d
SHT_MIPS_DENSE	include/geekos/elf.h	1378;"	d
SHT_MIPS_DWARF	include/geekos/elf.h	1389;"	d
SHT_MIPS_EH_REGION	include/geekos/elf.h	1398;"	d
SHT_MIPS_EVENTS	include/geekos/elf.h	1392;"	d
SHT_MIPS_EXTSYM	include/geekos/elf.h	1377;"	d
SHT_MIPS_FDESC	include/geekos/elf.h	1376;"	d
SHT_MIPS_GPTAB	include/geekos/elf.h	1365;"	d
SHT_MIPS_IFACE	include/geekos/elf.h	1372;"	d
SHT_MIPS_LIBLIST	include/geekos/elf.h	1362;"	d
SHT_MIPS_LINE	include/geekos/elf.h	1384;"	d
SHT_MIPS_LOCSTR	include/geekos/elf.h	1383;"	d
SHT_MIPS_LOCSYM	include/geekos/elf.h	1380;"	d
SHT_MIPS_MSYM	include/geekos/elf.h	1363;"	d
SHT_MIPS_OPTIONS	include/geekos/elf.h	1374;"	d
SHT_MIPS_OPTSYM	include/geekos/elf.h	1382;"	d
SHT_MIPS_PACKAGE	include/geekos/elf.h	1369;"	d
SHT_MIPS_PACKSYM	include/geekos/elf.h	1370;"	d
SHT_MIPS_PDESC	include/geekos/elf.h	1379;"	d
SHT_MIPS_PDR_EXCEPTION	include/geekos/elf.h	1400;"	d
SHT_MIPS_PIXIE	include/geekos/elf.h	1394;"	d
SHT_MIPS_REGINFO	include/geekos/elf.h	1368;"	d
SHT_MIPS_RELD	include/geekos/elf.h	1371;"	d
SHT_MIPS_RFDESC	include/geekos/elf.h	1385;"	d
SHT_MIPS_SHDR	include/geekos/elf.h	1375;"	d
SHT_MIPS_SYMBOL_LIB	include/geekos/elf.h	1391;"	d
SHT_MIPS_TRANSLATE	include/geekos/elf.h	1393;"	d
SHT_MIPS_UCODE	include/geekos/elf.h	1366;"	d
SHT_MIPS_WHIRL	include/geekos/elf.h	1397;"	d
SHT_MIPS_XLATE	include/geekos/elf.h	1395;"	d
SHT_MIPS_XLATE_DEBUG	include/geekos/elf.h	1396;"	d
SHT_MIPS_XLATE_OLD	include/geekos/elf.h	1399;"	d
SHT_NOBITS	include/geekos/elf.h	327;"	d
SHT_NOTE	include/geekos/elf.h	326;"	d
SHT_NULL	include/geekos/elf.h	319;"	d
SHT_NUM	include/geekos/elf.h	336;"	d
SHT_PARISC_DOC	include/geekos/elf.h	1729;"	d
SHT_PARISC_EXT	include/geekos/elf.h	1727;"	d
SHT_PARISC_UNWIND	include/geekos/elf.h	1728;"	d
SHT_PREINIT_ARRAY	include/geekos/elf.h	333;"	d
SHT_PROGBITS	include/geekos/elf.h	320;"	d
SHT_REL	include/geekos/elf.h	328;"	d
SHT_RELA	include/geekos/elf.h	323;"	d
SHT_SHLIB	include/geekos/elf.h	329;"	d
SHT_STRTAB	include/geekos/elf.h	322;"	d
SHT_SUNW_COMDAT	include/geekos/elf.h	344;"	d
SHT_SUNW_move	include/geekos/elf.h	343;"	d
SHT_SUNW_syminfo	include/geekos/elf.h	345;"	d
SHT_SYMTAB	include/geekos/elf.h	321;"	d
SHT_SYMTAB_SHNDX	include/geekos/elf.h	335;"	d
SIZE_T_RANK	src/common/fmtout.c	77;"	d	file:
SLAVE	src/geekos/irq.c	30;"	d	file:
STB_GLOBAL	include/geekos/elf.h	447;"	d
STB_GNU_UNIQUE	include/geekos/elf.h	451;"	d
STB_HIOS	include/geekos/elf.h	452;"	d
STB_HIPROC	include/geekos/elf.h	454;"	d
STB_LOCAL	include/geekos/elf.h	446;"	d
STB_LOOS	include/geekos/elf.h	450;"	d
STB_LOPROC	include/geekos/elf.h	453;"	d
STB_MIPS_SPLIT_COMMON	include/geekos/elf.h	1425;"	d
STB_NUM	include/geekos/elf.h	449;"	d
STB_WEAK	include/geekos/elf.h	448;"	d
STN_UNDEF	include/geekos/elf.h	477;"	d
STOP	include/geekos/kassert.h	69;"	d
STO_ALPHA_NOPV	include/geekos/elf.h	1909;"	d
STO_ALPHA_STD_GPLOAD	include/geekos/elf.h	1910;"	d
STO_MIPS_DEFAULT	include/geekos/elf.h	1417;"	d
STO_MIPS_HIDDEN	include/geekos/elf.h	1419;"	d
STO_MIPS_INTERNAL	include/geekos/elf.h	1418;"	d
STO_MIPS_PLT	include/geekos/elf.h	1421;"	d
STO_MIPS_PROTECTED	include/geekos/elf.h	1420;"	d
STO_MIPS_SC_ALIGN_UNUSED	include/geekos/elf.h	1422;"	d
STO_PPC64_LOCAL_BIT	include/geekos/elf.h	2234;"	d
STO_PPC64_LOCAL_MASK	include/geekos/elf.h	2235;"	d
STRING_H	include/libc/string.h	11;"	d
STT_ARM_16BIT	include/geekos/elf.h	2281;"	d
STT_ARM_TFUNC	include/geekos/elf.h	2280;"	d
STT_COMMON	include/geekos/elf.h	463;"	d
STT_FILE	include/geekos/elf.h	462;"	d
STT_FUNC	include/geekos/elf.h	460;"	d
STT_GNU_IFUNC	include/geekos/elf.h	467;"	d
STT_HIOS	include/geekos/elf.h	468;"	d
STT_HIPROC	include/geekos/elf.h	470;"	d
STT_HP_OPAQUE	include/geekos/elf.h	1741;"	d
STT_HP_STUB	include/geekos/elf.h	1742;"	d
STT_LOOS	include/geekos/elf.h	466;"	d
STT_LOPROC	include/geekos/elf.h	469;"	d
STT_NOTYPE	include/geekos/elf.h	458;"	d
STT_NUM	include/geekos/elf.h	465;"	d
STT_OBJECT	include/geekos/elf.h	459;"	d
STT_PARISC_MILLICODE	include/geekos/elf.h	1739;"	d
STT_SECTION	include/geekos/elf.h	461;"	d
STT_SPARC_REGISTER	include/geekos/elf.h	1194;"	d
STT_TLS	include/geekos/elf.h	464;"	d
STV_DEFAULT	include/geekos/elf.h	488;"	d
STV_HIDDEN	include/geekos/elf.h	490;"	d
STV_INTERNAL	include/geekos/elf.h	489;"	d
STV_PROTECTED	include/geekos/elf.h	491;"	d
SYMINFO_BT_LOWRESERVE	include/geekos/elf.h	419;"	d
SYMINFO_BT_PARENT	include/geekos/elf.h	418;"	d
SYMINFO_BT_SELF	include/geekos/elf.h	417;"	d
SYMINFO_CURRENT	include/geekos/elf.h	429;"	d
SYMINFO_FLG_COPY	include/geekos/elf.h	424;"	d
SYMINFO_FLG_DIRECT	include/geekos/elf.h	422;"	d
SYMINFO_FLG_LAZYLOAD	include/geekos/elf.h	425;"	d
SYMINFO_FLG_PASSTHRU	include/geekos/elf.h	423;"	d
SYMINFO_NONE	include/geekos/elf.h	428;"	d
SYMINFO_NUM	include/geekos/elf.h	430;"	d
SYM_PFX	build/Makefile	/^SYM_PFX            := _$/;"	m
SYSCALL_INT	include/geekos/defs.h	42;"	d
SYSTEM_NAME	build/Makefile	/^SYSTEM_NAME := $(shell uname -s)$/;"	m
S_ARG	src/geekos/screen.c	/^    S_ARG,		\/* Scanning a numeric argument *\/$/;"	e	enum:State	file:
S_CMD	src/geekos/screen.c	/^    S_CMD,		\/* Command *\/$/;"	e	enum:State	file:
S_ESC	src/geekos/screen.c	/^    S_ESC,		\/* Saw ESC character - begin output escape sequence *\/$/;"	e	enum:State	file:
S_ESC2	src/geekos/screen.c	/^    S_ESC2,		\/* Saw '[' character - continue output escape sequence *\/$/;"	e	enum:State	file:
S_NORMAL	src/geekos/screen.c	/^    S_NORMAL,		\/* Normal state - output is echoed verbatim *\/$/;"	e	enum:State	file:
Save_Cursor	src/geekos/screen.c	/^static void Save_Cursor(void)$/;"	f	file:
Schedule	src/geekos/kthread.c	/^void Schedule(void)$/;"	f
Scroll	src/geekos/screen.c	/^static void Scroll(void)$/;"	f	file:
Seek	include/geekos/vfs.h	/^    int (*Seek)(struct File *file, ulong_t pos);$/;"	m	struct:File_Ops
Seek	src/geekos/vfs.c	/^int Seek(struct File *file, ulong_t len)$/;"	f
Segment_Descriptor	include/geekos/segment.h	/^struct Segment_Descriptor {$/;"	s
Selector	include/geekos/segment.h	/^static __inline__ ushort_t Selector(int rpl, bool segmentIsInGDT, int index)$/;"	f
Sense_Interrupt_Status	src/geekos/floppy.c	/^static void Sense_Interrupt_Status(uchar_t* st0, uchar_t *pcn)$/;"	f	file:
Set_Bit	src/geekos/bitset.c	/^void Set_Bit(void *bitSet, uint_t bitPos)$/;"	f
Set_Current_Attr	src/geekos/screen.c	/^void Set_Current_Attr(uchar_t attrib)$/;"	f
Set_IRQ_Mask	src/geekos/irq.c	/^void Set_IRQ_Mask(ushort_t mask)$/;"	f
Set_Kernel_Stack_Pointer	src/geekos/tss.c	/^void Set_Kernel_Stack_Pointer(ulong_t esp0)$/;"	f
Set_Size_And_Base_Bytes	src/geekos/segment.c	/^static __inline__ void Set_Size_And_Base_Bytes($/;"	f	file:
Set_Size_And_Base_Pages	src/geekos/segment.c	/^static __inline__ void Set_Size_And_Base_Pages($/;"	f	file:
Setup_DMA	src/geekos/dma.c	/^void Setup_DMA(enum DMA_Direction direction, int chan, void *addr_, ulong_t size)$/;"	f
Setup_Drive_Parameters	src/geekos/floppy.c	/^static void Setup_Drive_Parameters(int drive, int type)$/;"	f	file:
Setup_Kernel_Thread	src/geekos/kthread.c	/^static void Setup_Kernel_Thread($/;"	f	file:
Shutdown_Thread	src/geekos/kthread.c	/^static void Shutdown_Thread(void)$/;"	f	file:
Signature	src/geekos/bootsect.asm	/^Signature   dw 0xAA55   ; BIOS controls this to ensure this is a boot sector$/;"	d
Signature	src/geekos/fd_boot.asm	/^Signature   dw 0xAA55   ; BIOS controls this to ensure this is a boot sector$/;"	d
SizeQ	src/geekos/bget.c	564;"	d	file:
SizeQuant	src/geekos/bget.c	413;"	d	file:
Spawn_Init_Process	src/geekos/main.c	/^static void Spawn_Init_Process(void)$/;"	f	file:
Spawn_Program	src/geekos/lprog.c	/^static int Spawn_Program(char *exeFileData, struct Exe_Format *exeFormat)$/;"	f	file:
Spawner	src/geekos/lprog.c	/^void Spawner( unsigned long arg )$/;"	f
Spin	src/geekos/timer.c	/^static void Spin(int count)$/;"	f	file:
Start_Arg	src/geekos/screen.c	/^static void Start_Arg(int argNum)$/;"	f	file:
Start_Escape	src/geekos/screen.c	/^static void Start_Escape(void)$/;"	f	file:
Start_Kernel_Thread	src/geekos/kthread.c	/^struct Kernel_Thread* Start_Kernel_Thread($/;"	f
Start_Motor	src/geekos/floppy.c	/^static void Start_Motor(int drive)$/;"	f	file:
Stat	include/geekos/vfs.h	/^    int (*Stat)(struct Mount_Point *mountPoint, const char *path, struct VFS_File_Stat *stat);$/;"	m	struct:Mount_Point_Ops
Stat	src/geekos/vfs.c	/^int Stat(const char *path, struct VFS_File_Stat *stat)$/;"	f
State	src/geekos/screen.c	/^enum State {$/;"	g	file:
Stop_Motor	src/geekos/floppy.c	/^static void Stop_Motor(int drive)$/;"	f	file:
String_Emit	src/common/string.c	/^static void String_Emit(struct Output_Sink *o_, int ch)$/;"	f	file:
String_Finish	src/common/string.c	/^static void String_Finish(struct Output_Sink *o_)$/;"	f	file:
String_Output_Sink	src/common/string.c	/^struct String_Output_Sink {$/;"	s	file:
Switch_To_Thread	src/geekos/lowlevel.asm	/^Switch_To_Thread:$/;"	l
Sync	include/geekos/vfs.h	/^    int (*Sync)(struct Mount_Point *mountPoint);$/;"	m	struct:Mount_Point_Ops
Sync	src/geekos/vfs.c	/^int Sync(void)$/;"	f
TABWIDTH	include/geekos/screen.h	29;"	d
TARGET_AR	build/Makefile	/^TARGET_AR := $(TARGET_CC_PREFIX)ar$/;"	m
TARGET_CC	build/Makefile	/^TARGET_CC := $(TARGET_CC_PREFIX)gcc -m32$/;"	m
TARGET_LD	build/Makefile	/^TARGET_LD := $(TARGET_CC_PREFIX)ld -m elf_i386$/;"	m
TARGET_NM	build/Makefile	/^TARGET_NM := $(TARGET_CC_PREFIX)nm$/;"	m
TARGET_OBJCOPY	build/Makefile	/^TARGET_OBJCOPY := $(TARGET_CC_PREFIX)objcopy$/;"	m
TARGET_RANLIB	build/Makefile	/^TARGET_RANLIB := $(TARGET_CC_PREFIX)ranlib$/;"	m
TICKS_PER_SEC	src/geekos/timer.c	49;"	d	file:
TIMER_IRQ	include/geekos/timer.h	13;"	d
TODO	include/geekos/kassert.h	33;"	d
TODO	include/geekos/kassert.h	59;"	d
TOLOWER	include/geekos/ktypes.h	39;"	d
TOUPPER	include/geekos/ktypes.h	40;"	d
TSS	include/geekos/tss.h	/^struct TSS {$/;"	s
Thread_Start_Func	include/geekos/kthread.h	/^typedef void (*Thread_Start_Func)(ulong_t arg);$/;"	t
Timer_Calibrate	src/geekos/timer.c	/^static void Timer_Calibrate(struct Interrupt_State* state)$/;"	f	file:
Timer_Interrupt_Handler	src/geekos/timer.c	/^static void Timer_Interrupt_Handler(struct Interrupt_State* state)$/;"	f	file:
Tlocal_Create	src/geekos/kthread.c	/^int Tlocal_Create(tlocal_key_t *key, tlocal_destructor_t destructor) $/;"	f
Tlocal_Exit	src/geekos/kthread.c	/^static void Tlocal_Exit(struct Kernel_Thread* curr) {$/;"	f	file:
Tlocal_Get	src/geekos/kthread.c	/^void *Tlocal_Get(tlocal_key_t k) $/;"	f
Tlocal_Put	src/geekos/kthread.c	/^void Tlocal_Put(tlocal_key_t k, const void *v) $/;"	f
Trampoline	src/geekos/lspawn.asm	/^Trampoline:$/;"	l
USER_BASE_ADDR	build/Makefile	/^USER_BASE_ADDR := 0x1000$/;"	m
USER_C_SRCS	build/Makefile	/^USER_C_SRCS := \\$/;"	m
USER_ENTRY	build/Makefile	/^USER_ENTRY = $(SYM_PFX)_Entry$/;"	m
USER_PRIVILEGE	include/geekos/defs.h	36;"	d
USER_PROGS	build/Makefile	/^USER_PROGS := $(USER_C_SRCS:%.c=user\/%.exe)$/;"	m
US_PER_TICK	src/geekos/timer.c	192;"	d	file:
Unmask_DMA	src/geekos/dma.c	/^void Unmask_DMA(int chan)$/;"	f
Unpack_Path	src/geekos/vfs.c	/^static bool Unpack_Path(const char *path, char *prefix, const char **pSuffix)$/;"	f	file:
Update_Attributes	src/geekos/screen.c	/^static void Update_Attributes(void)$/;"	f	file:
Update_Cursor	src/geekos/screen.c	/^static void Update_Cursor(void)$/;"	f	file:
User_Interrupt_State	include/geekos/int.h	/^struct User_Interrupt_State {$/;"	s
V	src/geekos/bget.c	566;"	d	file:
VALID_CHANNEL	src/geekos/dma.c	53;"	d	file:
VALID_MEM	src/geekos/dma.c	60;"	d	file:
VER_DEF_CURRENT	include/geekos/elf.h	855;"	d
VER_DEF_NONE	include/geekos/elf.h	854;"	d
VER_DEF_NUM	include/geekos/elf.h	856;"	d
VER_FLG_BASE	include/geekos/elf.h	859;"	d
VER_FLG_WEAK	include/geekos/elf.h	860;"	d
VER_FLG_WEAK	include/geekos/elf.h	939;"	d
VER_NDX_ELIMINATE	include/geekos/elf.h	866;"	d
VER_NDX_GLOBAL	include/geekos/elf.h	864;"	d
VER_NDX_LOCAL	include/geekos/elf.h	863;"	d
VER_NDX_LORESERVE	include/geekos/elf.h	865;"	d
VER_NEED_CURRENT	include/geekos/elf.h	912;"	d
VER_NEED_NONE	include/geekos/elf.h	911;"	d
VER_NEED_NUM	include/geekos/elf.h	913;"	d
VFS_ACL_Entry	include/geekos/fileio.h	/^struct VFS_ACL_Entry {$/;"	s
VFS_Dir_Entry	include/geekos/fileio.h	/^struct VFS_Dir_Entry {$/;"	s
VFS_File_Stat	include/geekos/fileio.h	/^struct VFS_File_Stat {$/;"	s
VFS_MAX_ACL_ENTRIES	include/geekos/fileio.h	24;"	d
VFS_MAX_FS_NAME_LEN	include/geekos/fileio.h	21;"	d
VFS_MAX_PATH_LEN	include/geekos/fileio.h	18;"	d
VFS_Mount_Request	include/geekos/fileio.h	/^struct VFS_Mount_Request {$/;"	s
VFS_NO_MORE_DIR_ENTRIES	include/geekos/vfs.h	25;"	d
VIDMEM	include/geekos/screen.h	38;"	d
VIDMEM_ADDR	include/geekos/screen.h	37;"	d
VIDSEG	src/geekos/defs.asm	/^VIDSEG equ 0xb800$/;"	d
VPATH	build/Makefile	/^VPATH := $(PROJECT_ROOT)\/src$/;"	m
Wait	src/geekos/kthread.c	/^void Wait(struct Thread_Queue* waitQueue)$/;"	f
Wait_For_Interrupt	src/geekos/floppy.c	/^static void Wait_For_Interrupt(void)$/;"	f	file:
Wait_For_Key	src/geekos/keyboard.c	/^Keycode Wait_For_Key(void)$/;"	f
Wait_For_MRQ	src/geekos/floppy.c	/^static void Wait_For_MRQ(uchar_t readyValue)$/;"	f	file:
Wake_Up	src/geekos/kthread.c	/^void Wake_Up(struct Thread_Queue* waitQueue)$/;"	f
Wake_Up_One	src/geekos/kthread.c	/^void Wake_Up_One(struct Thread_Queue* waitQueue)$/;"	f
Write	include/geekos/vfs.h	/^    int (*Write)(struct File *file, void *buf, ulong_t numBytes);$/;"	m	struct:File_Ops
Write	src/geekos/vfs.c	/^int Write(struct File *file, void *buf, ulong_t len)$/;"	f
Yield	src/geekos/kthread.c	/^void Yield(void)$/;"	f
ZEROFILE	build/Makefile	/^ZEROFILE := $(PERL) $(PROJECT_ROOT)\/scripts\/zerofile$/;"	m
_	include/geekos/bget.h	23;"	d
_	include/geekos/bget.h	25;"	d
_ELF_H	include/geekos/elf.h	20;"	d
_Entry	src/libc/entry.c	/^void _Entry(void)$/;"	f
_KEYPAD	include/geekos/keyboard.h	99;"	d
_S	include/geekos/symbol.h	15;"	d
_S	include/geekos/symbol.h	17;"	d
_SPECIAL	include/geekos/keyboard.h	69;"	d
__Disable_Interrupts	include/geekos/int.h	/^static __inline__ void __Disable_Interrupts(void)$/;"	f
__Enable_Interrupts	include/geekos/int.h	/^static __inline__ void __Enable_Interrupts(void)$/;"	f
__strerrTable	build/libc/errno.c	/^const char *__strerrTable[] = {$/;"	v
__strerrTableSize	build/libc/errno.c	/^const int __strerrTableSize = sizeof(__strerrTable) \/ sizeof(const char *);$/;"	v
a_type	include/geekos/elf.h	/^  uint32_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon30
a_type	include/geekos/elf.h	/^  uint64_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon32
a_un	include/geekos/elf.h	/^    } a_un;$/;"	m	struct:__anon30	typeref:union:__anon30::__anon31
a_un	include/geekos/elf.h	/^    } a_un;$/;"	m	struct:__anon32	typeref:union:__anon32::__anon33
a_val	include/geekos/elf.h	/^      uint32_t a_val;		\/* Integer value *\/$/;"	m	union:__anon30::__anon31
a_val	include/geekos/elf.h	/^      uint64_t a_val;		\/* Integer value *\/$/;"	m	union:__anon32::__anon33
acls	include/geekos/fileio.h	/^    struct VFS_ACL_Entry acls[VFS_MAX_ACL_ENTRIES];$/;"	m	struct:VFS_File_Stat	typeref:struct:VFS_File_Stat::VFS_ACL_Entry
acqfcn	src/geekos/bget.c	/^static void *(*acqfcn) _((bufsize size)) = NULL;$/;"	v	file:
after_move	src/geekos/bootsect.asm	/^after_move:$/;"	l
after_move	src/geekos/fd_boot.asm	/^after_move:$/;"	l
alive	include/geekos/kthread.h	/^    bool alive;$/;"	m	struct:Kernel_Thread
argList	src/geekos/screen.c	/^    int argList[MAXARGS];$/;"	m	struct:Console_State	file:
argc	include/geekos/argblock.h	/^    int argc;$/;"	m	struct:Argument_Block
argv	include/geekos/argblock.h	/^    char **argv;$/;"	m	struct:Argument_Block
assert	src/geekos/bget.c	459;"	d	file:
atoi	src/common/string.c	/^int atoi(const char *buf) $/;"	f
avail	include/geekos/segment.h	/^    uint_t avail       : 1  PACKED ;$/;"	m	struct:Segment_Descriptor
baseHigh	include/geekos/segment.h	/^    uint_t baseHigh    : 8 PACKED  ;$/;"	m	struct:Segment_Descriptor
baseLow	include/geekos/segment.h	/^    uint_t baseLow     : 24 PACKED ;$/;"	m	struct:Segment_Descriptor
bchain	src/geekos/bget.c	/^static char *bchain = NULL;	      \/* Our private buffer chain *\/$/;"	v	file:
bcompact	src/geekos/bget.c	/^static int bcompact(bsize, seq)$/;"	f	file:
bdhead	src/geekos/bget.c	/^struct bdhead {$/;"	s	file:
bectl	src/geekos/bget.c	/^void bectl(compact, acquire, release, pool_incr)$/;"	f
bexpand	src/geekos/bget.c	/^static void *bexpand(size)$/;"	f	file:
bfhead	src/geekos/bget.c	/^struct bfhead {$/;"	s	file:
bget	src/geekos/bget.c	/^void *bget(requested_size)$/;"	f
bgetr	src/geekos/bget.c	/^void *bgetr(buf, size)$/;"	f
bgetz	src/geekos/bget.c	/^void *bgetz(size)$/;"	f
bh	src/geekos/bget.c	/^    struct bhead bh;		      \/* Common allocated\/free header *\/$/;"	m	struct:bfhead	typeref:struct:bfhead::bhead	file:
bh	src/geekos/bget.c	/^    struct bhead bh;		      \/* Common header *\/$/;"	m	struct:bdhead	typeref:struct:bdhead::bhead	file:
bhead	src/geekos/bget.c	/^struct bhead {$/;"	s	file:
blimit	src/geekos/bget.c	/^static bufsize blimit(bs)$/;"	f	file:
blink	src/geekos/bget.c	/^    struct bfhead *blink;	      \/* Backward link *\/$/;"	m	struct:qlinks	typeref:struct:qlinks::bfhead	file:
blockNum	include/geekos/blockdev.h	/^    int blockNum;$/;"	m	struct:Block_Request
bootInfoSize	include/geekos/bootinfo.h	/^    int bootInfoSize;	 \/* size of this struct; for versioning *\/$/;"	m	struct:Boot_Info
bootSector	include/geekos/pfat.h	/^} bootSector;$/;"	t	typeref:struct:__anon2
bp	src/geekos/bget.c	/^static char *bp = NULL; 	      \/* Our initial buffer pool *\/$/;"	v	file:
bpool	src/geekos/bget.c	/^void bpool(buf, len)$/;"	f
bpoold	src/geekos/bget.c	/^void bpoold(buf, dumpalloc, dumpfree)$/;"	f
bpoolv	src/geekos/bget.c	/^int bpoolv(buf)$/;"	f
brel	src/geekos/bget.c	/^void brel(buf)$/;"	f
bshrink	src/geekos/bget.c	/^static void bshrink(buf)$/;"	f	file:
bsize	src/geekos/bget.c	/^    bufsize bsize;		      \/* Buffer size: positive if free,$/;"	m	struct:bhead	file:
bstats	src/geekos/bget.c	/^void bstats(curalloc, totfree, maxfree, nget, nrel)$/;"	f
bstatse	src/geekos/bget.c	/^void bstatse(pool_incr, npool, npget, nprel, ndget, ndrel)$/;"	f
buf	include/geekos/blockdev.h	/^    void *buf;$/;"	m	struct:Block_Request
bufdump	src/geekos/bget.c	/^void bufdump(buf)$/;"	f
bufsize	include/geekos/bget.h	/^typedef long bufsize;$/;"	t
col	src/geekos/screen.c	/^    int row, col;$/;"	m	struct:Console_State	file:
compfcn	src/geekos/bget.c	/^static int (*compfcn) _((bufsize sizereq, int sequence)) = NULL;$/;"	v	file:
cr3	include/geekos/tss.h	/^    ulong_t cr3;$/;"	m	struct:TSS
crc32	src/geekos/crc32.c	/^ulong_t crc32(ulong_t crc, char const *buf, size_t len) {$/;"	f
crc_table	src/geekos/crc32.c	/^static ulong_t crc_table[256];$/;"	v	file:
cs	include/geekos/int.h	/^    uint_t cs;$/;"	m	struct:Interrupt_State
cs	include/geekos/tss.h	/^    ushort_t cs;$/;"	m	struct:TSS
currentAttr	src/geekos/screen.c	/^    uchar_t currentAttr;$/;"	m	struct:Console_State	file:
cylinders	src/geekos/floppy.c	/^    int cylinders;$/;"	m	struct:Floppy_Parameters	file:
d_ptr	include/geekos/elf.h	/^      Elf32_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon18::__anon19
d_ptr	include/geekos/elf.h	/^      Elf64_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon20::__anon21
d_tag	include/geekos/elf.h	/^  Elf32_Sword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon18
d_tag	include/geekos/elf.h	/^  Elf64_Sxword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon20
d_un	include/geekos/elf.h	/^    } d_un;$/;"	m	struct:__anon18	typeref:union:__anon18::__anon19
d_un	include/geekos/elf.h	/^    } d_un;$/;"	m	struct:__anon20	typeref:union:__anon20::__anon21
d_val	include/geekos/elf.h	/^      Elf32_Word d_val;			\/* Integer value *\/$/;"	m	union:__anon18::__anon19
d_val	include/geekos/elf.h	/^      Elf64_Xword d_val;		\/* Integer value *\/$/;"	m	union:__anon20::__anon21
date	include/geekos/pfat.h	/^    short date;$/;"	m	struct:__anon3
dbBit	include/geekos/segment.h	/^    uint_t dbBit       : 1  PACKED ;$/;"	m	struct:Segment_Descriptor
dead	src/geekos/bootsect.asm	/^dead:$/;"	l
debugPFAT	src/geekos/pfat.c	/^int debugPFAT = 0;$/;"	v
debugTrap	include/geekos/tss.h	/^    uint_t debugTrap : 1;$/;"	m	struct:TSS
debugVFS	src/geekos/vfs.c	/^int debugVFS = 0;$/;"	v
dev	include/geekos/blockdev.h	/^    struct Block_Device *dev;$/;"	m	struct:Block_Request	typeref:struct:Block_Request::Block_Device
dev	include/geekos/vfs.h	/^    struct Block_Device *dev;	 \/* Block device filesystem is mounted on. *\/$/;"	m	struct:Mount_Point	typeref:struct:Mount_Point::Block_Device
dev	include/geekos/vfs.h	/^    struct Block_Device *dev;	 \/* Block device for paging file. *\/$/;"	m	struct:Paging_Device	typeref:struct:Paging_Device::Block_Device
devname	include/geekos/fileio.h	/^    char devname[BLOCKDEV_MAX_NAME_LEN+1];\/* Name of block device: e.g., "ide1". *\/$/;"	m	struct:VFS_Mount_Request
directory	include/geekos/pfat.h	/^    char directory:1;$/;"	m	struct:__anon3
directoryEntry	include/geekos/pfat.h	/^} directoryEntry;$/;"	t	typeref:struct:__anon3
dpl	include/geekos/idt.h	/^    unsigned dpl : 2;$/;"	m	struct:Interrupt_Gate
dpl	include/geekos/segment.h	/^    uint_t dpl         : 2  PACKED ;$/;"	m	struct:Segment_Descriptor
driverData	include/geekos/blockdev.h	/^    void *driverData;$/;"	m	struct:Block_Device
drives	src/geekos/ide.c	/^static ideDisk drives[IDE_MAX_DRIVES];$/;"	v	file:
ds	include/geekos/int.h	/^    uint_t ds;$/;"	m	struct:Interrupt_State
ds	include/geekos/tss.h	/^    ushort_t ds;$/;"	m	struct:TSS
dumpAlloc	src/geekos/bget.c	1283;"	d	file:
dumpFree	src/geekos/bget.c	1284;"	d	file:
e_ehsize	include/geekos/elf.h	/^  Elf32_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon4
e_ehsize	include/geekos/elf.h	/^  Elf64_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon5
e_entry	include/geekos/elf.h	/^  Elf32_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon4
e_entry	include/geekos/elf.h	/^  Elf64_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon5
e_flags	include/geekos/elf.h	/^  Elf32_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon4
e_flags	include/geekos/elf.h	/^  Elf64_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon5
e_ident	include/geekos/elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon4
e_ident	include/geekos/elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon5
e_machine	include/geekos/elf.h	/^  Elf32_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon4
e_machine	include/geekos/elf.h	/^  Elf64_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon5
e_phentsize	include/geekos/elf.h	/^  Elf32_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon4
e_phentsize	include/geekos/elf.h	/^  Elf64_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon5
e_phnum	include/geekos/elf.h	/^  Elf32_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon4
e_phnum	include/geekos/elf.h	/^  Elf64_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon5
e_phoff	include/geekos/elf.h	/^  Elf32_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon4
e_phoff	include/geekos/elf.h	/^  Elf64_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon5
e_shentsize	include/geekos/elf.h	/^  Elf32_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon4
e_shentsize	include/geekos/elf.h	/^  Elf64_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon5
e_shnum	include/geekos/elf.h	/^  Elf32_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon4
e_shnum	include/geekos/elf.h	/^  Elf64_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon5
e_shoff	include/geekos/elf.h	/^  Elf32_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon4
e_shoff	include/geekos/elf.h	/^  Elf64_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon5
e_shstrndx	include/geekos/elf.h	/^  Elf32_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon4
e_shstrndx	include/geekos/elf.h	/^  Elf64_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon5
e_type	include/geekos/elf.h	/^  Elf32_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon4
e_type	include/geekos/elf.h	/^  Elf64_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon5
e_version	include/geekos/elf.h	/^  Elf32_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon4
e_version	include/geekos/elf.h	/^  Elf64_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon5
eax	include/geekos/int.h	/^    uint_t eax;$/;"	m	struct:Interrupt_State
eax	include/geekos/tss.h	/^    ulong_t eax;$/;"	m	struct:TSS
ebp	include/geekos/int.h	/^    uint_t ebp;$/;"	m	struct:Interrupt_State
ebp	include/geekos/tss.h	/^    ulong_t ebp;$/;"	m	struct:TSS
ebx	include/geekos/int.h	/^    uint_t ebx;$/;"	m	struct:Interrupt_State
ebx	include/geekos/tss.h	/^    ulong_t ebx;$/;"	m	struct:TSS
ecx	include/geekos/int.h	/^    uint_t ecx;$/;"	m	struct:Interrupt_State
ecx	include/geekos/tss.h	/^    ulong_t ecx;$/;"	m	struct:TSS
edi	include/geekos/int.h	/^    uint_t edi;$/;"	m	struct:Interrupt_State
edi	include/geekos/tss.h	/^    ulong_t edi;$/;"	m	struct:TSS
edx	include/geekos/int.h	/^    uint_t edx;$/;"	m	struct:Interrupt_State
edx	include/geekos/tss.h	/^    ulong_t edx;$/;"	m	struct:TSS
eflags	include/geekos/int.h	/^    uint_t eflags;$/;"	m	struct:Interrupt_State
eflags	include/geekos/tss.h	/^    ulong_t eflags;$/;"	m	struct:TSS
eip	include/geekos/int.h	/^    uint_t eip;$/;"	m	struct:Interrupt_State
eip	include/geekos/tss.h	/^    ulong_t eip;$/;"	m	struct:TSS
endPos	include/geekos/vfs.h	/^    ulong_t endPos;		 \/* End position (i.e., the length of the file). *\/$/;"	m	struct:File
entry	src/geekos/pfat.c	/^    directoryEntry *entry;		 \/* Directory entry of the file *\/$/;"	m	struct:PFAT_File	file:
errorCode	include/geekos/blockdev.h	/^    volatile int errorCode;$/;"	m	struct:Block_Request
errorCode	include/geekos/int.h	/^    uint_t errorCode;$/;"	m	struct:Interrupt_State
es	include/geekos/int.h	/^    uint_t es;$/;"	m	struct:Interrupt_State
es	include/geekos/tss.h	/^    ushort_t es;$/;"	m	struct:TSS
esi	include/geekos/int.h	/^    uint_t esi;$/;"	m	struct:Interrupt_State
esi	include/geekos/tss.h	/^    ulong_t esi;$/;"	m	struct:TSS
esp	include/geekos/kthread.h	/^    ulong_t esp;			 \/* offset 0 *\/$/;"	m	struct:Kernel_Thread
esp	include/geekos/tss.h	/^    ulong_t esp;$/;"	m	struct:TSS
esp0	include/geekos/tss.h	/^    ulong_t esp0;$/;"	m	struct:TSS
esp1	include/geekos/tss.h	/^    ulong_t esp1;$/;"	m	struct:TSS
esp2	include/geekos/tss.h	/^    ulong_t esp2;$/;"	m	struct:TSS
espUser	include/geekos/int.h	/^    uint_t espUser;$/;"	m	struct:User_Interrupt_State
exitCode	include/geekos/kthread.h	/^    int exitCode;$/;"	m	struct:Kernel_Thread
exp_incr	src/geekos/bget.c	/^static bufsize exp_incr = 0;	      \/* Expansion block size *\/$/;"	v	file:
fat	src/geekos/pfat.c	/^    int *fat;$/;"	m	struct:PFAT_Instance	file:
fileAllocationLength	include/geekos/pfat.h	/^    int fileAllocationLength;	\/* length of allocation table *\/$/;"	m	struct:__anon2
fileAllocationOffset	include/geekos/pfat.h	/^    int fileAllocationOffset;	\/* where is the file allocation table *\/$/;"	m	struct:__anon2
fileDataCache	src/geekos/pfat.c	/^    char *fileDataCache;		 \/* File data cache *\/$/;"	m	struct:PFAT_File	file:
fileList	src/geekos/pfat.c	/^    struct PFAT_File_List fileList;$/;"	m	struct:PFAT_Instance	typeref:struct:PFAT_Instance::PFAT_File_List	file:
fileName	include/geekos/pfat.h	/^    char fileName[8+4];$/;"	m	struct:__anon3
fileName	include/geekos/vfs.h	/^    char *fileName;		 \/* Name of paging file. *\/$/;"	m	struct:Paging_Device
filePos	include/geekos/vfs.h	/^    ulong_t filePos;		 \/* Current position in the file. *\/$/;"	m	struct:File
fileSize	include/geekos/pfat.h	/^    int fileSize;$/;"	m	struct:__anon3
firstBlock	include/geekos/pfat.h	/^    int firstBlock;$/;"	m	struct:__anon3
flags	include/geekos/mem.h	/^    unsigned flags;			 \/* Flags indicating state of page *\/$/;"	m	struct:Page
flags	src/common/fmtout.c	/^enum flags {$/;"	g	file:
flink	src/geekos/bget.c	/^    struct bfhead *flink;	      \/* Forward link *\/$/;"	m	struct:qlinks	typeref:struct:qlinks::bfhead	file:
format_int	src/common/fmtout.c	/^format_int(struct Output_Sink *q, uintmax_t val, enum flags flags,$/;"	f	file:
freelist	src/geekos/bget.c	/^static struct bfhead freelist = {     \/* List of free buffers *\/$/;"	v	typeref:struct:bfhead	file:
fs	include/geekos/int.h	/^    uint_t fs;$/;"	m	struct:Interrupt_State
fs	include/geekos/tss.h	/^    ushort_t fs;$/;"	m	struct:TSS
fsData	include/geekos/vfs.h	/^    void *fsData;		 \/* For use by the filesystem implementation. *\/$/;"	m	struct:File
fsData	include/geekos/vfs.h	/^    void *fsData;		 \/* For use by the filesystem implementation. *\/$/;"	m	struct:Mount_Point
fsName	src/geekos/vfs.c	/^    char fsName[VFS_MAX_FS_NAME_LEN + 1];$/;"	m	struct:Filesystem	file:
fsinfo	src/geekos/pfat.c	/^    bootSector fsinfo;$/;"	m	struct:PFAT_Instance	file:
fstype	include/geekos/fileio.h	/^    char fstype[VFS_MAX_FS_NAME_LEN+1];	\/* Filesystem type: e.g., "gosfs". *\/$/;"	m	struct:VFS_Mount_Request
g_Quantum	src/geekos/timer.c	/^int g_Quantum = DEFAULT_MAX_TICKS;$/;"	v
g_currentThread	src/geekos/kthread.c	/^struct Kernel_Thread* g_currentThread;$/;"	v	typeref:struct:Kernel_Thread
g_entryPointTableEnd	src/geekos/lowlevel.asm	/^g_entryPointTableEnd:$/;"	l
g_entryPointTableStart	src/geekos/lowlevel.asm	/^g_entryPointTableStart:$/;"	l
g_freePageCount	src/geekos/mem.c	/^uint_t g_freePageCount = 0;$/;"	v
g_handlerSizeErr	src/geekos/lowlevel.asm	/^g_handlerSizeErr: dd (After_Err - Before_Err)$/;"	d
g_handlerSizeNoErr	src/geekos/lowlevel.asm	/^g_handlerSizeNoErr: dd (After_No_Err - Before_No_Err)$/;"	d
g_interruptTable	src/geekos/idt.c	/^Interrupt_Handler g_interruptTable[ NUM_IDT_ENTRIES ];$/;"	v
g_needReschedule	src/geekos/kthread.c	/^int g_needReschedule;$/;"	v
g_numTicks	src/geekos/timer.c	/^volatile ulong_t g_numTicks;$/;"	v
g_pageList	src/geekos/mem.c	/^struct Page* g_pageList;$/;"	v	typeref:struct:Page
g_preemptionDisabled	src/geekos/kthread.c	/^volatile int g_preemptionDisabled;$/;"	v
gapLengthCode	src/geekos/floppy.c	/^    int gapLengthCode;$/;"	m	struct:Floppy_Parameters	file:
granularity	include/geekos/segment.h	/^    uint_t granularity : 1  PACKED ;$/;"	m	struct:Segment_Descriptor
gs	include/geekos/int.h	/^    uint_t gs;$/;"	m	struct:Interrupt_State
gs	include/geekos/tss.h	/^    ushort_t gs;$/;"	m	struct:TSS
gt_bytes	include/geekos/elf.h	/^      Elf32_Word gt_bytes;		\/* This many bytes would be used.  *\/$/;"	m	struct:__anon38::__anon40
gt_current_g_value	include/geekos/elf.h	/^      Elf32_Word gt_current_g_value;	\/* -G value used for compilation.  *\/$/;"	m	struct:__anon38::__anon39
gt_entry	include/geekos/elf.h	/^    } gt_entry;				\/* Subsequent entries in section.  *\/$/;"	m	union:__anon38	typeref:struct:__anon38::__anon40
gt_g_value	include/geekos/elf.h	/^      Elf32_Word gt_g_value;		\/* If this value were used for -G.  *\/$/;"	m	struct:__anon38::__anon40
gt_header	include/geekos/elf.h	/^    } gt_header;			\/* First entry in section.  *\/$/;"	m	union:__anon38	typeref:struct:__anon38::__anon39
gt_unused	include/geekos/elf.h	/^      Elf32_Word gt_unused;		\/* Not used.  *\/$/;"	m	struct:__anon38::__anon39
head	src/geekos/bootsect.asm	/^head: dw 0$/;"	d
head	src/geekos/fd_boot.asm	/^head: dw 0$/;"	d
heads	src/geekos/floppy.c	/^    int heads;$/;"	m	struct:Floppy_Parameters	file:
hidden	include/geekos/pfat.h	/^    char hidden:1;$/;"	m	struct:__anon3
hwp_flags1	include/geekos/elf.h	/^  Elf32_Word hwp_flags1;	\/* Extra flags.  *\/$/;"	m	struct:__anon43
hwp_flags2	include/geekos/elf.h	/^  Elf32_Word hwp_flags2;	\/* Extra flags.  *\/$/;"	m	struct:__anon43
ideDebug	src/geekos/ide.c	/^int ideDebug = 0;$/;"	v
ideDisk	src/geekos/ide.c	/^} ideDisk;$/;"	t	typeref:struct:__anon47	file:
ig	include/geekos/idt.h	/^    struct Interrupt_Gate ig;$/;"	m	union:IDT_Descriptor	typeref:struct:IDT_Descriptor::Interrupt_Gate
inUse	include/geekos/blockdev.h	/^    bool inUse;$/;"	m	struct:Block_Device
info	include/geekos/elf.h	/^  Elf32_Word info;		\/* Kind-specific information.  *\/$/;"	m	struct:__anon42
intNum	include/geekos/int.h	/^    uint_t intNum;$/;"	m	struct:Interrupt_State
intmax_t	src/common/fmtout.c	/^typedef long intmax_t;$/;"	t	file:
ioMapBase	include/geekos/tss.h	/^    ushort_t ioMapBase;$/;"	m	struct:TSS
isDirectory	include/geekos/fileio.h	/^    int isDirectory:1;$/;"	m	struct:VFS_File_Stat
isSetuid	include/geekos/fileio.h	/^    int isSetuid:1;$/;"	m	struct:VFS_File_Stat
joinQueue	include/geekos/kthread.h	/^    struct Thread_Queue joinQueue;$/;"	m	struct:Kernel_Thread	typeref:struct:Kernel_Thread::Thread_Queue
kernelSize	include/geekos/pfat.h	/^    short kernelSize;		\/* size in sectors of kernel to run *\/$/;"	m	struct:__anon2
kernelSize	src/geekos/bootsect.asm	/^kernelSize:$/;"	l
kernelSize	src/geekos/fd_boot.asm	/^kernelSize:$/;"	l
kernelStart	include/geekos/pfat.h	/^    short kernelStart;		\/* first sector of kernel to run *\/$/;"	m	struct:__anon2
kernelStart	src/geekos/bootsect.asm	/^kernelStart:$/;"	l
kernelStart	src/geekos/fd_boot.asm	/^kernelStart:$/;"	l
kind	include/geekos/elf.h	/^  unsigned char kind;		\/* Determines interpretation of the$/;"	m	struct:__anon42
l_checksum	include/geekos/elf.h	/^  Elf32_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon44
l_checksum	include/geekos/elf.h	/^  Elf64_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon45
l_flags	include/geekos/elf.h	/^  Elf32_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon44
l_flags	include/geekos/elf.h	/^  Elf64_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon45
l_name	include/geekos/elf.h	/^  Elf32_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon44
l_name	include/geekos/elf.h	/^  Elf64_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon45
l_time_stamp	include/geekos/elf.h	/^  Elf32_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon44
l_time_stamp	include/geekos/elf.h	/^  Elf64_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon45
l_version	include/geekos/elf.h	/^  Elf32_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon44
l_version	include/geekos/elf.h	/^  Elf64_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon45
ldt	include/geekos/tss.h	/^    ushort_t ldt;$/;"	m	struct:TSS
link	include/geekos/tss.h	/^    ushort_t link;$/;"	m	struct:TSS
load_kernel	src/geekos/bootsect.asm	/^load_kernel:$/;"	l
load_kernel	src/geekos/fd_boot.asm	/^load_kernel:$/;"	l
load_setup	src/geekos/bootsect.asm	/^load_setup:$/;"	l
load_setup	src/geekos/fd_boot.asm	/^load_setup:$/;"	l
lock	src/geekos/pfat.c	/^    struct Mutex lock;			 \/* Synchronize concurrent accesses *\/$/;"	m	struct:PFAT_File	typeref:struct:PFAT_File::Mutex	file:
lock	src/geekos/pfat.c	/^    struct Mutex lock;$/;"	m	struct:PFAT_Instance	typeref:struct:PFAT_Instance::Mutex	file:
lprogdebug	src/geekos/lprog.c	/^static int lprogdebug = 0;$/;"	v	file:
m_info	include/geekos/elf.h	/^  Elf32_Word m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon36
m_info	include/geekos/elf.h	/^  Elf64_Xword m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon37
m_poffset	include/geekos/elf.h	/^  Elf32_Word m_poffset;		\/* Symbol offset.  *\/$/;"	m	struct:__anon36
m_poffset	include/geekos/elf.h	/^  Elf64_Xword m_poffset;	\/* Symbol offset.  *\/$/;"	m	struct:__anon37
m_repeat	include/geekos/elf.h	/^  Elf32_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon36
m_repeat	include/geekos/elf.h	/^  Elf64_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon37
m_stride	include/geekos/elf.h	/^  Elf32_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon36
m_stride	include/geekos/elf.h	/^  Elf64_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon37
m_value	include/geekos/elf.h	/^  Elf32_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon36
m_value	include/geekos/elf.h	/^  Elf64_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon37
magic	include/geekos/pfat.h	/^    int magic;			\/* id to tell the type of filesystem *\/$/;"	m	struct:__anon2
main	src/geekos/bget.c	/^int main()$/;"	f
main	src/tools/buildFat.c	/^int main(int argc, char *argv[])$/;"	f
main	src/user/a.c	/^int main(int argc, char** argv)$/;"	f
max_sector	src/geekos/fd_boot.asm	/^max_sector: dw 0$/;"	d
memSizeKB	include/geekos/bootinfo.h	/^    int memSizeKB;	 \/* number of KB, as reported by int 15h *\/$/;"	m	struct:Boot_Info
mem_size_kbytes	src/geekos/setup.asm	/^mem_size_kbytes: dw 0$/;"	d
memcmp	src/common/string.c	/^int memcmp(const void *s1_, const void *s2_, size_t n)$/;"	f
memcpy	src/common/string.c	/^void* memcpy(void *dst, const void* src, size_t n)$/;"	f
memmove	src/common/memmove.c	/^memmove(void *d, const void *s, size_t n)$/;"	f
memset	src/common/string.c	/^void* memset(void* s, int c, size_t n)$/;"	f
mode	include/geekos/vfs.h	/^    int mode;			 \/* Mode (read vs. write). *\/$/;"	m	struct:File
mountPoint	include/geekos/vfs.h	/^    struct Mount_Point *mountPoint; \/* Mounted filesystem file is part of. *\/$/;"	m	struct:File	typeref:struct:File::Mount_Point
n	src/common/string.c	/^    size_t n, size;$/;"	m	struct:String_Output_Sink	file:
n_descsz	include/geekos/elf.h	/^  Elf32_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon34
n_descsz	include/geekos/elf.h	/^  Elf64_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon35
n_namesz	include/geekos/elf.h	/^  Elf32_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon34
n_namesz	include/geekos/elf.h	/^  Elf64_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon35
n_type	include/geekos/elf.h	/^  Elf32_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon34
n_type	include/geekos/elf.h	/^  Elf64_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon35
name	include/geekos/blockdev.h	/^    char name[BLOCKDEV_MAX_NAME_LEN];$/;"	m	struct:Block_Device
name	include/geekos/fileio.h	/^    char name[1024];$/;"	m	struct:VFS_Dir_Entry
next	src/geekos/bget.c	/^static ulong_t int next = 1;$/;"	v	file:
numArgs	src/geekos/screen.c	/^    int numArgs;$/;"	m	struct:Console_State	file:
numBlocks	src/geekos/pfat.c	/^    ulong_t numBlocks;			 \/* Number of blocks used by file *\/$/;"	m	struct:PFAT_File	file:
numCylinders	src/geekos/bootsect.asm	/^numCylinders:	dw 0$/;"	d
numDrives	src/geekos/ide.c	/^static int numDrives;$/;"	v	file:
numHeads	src/geekos/bootsect.asm	/^numHeads:		dw HEADS$/;"	d
numSectors	include/geekos/vfs.h	/^    ulong_t numSectors;		 \/* Number of sectors in paging file. *\/$/;"	m	struct:Paging_Device
numTicks	include/geekos/kthread.h	/^    volatile ulong_t numTicks;		 \/* offset 4 *\/$/;"	m	struct:Kernel_Thread
num_BytesPerSector	src/geekos/ide.c	/^    short num_BytesPerSector;$/;"	m	struct:__anon47	file:
num_Cylinders	src/geekos/ide.c	/^    short num_Cylinders;$/;"	m	struct:__anon47	file:
num_Heads	src/geekos/ide.c	/^    short num_Heads;$/;"	m	struct:__anon47	file:
num_SectorsPerTrack	src/geekos/ide.c	/^    short num_SectorsPerTrack;$/;"	m	struct:__anon47	file:
num_retries	src/geekos/bootsect.asm	/^num_retries: db 0$/;"	d
num_retries	src/geekos/fd_boot.asm	/^num_retries: db 0$/;"	d
numdget	src/geekos/bget.c	/^static long numdget = 0, numdrel = 0; \/* Number of direct gets and rels *\/$/;"	v	file:
numdrel	src/geekos/bget.c	/^static long numdget = 0, numdrel = 0; \/* Number of direct gets and rels *\/$/;"	v	file:
numget	src/geekos/bget.c	/^static long numget = 0, numrel = 0;   \/* Number of bget() and brel() calls *\/$/;"	v	file:
numpblk	src/geekos/bget.c	/^static long numpblk = 0;	      \/* Number of pool blocks *\/$/;"	v	file:
numpget	src/geekos/bget.c	/^static long numpget = 0, numprel = 0; \/* Number of block gets and rels *\/$/;"	v	file:
numprel	src/geekos/bget.c	/^static long numpget = 0, numprel = 0; \/* Number of block gets and rels *\/$/;"	v	file:
numrel	src/geekos/bget.c	/^static long numget = 0, numrel = 0;   \/* Number of bget() and brel() calls *\/$/;"	v	file:
o	src/common/string.c	/^    struct Output_Sink o;$/;"	m	struct:String_Output_Sink	typeref:struct:String_Output_Sink::Output_Sink	file:
offsetHigh	include/geekos/idt.h	/^    ushort_t offsetHigh;$/;"	m	struct:Interrupt_Gate
offsetLow	include/geekos/idt.h	/^    ushort_t offsetLow;$/;"	m	struct:Interrupt_Gate
ops	include/geekos/blockdev.h	/^    struct Block_Device_Ops *ops;$/;"	m	struct:Block_Device	typeref:struct:Block_Device::Block_Device_Ops
ops	include/geekos/vfs.h	/^    struct File_Ops *ops;	 \/* Operations that can be performed on the file. *\/$/;"	m	struct:File	typeref:struct:File::File_Ops
ops	include/geekos/vfs.h	/^    struct Mount_Point_Ops *ops; \/* Operations that can be performed on the mount. *\/$/;"	m	struct:Mount_Point	typeref:struct:Mount_Point::Mount_Point_Ops
ops	src/geekos/vfs.c	/^    struct Filesystem_Ops *ops;$/;"	m	struct:Filesystem	typeref:struct:Filesystem::Filesystem_Ops	file:
owner	include/geekos/kthread.h	/^    struct Kernel_Thread* owner;$/;"	m	struct:Kernel_Thread	typeref:struct:Kernel_Thread::Kernel_Thread
owner	include/geekos/synch.h	/^    struct Kernel_Thread* owner;$/;"	m	struct:Mutex	typeref:struct:Mutex::Kernel_Thread
p_align	include/geekos/elf.h	/^  Elf32_Word	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon16
p_align	include/geekos/elf.h	/^  Elf64_Xword	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon17
p_filesz	include/geekos/elf.h	/^  Elf32_Word	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon16
p_filesz	include/geekos/elf.h	/^  Elf64_Xword	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon17
p_flags	include/geekos/elf.h	/^  Elf32_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon16
p_flags	include/geekos/elf.h	/^  Elf64_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon17
p_memsz	include/geekos/elf.h	/^  Elf32_Word	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon16
p_memsz	include/geekos/elf.h	/^  Elf64_Xword	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon17
p_offset	include/geekos/elf.h	/^  Elf32_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon16
p_offset	include/geekos/elf.h	/^  Elf64_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon17
p_paddr	include/geekos/elf.h	/^  Elf32_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon16
p_paddr	include/geekos/elf.h	/^  Elf64_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon17
p_type	include/geekos/elf.h	/^  Elf32_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon16
p_type	include/geekos/elf.h	/^  Elf64_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon17
p_vaddr	include/geekos/elf.h	/^  Elf32_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon16
p_vaddr	include/geekos/elf.h	/^  Elf64_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon17
params	src/geekos/floppy.c	/^    struct Floppy_Parameters *params;$/;"	m	struct:Floppy_Drive	typeref:struct:Floppy_Drive::Floppy_Parameters	file:
pathPrefix	include/geekos/vfs.h	/^    char *pathPrefix;		 \/* Path prefix where fs is mounted. *\/$/;"	m	struct:Mount_Point
permission	include/geekos/fileio.h	/^    uint_t permission:4;$/;"	m	struct:VFS_ACL_Entry
pid	include/geekos/kthread.h	/^    int pid;$/;"	m	struct:Kernel_Thread
pool_len	src/geekos/bget.c	/^static bufsize pool_len = 0;	      \/* 0: no bpool calls have been made$/;"	v	file:
pop	src/geekos/lowlevel.asm	/^	pop	ds$/;"	d
pop	src/geekos/lspawn.asm	/^	pop ds$/;"	d
prefix	include/geekos/fileio.h	/^    char prefix[VFS_MAX_PATH_LEN+1];	\/* Directory prefix to mount on: e.g., "\/d". *\/$/;"	m	struct:VFS_Mount_Request
present	include/geekos/idt.h	/^    unsigned present : 1;$/;"	m	struct:Interrupt_Gate
present	include/geekos/segment.h	/^    uint_t present     : 1  PACKED ;$/;"	m	struct:Segment_Descriptor
prevfree	src/geekos/bget.c	/^    bufsize prevfree;		      \/* Relative link back to previous$/;"	m	struct:bhead	file:
priority	include/geekos/kthread.h	/^    int priority;$/;"	m	struct:Kernel_Thread
protect	src/geekos/bget.c	/^static int protect = 0; 	      \/* Disable compaction during bgetr() *\/$/;"	v	file:
push	src/geekos/lowlevel.asm	/^	push	ds$/;"	d
push	src/geekos/lspawn.asm	/^	push    ds	$/;"	d
ql	src/geekos/bget.c	/^    struct qlinks ql;		      \/* Links on free list *\/$/;"	m	struct:bfhead	typeref:struct:bfhead::qlinks	file:
qlinks	src/geekos/bget.c	/^struct qlinks {$/;"	s	file:
r_addend	include/geekos/elf.h	/^  Elf32_Sword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon14
r_addend	include/geekos/elf.h	/^  Elf64_Sxword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon15
r_info	include/geekos/elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon12
r_info	include/geekos/elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon14
r_info	include/geekos/elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon13
r_info	include/geekos/elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon15
r_offset	include/geekos/elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon12
r_offset	include/geekos/elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon14
r_offset	include/geekos/elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon13
r_offset	include/geekos/elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon15
rand	src/geekos/bget.c	/^int rand()$/;"	f
rank_char	src/common/fmtout.c	/^  rank_char	= -2,$/;"	e	enum:ranks	file:
rank_int	src/common/fmtout.c	/^  rank_int 	= 0,$/;"	e	enum:ranks	file:
rank_long	src/common/fmtout.c	/^  rank_long	= 1,$/;"	e	enum:ranks	file:
rank_short	src/common/fmtout.c	/^  rank_short	= -1,$/;"	e	enum:ranks	file:
ranks	src/common/fmtout.c	/^enum ranks {$/;"	g	file:
readDone	src/geekos/bootsect.asm	/^readDone:$/;"	l
readDriveConfig	src/geekos/ide.c	/^static int readDriveConfig(int drive)$/;"	f	file:
readOnly	include/geekos/pfat.h	/^    char readOnly:1;$/;"	m	struct:__anon3
readRetry	src/geekos/bootsect.asm	/^readRetry:$/;"	l
refCount	include/geekos/kthread.h	/^    int refCount;$/;"	m	struct:Kernel_Thread
relfcn	src/geekos/bget.c	/^static void (*relfcn) _((void *buf)) = NULL;$/;"	v	file:
requestQueue	include/geekos/blockdev.h	/^    struct Block_Request_List *requestQueue;$/;"	m	struct:Block_Device	typeref:struct:Block_Device::Block_Request_List
reserved	include/geekos/idt.h	/^    unsigned reserved : 5;$/;"	m	struct:Interrupt_Gate
reserved	include/geekos/segment.h	/^    uint_t reserved    : 1  PACKED ;  \/* set to zero *\/$/;"	m	struct:Segment_Descriptor
reserved1	include/geekos/tss.h	/^    ushort_t reserved1;$/;"	m	struct:TSS
reserved10	include/geekos/tss.h	/^    ushort_t reserved10;$/;"	m	struct:TSS
reserved11	include/geekos/tss.h	/^    ushort_t reserved11;$/;"	m	struct:TSS
reserved12	include/geekos/tss.h	/^    uint_t reserved12 : 15;$/;"	m	struct:TSS
reserved2	include/geekos/tss.h	/^    ushort_t reserved2;$/;"	m	struct:TSS
reserved3	include/geekos/tss.h	/^    ushort_t reserved3;$/;"	m	struct:TSS
reserved4	include/geekos/tss.h	/^    ushort_t reserved4;$/;"	m	struct:TSS
reserved5	include/geekos/tss.h	/^    ushort_t reserved5;$/;"	m	struct:TSS
reserved6	include/geekos/tss.h	/^    ushort_t reserved6;$/;"	m	struct:TSS
reserved7	include/geekos/tss.h	/^    ushort_t reserved7;$/;"	m	struct:TSS
reserved8	include/geekos/tss.h	/^    ushort_t reserved8;$/;"	m	struct:TSS
reserved9	include/geekos/tss.h	/^    ushort_t reserved9;$/;"	m	struct:TSS
ri_cprmask	include/geekos/elf.h	/^  Elf32_Word ri_cprmask[4];		\/* Coprocessor registers used.  *\/$/;"	m	struct:__anon41
ri_gp_value	include/geekos/elf.h	/^  Elf32_Sword ri_gp_value;		\/* $gp register value.  *\/$/;"	m	struct:__anon41
ri_gprmask	include/geekos/elf.h	/^  Elf32_Word ri_gprmask;		\/* General registers used.  *\/$/;"	m	struct:__anon41
rootDir	src/geekos/pfat.c	/^    directoryEntry *rootDir;$/;"	m	struct:PFAT_Instance	file:
rootDirEntry	src/geekos/pfat.c	/^    directoryEntry rootDirEntry;$/;"	m	struct:PFAT_Instance	file:
rootDirectoryCount	include/geekos/pfat.h	/^    int rootDirectoryCount;	\/* number of items in the directory *\/$/;"	m	struct:__anon2
rootDirectoryOffset	include/geekos/pfat.h	/^    int rootDirectoryOffset;	\/* offset in sectors of root directory *\/$/;"	m	struct:__anon2
roundToNextBlock	src/tools/buildFat.c	/^int roundToNextBlock(int x)$/;"	f
row	src/geekos/screen.c	/^    int row, col;$/;"	m	struct:Console_State	file:
s	src/common/string.c	/^    char *s;$/;"	m	struct:String_Output_Sink	file:
s1	src/user/a.c	/^char  s1[40] = "Hi ! This is the first string\\n";$/;"	v
s2	src/user/a.c	/^char  s2[40] = "Hi ! This is the second string\\n"; $/;"	v
s_GDT	src/geekos/gdt.c	/^static struct Segment_Descriptor s_GDT[ NUM_GDT_ENTRIES ];$/;"	v	typeref:struct:Segment_Descriptor	file:
s_IDT	src/geekos/idt.c	/^static union IDT_Descriptor s_IDT[ NUM_IDT_ENTRIES ];$/;"	v	typeref:union:IDT_Descriptor	file:
s_allThreadList	src/geekos/kthread.c	/^static struct All_Thread_List s_allThreadList;$/;"	v	typeref:struct:All_Thread_List	file:
s_allocated	src/geekos/dma.c	/^static uchar_t s_allocated;	 \/*!< Which channels have been allocated. *\/$/;"	v	file:
s_ansiToVgaColor	src/geekos/screen.c	/^static const uchar_t s_ansiToVgaColor[] = {$/;"	v	file:
s_blockdevLock	src/geekos/blockdev.c	/^static struct Mutex s_blockdevLock;$/;"	v	typeref:struct:Mutex	file:
s_cons	src/geekos/screen.c	/^static struct Console_State s_cons;$/;"	v	typeref:struct:Console_State	file:
s_deviceList	src/geekos/blockdev.c	/^static struct Block_Device_List s_deviceList;$/;"	v	typeref:struct:Block_Device_List	file:
s_dmaPageRegisterList	src/geekos/dma.c	/^static const uchar_t s_dmaPageRegisterList[] = {$/;"	v	file:
s_driveTable	src/geekos/floppy.c	/^struct Floppy_Drive s_driveTable[2];$/;"	v	typeref:struct:Floppy_Drive
s_filesystemList	src/geekos/vfs.c	/^static struct Filesystem_List s_filesystemList;$/;"	v	typeref:struct:Filesystem_List	file:
s_floppyDeviceOps	src/geekos/floppy.c	/^static struct Block_Device_Ops s_floppyDeviceOps = {$/;"	v	typeref:struct:Block_Device_Ops	file:
s_floppyParamsTable	src/geekos/floppy.c	/^static struct Floppy_Parameters s_floppyParamsTable[] = {$/;"	v	typeref:struct:Floppy_Parameters	file:
s_floppyRequestQueue	src/geekos/floppy.c	/^static struct Block_Request_List s_floppyRequestQueue;$/;"	v	typeref:struct:Block_Request_List	file:
s_floppyWaitQueue	src/geekos/floppy.c	/^static struct Thread_Queue s_floppyWaitQueue;$/;"	v	typeref:struct:Thread_Queue	file:
s_freeList	src/geekos/mem.c	/^static struct Page_List s_freeList;$/;"	v	typeref:struct:Page_List	file:
s_graveyardQueue	src/geekos/kthread.c	/^static struct Thread_Queue s_graveyardQueue;$/;"	v	typeref:struct:Thread_Queue	file:
s_ideDeviceOps	src/geekos/ide.c	/^static struct Block_Device_Ops s_ideDeviceOps = {$/;"	v	typeref:struct:Block_Device_Ops	file:
s_ideRequestQueue	src/geekos/ide.c	/^struct Block_Request_List s_ideRequestQueue;$/;"	v	typeref:struct:Block_Request_List
s_ideWaitQueue	src/geekos/ide.c	/^struct Thread_Queue s_ideWaitQueue;$/;"	v	typeref:struct:Thread_Queue
s_interruptOccurred	src/geekos/floppy.c	/^static volatile int s_interruptOccurred;$/;"	v	file:
s_irqMask	src/geekos/irq.c	/^static ushort_t s_irqMask = 0xfffb;$/;"	v	file:
s_mountPointList	src/geekos/vfs.c	/^static struct Mount_Point_List s_mountPointList;$/;"	v	typeref:struct:Mount_Point_List	file:
s_numAllocated	src/geekos/gdt.c	/^static int s_numAllocated = 0;$/;"	v	file:
s_numPages	src/geekos/mem.c	/^int unsigned s_numPages;$/;"	v
s_outputSink	src/geekos/screen.c	/^static struct Output_Sink s_outputSink = { &Print_Emit, &Print_Finish };$/;"	v	typeref:struct:Output_Sink	file:
s_pagingDevice	src/geekos/vfs.c	/^static struct Paging_Device *s_pagingDevice;$/;"	v	typeref:struct:Paging_Device	file:
s_pfatDirOps	src/geekos/pfat.c	/^static struct File_Ops s_pfatDirOps = {$/;"	v	typeref:struct:File_Ops	file:
s_pfatFileOps	src/geekos/pfat.c	/^static struct File_Ops s_pfatFileOps = {$/;"	v	typeref:struct:File_Ops	file:
s_pfatFilesystemOps	src/geekos/pfat.c	/^static struct Filesystem_Ops s_pfatFilesystemOps = {$/;"	v	typeref:struct:Filesystem_Ops	file:
s_pfatMountPointOps	src/geekos/pfat.c	/^struct Mount_Point_Ops s_pfatMountPointOps = {$/;"	v	typeref:struct:Mount_Point_Ops
s_queue	src/geekos/keyboard.c	/^static Keycode s_queue[QUEUE_SIZE];$/;"	v	file:
s_queueHead	src/geekos/keyboard.c	/^static int s_queueHead, s_queueTail;$/;"	v	file:
s_queueTail	src/geekos/keyboard.c	/^static int s_queueHead, s_queueTail;$/;"	v	file:
s_reaperWaitQueue	src/geekos/kthread.c	/^static struct Thread_Queue s_reaperWaitQueue;$/;"	v	typeref:struct:Thread_Queue	file:
s_runQueue	src/geekos/kthread.c	/^static struct Thread_Queue s_runQueue;$/;"	v	typeref:struct:Thread_Queue	file:
s_scanTableNoShift	src/geekos/keyboard.c	/^static const Keycode s_scanTableNoShift[] = {$/;"	v	file:
s_scanTableWithShift	src/geekos/keyboard.c	/^static const Keycode s_scanTableWithShift[] = {$/;"	v	file:
s_shiftState	src/geekos/keyboard.c	/^static unsigned s_shiftState = 0;$/;"	v	file:
s_spinCountPerTick	src/geekos/timer.c	/^static int s_spinCountPerTick;$/;"	v	file:
s_theTSS	src/geekos/tss.c	/^static struct TSS s_theTSS;$/;"	v	typeref:struct:TSS	file:
s_tlocalDestructors	src/geekos/kthread.c	/^static tlocal_destructor_t s_tlocalDestructors[MAX_TLOCAL_KEYS];$/;"	v	file:
s_tlocalKeyCounter	src/geekos/kthread.c	/^static unsigned int s_tlocalKeyCounter = 0;$/;"	v	file:
s_transferBuf	src/geekos/floppy.c	/^static uchar_t *s_transferBuf;$/;"	v	file:
s_tssDesc	src/geekos/tss.c	/^static struct Segment_Descriptor *s_tssDesc;$/;"	v	typeref:struct:Segment_Descriptor	file:
s_tssSelector	src/geekos/tss.c	/^static ushort_t s_tssSelector;$/;"	v	file:
s_vfsLock	src/geekos/vfs.c	/^static struct Mutex s_vfsLock;$/;"	v	typeref:struct:Mutex	file:
s_waitQueue	src/geekos/keyboard.c	/^static struct Thread_Queue s_waitQueue;$/;"	v	typeref:struct:Thread_Queue	file:
saveCol	src/geekos/screen.c	/^    int saveRow, saveCol;$/;"	m	struct:Console_State	file:
saveRow	src/geekos/screen.c	/^    int saveRow, saveCol;$/;"	m	struct:Console_State	file:
sec	src/geekos/bootsect.asm	/^sec: dw 0$/;"	d
sec	src/geekos/fd_boot.asm	/^sec: dw 0$/;"	d
sec_count	src/geekos/bootsect.asm	/^sec_count: dw 0$/;"	d
sec_count	src/geekos/fd_boot.asm	/^sec_count: dw 0$/;"	d
section	include/geekos/elf.h	/^  Elf32_Section section;	\/* Section header index of section affected,$/;"	m	struct:__anon42
sectorSizeCode	src/geekos/floppy.c	/^    int sectorSizeCode;$/;"	m	struct:Floppy_Parameters	file:
sectors	src/geekos/floppy.c	/^    int sectors;$/;"	m	struct:Floppy_Parameters	file:
sectorsPerTrack	src/geekos/bootsect.asm	/^sectorsPerTrack:	dw SECTORS_PER_TRACK$/;"	d
segmentSelector	include/geekos/idt.h	/^    ushort_t segmentSelector;$/;"	m	struct:Interrupt_Gate
setupSize	include/geekos/pfat.h	/^    short setupSize;		\/* size in sectors of secondary loader *\/$/;"	m	struct:__anon2
setupSize	src/geekos/bootsect.asm	/^setupSize:$/;"	l
setupSize	src/geekos/fd_boot.asm	/^setupSize:$/;"	l
setupStart	include/geekos/pfat.h	/^    short setupStart;		\/* first sector of secondary loader *\/$/;"	m	struct:__anon2
setupStart	src/geekos/bootsect.asm	/^setupStart:		$/;"	l
setupStart	src/geekos/fd_boot.asm	/^setupStart:		$/;"	l
setup_32	src/geekos/setup.asm	/^setup_32:$/;"	l
sh_addr	include/geekos/elf.h	/^  Elf32_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon6
sh_addr	include/geekos/elf.h	/^  Elf64_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon7
sh_addralign	include/geekos/elf.h	/^  Elf32_Word	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon6
sh_addralign	include/geekos/elf.h	/^  Elf64_Xword	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon7
sh_entsize	include/geekos/elf.h	/^  Elf32_Word	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon6
sh_entsize	include/geekos/elf.h	/^  Elf64_Xword	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon7
sh_flags	include/geekos/elf.h	/^  Elf32_Word	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon6
sh_flags	include/geekos/elf.h	/^  Elf64_Xword	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon7
sh_info	include/geekos/elf.h	/^  Elf32_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon6
sh_info	include/geekos/elf.h	/^  Elf64_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon7
sh_link	include/geekos/elf.h	/^  Elf32_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon6
sh_link	include/geekos/elf.h	/^  Elf64_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon7
sh_name	include/geekos/elf.h	/^  Elf32_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon6
sh_name	include/geekos/elf.h	/^  Elf64_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon7
sh_offset	include/geekos/elf.h	/^  Elf32_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon6
sh_offset	include/geekos/elf.h	/^  Elf64_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon7
sh_size	include/geekos/elf.h	/^  Elf32_Word	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon6
sh_size	include/geekos/elf.h	/^  Elf64_Xword	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon7
sh_type	include/geekos/elf.h	/^  Elf32_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon6
sh_type	include/geekos/elf.h	/^  Elf64_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon7
si_boundto	include/geekos/elf.h	/^  Elf32_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon10
si_boundto	include/geekos/elf.h	/^  Elf64_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon11
si_flags	include/geekos/elf.h	/^  Elf32_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon10
si_flags	include/geekos/elf.h	/^  Elf64_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon11
signature	include/geekos/idt.h	/^    unsigned signature : 8;$/;"	m	struct:Interrupt_Gate
size	include/geekos/elf.h	/^  unsigned char size;		\/* Size of descriptor, including header.  *\/$/;"	m	struct:__anon42
size	include/geekos/fileio.h	/^    int size;$/;"	m	struct:VFS_File_Stat
size	src/common/string.c	/^    size_t n, size;$/;"	m	struct:String_Output_Sink	file:
sizeHigh	include/geekos/segment.h	/^    uint_t sizeHigh    : 4  PACKED ;$/;"	m	struct:Segment_Descriptor
snprintf	src/common/string.c	/^int snprintf(char *s, size_t size, const char *fmt, ...)$/;"	f
srand	src/geekos/bget.c	/^void srand(seed)$/;"	f
ss	include/geekos/tss.h	/^    ushort_t ss;$/;"	m	struct:TSS
ss0	include/geekos/tss.h	/^    ushort_t ss0;$/;"	m	struct:TSS
ss1	include/geekos/tss.h	/^    ushort_t ss1;$/;"	m	struct:TSS
ss2	include/geekos/tss.h	/^    ushort_t ss2;$/;"	m	struct:TSS
ssUser	include/geekos/int.h	/^    uint_t ssUser;$/;"	m	struct:User_Interrupt_State
st_info	include/geekos/elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon8
st_info	include/geekos/elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon9
st_name	include/geekos/elf.h	/^  Elf32_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon8
st_name	include/geekos/elf.h	/^  Elf64_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon9
st_other	include/geekos/elf.h	/^  unsigned char	st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon8
st_other	include/geekos/elf.h	/^  unsigned char st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon9
st_shndx	include/geekos/elf.h	/^  Elf32_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon8
st_shndx	include/geekos/elf.h	/^  Elf64_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon9
st_size	include/geekos/elf.h	/^  Elf32_Word	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon8
st_size	include/geekos/elf.h	/^  Elf64_Xword	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon9
st_value	include/geekos/elf.h	/^  Elf32_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon8
st_value	include/geekos/elf.h	/^  Elf64_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon9
stackPage	include/geekos/kthread.h	/^    void* stackPage;$/;"	m	struct:Kernel_Thread
startSector	include/geekos/vfs.h	/^    ulong_t startSector;	 \/* Start sector of paging file. *\/$/;"	m	struct:Paging_Device
start_setup	src/geekos/setup.asm	/^start_setup:$/;"	l
state	include/geekos/blockdev.h	/^    volatile enum Request_State state;$/;"	m	struct:Block_Request	typeref:enum:Block_Request::Request_State
state	include/geekos/int.h	/^    struct Interrupt_State state;$/;"	m	struct:User_Interrupt_State	typeref:struct:User_Interrupt_State::Interrupt_State
state	include/geekos/synch.h	/^    int state;$/;"	m	struct:Mutex
state	src/geekos/screen.c	/^    enum State state;$/;"	m	struct:Console_State	typeref:enum:Console_State::State	file:
stats	include/geekos/fileio.h	/^    struct VFS_File_Stat stats;$/;"	m	struct:VFS_Dir_Entry	typeref:struct:VFS_Dir_Entry::VFS_File_Stat
stats	src/geekos/bget.c	/^static void stats(when)$/;"	f	file:
strcat	src/common/string.c	/^char *strcat(char *s1, const char *s2)$/;"	f
strchr	src/common/string.c	/^char *strchr(const char *s, int c)$/;"	f
strcmp	src/common/string.c	/^int strcmp(const char* s1, const char* s2)$/;"	f
strcpy	src/common/string.c	/^char *strcpy(char *dest, const char *src)$/;"	f
strdup	src/common/string.c	/^char *strdup(const char *s1)$/;"	f
strlen	src/common/string.c	/^size_t strlen(const char* s)$/;"	f
strncmp	src/common/string.c	/^int strncmp(const char* s1, const char* s2, size_t limit)$/;"	f
strncpy	src/common/string.c	/^char *strncpy(char *dest, const char *src, size_t limit)$/;"	f
strnlen	src/common/string.c	/^size_t strnlen(const char *s, size_t maxlen)$/;"	f
strpbrk	src/common/string.c	/^char *strpbrk(const char *s, const char *accept)$/;"	f
strrchr	src/common/string.c	/^char *strrchr(const char *s, int c)$/;"	f
system	include/geekos/segment.h	/^    uint_t system      : 1  PACKED ;$/;"	m	struct:Segment_Descriptor
systemFile	include/geekos/pfat.h	/^    char systemFile:1;$/;"	m	struct:__anon3
time	include/geekos/pfat.h	/^    short time;$/;"	m	struct:__anon3
tlocalData	include/geekos/kthread.h	/^    const void* tlocalData[MAX_TLOCAL_KEYS];$/;"	m	struct:Kernel_Thread
tlocal_destructor_t	include/geekos/kthread.h	/^typedef void (*tlocal_destructor_t)(void *);$/;"	t
tlocal_key_t	include/geekos/kthread.h	/^typedef unsigned int tlocal_key_t;$/;"	t
totalloc	src/geekos/bget.c	/^static bufsize totalloc = 0;	      \/* Total space currently allocated *\/$/;"	v	file:
track	src/geekos/bootsect.asm	/^track: dw 0$/;"	d
track	src/geekos/fd_boot.asm	/^track: dw 0$/;"	d
tsize	src/geekos/bget.c	/^    bufsize tsize;		      \/* Total size, including overhead *\/$/;"	m	struct:bdhead	file:
type	include/geekos/blockdev.h	/^    enum Request_Type type;$/;"	m	struct:Block_Request	typeref:enum:Block_Request::Request_Type
type	include/geekos/segment.h	/^    uint_t type        : 4  PACKED ;$/;"	m	struct:Segment_Descriptor
uchar_t	include/geekos/ktypes.h	/^typedef unsigned char uchar_t;$/;"	t
uid	include/geekos/fileio.h	/^    uint_t uid:28;$/;"	m	struct:VFS_ACL_Entry
uint_t	include/geekos/ktypes.h	/^typedef unsigned int uint_t;$/;"	t
uintmax_t	src/common/fmtout.c	/^typedef unsigned long uintmax_t;$/;"	t	file:
uintptr_t	src/common/fmtout.c	/^typedef unsigned long uintptr_t;$/;"	t	file:
ulong_t	include/geekos/ktypes.h	/^typedef unsigned long ulong_t;$/;"	t
unit	include/geekos/blockdev.h	/^    int unit;$/;"	m	struct:Block_Device
userContext	include/geekos/kthread.h	/^    struct User_Context* userContext;$/;"	m	struct:Kernel_Thread	typeref:struct:Kernel_Thread::User_Context
ushort_t	include/geekos/ktypes.h	/^typedef unsigned short ushort_t;$/;"	t
validBlockSet	src/geekos/pfat.c	/^    struct Bit_Set *validBlockSet;	 \/* Which data blocks of cache are valid *\/$/;"	m	struct:PFAT_File	typeref:struct:PFAT_File::Bit_Set	file:
vd_aux	include/geekos/elf.h	/^  Elf32_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon22
vd_aux	include/geekos/elf.h	/^  Elf64_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon23
vd_cnt	include/geekos/elf.h	/^  Elf32_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon22
vd_cnt	include/geekos/elf.h	/^  Elf64_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon23
vd_flags	include/geekos/elf.h	/^  Elf32_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon22
vd_flags	include/geekos/elf.h	/^  Elf64_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon23
vd_hash	include/geekos/elf.h	/^  Elf32_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon22
vd_hash	include/geekos/elf.h	/^  Elf64_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon23
vd_ndx	include/geekos/elf.h	/^  Elf32_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon22
vd_ndx	include/geekos/elf.h	/^  Elf64_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon23
vd_next	include/geekos/elf.h	/^  Elf32_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon22
vd_next	include/geekos/elf.h	/^  Elf64_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon23
vd_version	include/geekos/elf.h	/^  Elf32_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon22
vd_version	include/geekos/elf.h	/^  Elf64_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon23
vda_name	include/geekos/elf.h	/^  Elf32_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon24
vda_name	include/geekos/elf.h	/^  Elf64_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon25
vda_next	include/geekos/elf.h	/^  Elf32_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon24
vda_next	include/geekos/elf.h	/^  Elf64_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon25
virtSpace	src/geekos/lprog.c	/^static void * virtSpace;$/;"	v	file:
vn_aux	include/geekos/elf.h	/^  Elf32_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon26
vn_aux	include/geekos/elf.h	/^  Elf64_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon27
vn_cnt	include/geekos/elf.h	/^  Elf32_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon26
vn_cnt	include/geekos/elf.h	/^  Elf64_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon27
vn_file	include/geekos/elf.h	/^  Elf32_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon26
vn_file	include/geekos/elf.h	/^  Elf64_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon27
vn_next	include/geekos/elf.h	/^  Elf32_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon26
vn_next	include/geekos/elf.h	/^  Elf64_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon27
vn_version	include/geekos/elf.h	/^  Elf32_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon26
vn_version	include/geekos/elf.h	/^  Elf64_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon27
vna_flags	include/geekos/elf.h	/^  Elf32_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon28
vna_flags	include/geekos/elf.h	/^  Elf64_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon29
vna_hash	include/geekos/elf.h	/^  Elf32_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon28
vna_hash	include/geekos/elf.h	/^  Elf64_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon29
vna_name	include/geekos/elf.h	/^  Elf32_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon28
vna_name	include/geekos/elf.h	/^  Elf64_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon29
vna_next	include/geekos/elf.h	/^  Elf32_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon28
vna_next	include/geekos/elf.h	/^  Elf64_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon29
vna_other	include/geekos/elf.h	/^  Elf32_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon28
vna_other	include/geekos/elf.h	/^  Elf64_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon29
volumeLabel	include/geekos/pfat.h	/^    char volumeLabel:1;$/;"	m	struct:__anon3
waitQueue	include/geekos/blockdev.h	/^    struct Thread_Queue *waitQueue;$/;"	m	struct:Block_Device	typeref:struct:Block_Device::Thread_Queue
waitQueue	include/geekos/blockdev.h	/^    struct Thread_Queue waitQueue;$/;"	m	struct:Block_Request	typeref:struct:Block_Request::Thread_Queue
waitQueue	include/geekos/synch.h	/^    struct Thread_Queue waitQueue;$/;"	m	struct:Condition	typeref:struct:Condition::Thread_Queue
waitQueue	include/geekos/synch.h	/^    struct Thread_Queue waitQueue;$/;"	m	struct:Mutex	typeref:struct:Mutex::Thread_Queue
